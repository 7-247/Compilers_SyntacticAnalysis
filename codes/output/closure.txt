单个项目的闭包：
0     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'number'}
   {0, 5504, 258, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 86, 215, 344, 346, 860, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
1     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'if'}
   {1, 5505, 259, 260, 5506, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 87, 216, 345, 346, 861, 862, 349, 608, 865, 360, 876, 371, 887, 376, 892}
2     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'float'}
   {2, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 88, 217, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
3     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '{'}
   {5506, 3, 260, 261, 5507, 263, 5509, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 89, 346, 347, 218, 349, 862, 863, 608, 865, 360, 876, 371, 887, 376, 892}
4     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*'}
   {5506, 4, 260, 262, 263, 5508, 5509, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 90, 346, 348, 349, 862, 219, 608, 864, 865, 360, 876, 371, 887, 376, 892}
5     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'double'}
   {5506, 260, 5, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 91, 220, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
6     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'identifier'}
   {5506, 260, 5509, 6, 263, 264, 5510, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 92, 349, 862, 350, 608, 865, 866, 221, 360, 876, 371, 887, 376, 892}
7     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '#'}
   {5506, 260, 5509, 7, 263, 265, 522, 5511, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 93, 862, 349, 608, 865, 351, 867, 222, 360, 876, 371, 887, 376, 892}
8     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ','}
   {5506, 260, 5509, 263, 8, 5512, 522, 266, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 94, 862, 608, 865, 352, 223, 868, 360, 876, 371, 887, 376, 892}
9     {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ')'}
   {5506, 260, 5509, 263, 9, 522, 267, 780, 5513, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 95, 608, 865, 353, 224, 869, 360, 876, 371, 887, 376, 892}
10    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-='}
   {5506, 260, 5509, 263, 10, 522, 780, 268, 5514, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 96, 608, 865, 354, 225, 870, 360, 876, 371, 887, 376, 892}
11    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'for'}
   {5506, 260, 5509, 263, 522, 11, 780, 269, 5515, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 97, 865, 355, 226, 871, 360, 876, 371, 887, 376, 892}
12    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>='}
   {5506, 260, 5509, 263, 522, 12, 780, 270, 5516, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 98, 227, 356, 872, 360, 876, 371, 887, 376, 892}
13    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'break'}
   {5506, 260, 5509, 263, 522, 780, 13, 5517, 271, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 99, 228, 357, 360, 873, 876, 371, 887, 376, 892}
14    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '^='}
   {5506, 260, 5509, 263, 522, 780, 14, 5518, 272, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 100, 229, 358, 360, 874, 876, 371, 887, 376, 892}
15    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '='}
   {5506, 260, 5509, 263, 522, 780, 15, 5519, 273, 274, 5520, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 101, 230, 359, 360, 875, 876, 371, 887, 376, 892}
16    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'char'}
   {5506, 260, 5509, 263, 522, 780, 16, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 102, 231, 360, 876, 371, 887, 376, 892}
17    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '&='}
   {5506, 260, 5509, 263, 522, 780, 5520, 17, 274, 275, 5521, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 103, 360, 361, 232, 876, 877, 371, 887, 376, 892}
18    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '!='}
   {5506, 260, 5509, 263, 522, 780, 5520, 18, 274, 276, 5522, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 104, 360, 362, 233, 876, 878, 371, 887, 376, 892}
19    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 19, 5523, 277, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 105, 234, 363, 876, 879, 371, 887, 376, 892}
20    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '=='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 20, 5524, 278, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 106, 235, 876, 364, 880, 371, 887, 376, 892}
21    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '&'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 21, 5525, 279, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 107, 876, 365, 236, 881, 371, 887, 376, 892}
22    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '}'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 22, 5526, 280, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 108, 876, 366, 237, 882, 371, 887, 376, 892}
23    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': ';'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 23, 5527, 281, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 109, 238, 367, 883, 371, 887, 376, 892}
24    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'while'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 24, 5528, 282, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 110, 239, 368, 371, 884, 887, 376, 892}
25    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '|='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 25, 5529, 283, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 111, 240, 369, 371, 885, 887, 376, 892}
26    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 26, 5530, 284, 285, 5531, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 112, 241, 370, 371, 886, 887, 376, 892}
27    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'int'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 27, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 113, 242, 371, 887, 376, 892}
28    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 28, 285, 286, 5532, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 376, 360, 876, 114, 371, 372, 243, 887, 888, 892}
29    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'continue'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 29, 287, 5533, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 115, 371, 373, 244, 887, 376, 889, 892}
30    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '^'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 30, 5534, 288, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 116, 245, 374, 887, 376, 890, 892}
31    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'else'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 31, 5535, 289, 290, 5536, 436, 694, 346, 349, 862, 375, 608, 865, 360, 876, 371, 117, 246, 887, 376, 891, 892}
32    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'void'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 32, 5536, 290, 436, 694, 346, 247, 349, 862, 608, 865, 360, 876, 371, 118, 887, 376, 892}
33    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 33, 290, 291, 5537, 436, 694, 119, 346, 349, 862, 608, 865, 248, 360, 876, 371, 887, 376, 377, 892, 893}
34    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '%'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 34, 290, 292, 5538, 436, 694, 346, 349, 862, 608, 865, 376, 360, 876, 371, 887, 120, 249, 378, 892, 894}
35    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 35, 5539, 293, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 121, 250, 379, 892, 895}
36    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-'}
   {896, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 36, 5540, 294, 436, 694, 380, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 122, 251, 892}
37    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '('}
   {897, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 37, 5541, 295, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 252, 887, 376, 123, 892, 381}
38    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>'}
   {898, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 38, 5542, 296, 436, 694, 346, 349, 862, 608, 865, 360, 876, 124, 371, 887, 376, 892, 253, 382}
39    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+='}
   {5506, 899, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 39, 5543, 297, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 125, 254, 383}
40    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'return'}
   {384, 5506, 260, 900, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 40, 5544, 298, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 126, 255}
41    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '%='}
   {256, 385, 5506, 260, 901, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 41, 5545, 299, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 127}
42    {'left': 'sstart', 'right': ['start'], 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<='}
   {128, 257, 5506, 386, 260, 5509, 902, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 42, 5546, 300, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
43    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'number'}
   {43}
44    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'if'}
   {44}
45    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'float'}
   {45}
46    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '{'}
   {46}
47    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*'}
   {47}
48    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'double'}
   {48}
49    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'identifier'}
   {49}
50    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '#'}
   {50}
51    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ','}
   {51}
52    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ')'}
   {52}
53    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-='}
   {53}
54    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'for'}
   {54}
55    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>='}
   {55}
56    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'break'}
   {56}
57    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '^='}
   {57}
58    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '='}
   {58}
59    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'char'}
   {59}
60    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '&='}
   {60}
61    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '!='}
   {61}
62    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*='}
   {62}
63    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '=='}
   {63}
64    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '&'}
   {64}
65    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '}'}
   {65}
66    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': ';'}
   {66}
67    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'while'}
   {67}
68    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '|='}
   {68}
69    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<'}
   {69}
70    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'int'}
   {70}
71    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/'}
   {71}
72    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'continue'}
   {72}
73    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '^'}
   {73}
74    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'else'}
   {74}
75    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'void'}
   {75}
76    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+'}
   {76}
77    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '%'}
   {77}
78    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/='}
   {78}
79    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-'}
   {79}
80    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '('}
   {80}
81    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>'}
   {81}
82    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+='}
   {82}
83    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'return'}
   {83}
84    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '%='}
   {84}
85    {'left': 'sstart', 'right': ['start'], 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<='}
   {85}
86    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'number'}
   {5504, 258, 5506, 260, 5509, 263, 522, 780, 5520, 274, 86, 344, 346, 5531, 860, 285, 862, 349, 608, 865, 290, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
87    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'if'}
   {5505, 5506, 259, 260, 5509, 263, 522, 780, 5520, 274, 87, 345, 346, 5531, 285, 861, 862, 608, 865, 290, 349, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
88    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'float'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 88, 346, 5531, 349, 285, 862, 608, 865, 290, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
89    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '{'}
   {5506, 5507, 260, 261, 5509, 263, 522, 780, 5520, 274, 89, 346, 347, 5531, 285, 862, 863, 608, 865, 290, 349, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
90    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*'}
   {5506, 260, 5508, 262, 263, 5509, 90, 522, 780, 5520, 274, 346, 5531, 348, 285, 862, 349, 608, 864, 865, 290, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
91    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'double'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 91, 349, 285, 862, 608, 865, 290, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
92    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'identifier'}
   {5506, 260, 5509, 5510, 263, 264, 522, 780, 5520, 274, 346, 5531, 92, 285, 862, 349, 608, 865, 866, 290, 350, 5536, 360, 876, 371, 436, 694, 887, 376, 892}
93    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '#'}
   {5506, 260, 5509, 263, 5511, 265, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 867, 351, 5536, 93, 360, 876, 371, 436, 694, 887, 376, 892}
94    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ','}
   {5506, 260, 5509, 263, 5512, 522, 266, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 352, 868, 5536, 94, 360, 876, 371, 436, 694, 887, 376, 892}
95    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ')'}
   {5506, 260, 5509, 263, 5513, 522, 267, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 353, 5536, 869, 95, 360, 876, 371, 436, 694, 887, 376, 892}
96    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-='}
   {5506, 260, 5509, 263, 522, 5514, 780, 268, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 354, 5536, 96, 870, 360, 876, 371, 436, 694, 887, 376, 892}
97    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'for'}
   {5506, 260, 5509, 263, 522, 5515, 780, 269, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 355, 5536, 97, 871, 360, 876, 371, 436, 694, 887, 376, 892}
98    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>='}
   {5506, 260, 5509, 263, 522, 780, 5516, 270, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 356, 98, 872, 360, 876, 371, 436, 694, 887, 376, 892}
99    {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'break'}
   {5506, 260, 5509, 263, 522, 780, 5517, 271, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 99, 357, 360, 873, 876, 371, 436, 694, 887, 376, 892}
100   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '^='}
   {5506, 260, 5509, 263, 522, 780, 5518, 272, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 100, 358, 360, 874, 876, 371, 436, 694, 887, 376, 892}
101   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '='}
   {5506, 260, 5509, 263, 522, 780, 5519, 5520, 273, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 101, 359, 360, 875, 876, 371, 436, 694, 887, 376, 892}
102   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'char'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 349, 285, 862, 608, 865, 290, 5536, 102, 360, 876, 371, 436, 694, 887, 376, 892}
103   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '&='}
   {5506, 260, 5509, 263, 522, 780, 5520, 5521, 274, 275, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 103, 360, 361, 876, 877, 371, 436, 694, 887, 376, 892}
104   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '!='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5522, 276, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 104, 362, 876, 878, 371, 436, 694, 887, 376, 892}
105   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5523, 277, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 105, 363, 876, 879, 371, 436, 694, 887, 376, 892}
106   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '=='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5524, 278, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 106, 876, 364, 880, 371, 436, 694, 887, 376, 892}
107   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '&'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5525, 279, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 107, 876, 365, 881, 371, 436, 694, 887, 376, 892}
108   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '}'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5526, 280, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 876, 108, 366, 882, 371, 436, 694, 887, 376, 892}
109   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': ';'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5527, 281, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 876, 109, 367, 883, 436, 371, 694, 887, 376, 892}
110   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'while'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5528, 346, 282, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 876, 110, 368, 371, 436, 884, 694, 887, 376, 892}
111   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '|='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5529, 346, 283, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 876, 111, 369, 371, 436, 885, 694, 887, 376, 892}
112   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5530, 284, 285, 862, 349, 608, 865, 290, 5531, 376, 5536, 360, 876, 112, 370, 371, 436, 694, 887, 886, 892}
113   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'int'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 349, 285, 862, 608, 865, 290, 5536, 360, 876, 113, 371, 436, 694, 887, 376, 892}
114   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 5532, 285, 862, 286, 608, 865, 290, 349, 376, 5536, 360, 876, 114, 371, 436, 372, 694, 887, 888, 892}
115   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'continue'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 287, 608, 865, 290, 349, 5533, 5536, 360, 876, 371, 436, 373, 694, 887, 376, 889, 115, 892}
116   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '^'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 288, 290, 5534, 376, 5536, 360, 876, 371, 436, 116, 694, 887, 374, 890, 892}
117   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'else'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 289, 290, 375, 5535, 5536, 360, 876, 371, 436, 117, 694, 887, 376, 891, 892}
118   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'void'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 349, 285, 862, 608, 865, 290, 5536, 360, 876, 371, 436, 694, 887, 376, 118, 892}
119   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 119, 346, 5531, 285, 862, 349, 608, 865, 290, 291, 5536, 5537, 360, 876, 371, 436, 694, 887, 376, 377, 892, 893}
120   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '%'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 120, 285, 862, 349, 608, 865, 290, 5536, 292, 5538, 360, 876, 371, 436, 694, 887, 376, 378, 892, 894}
121   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 5539, 293, 360, 876, 371, 436, 694, 887, 376, 121, 379, 892, 895}
122   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-'}
   {896, 5506, 260, 5509, 263, 522, 780, 5520, 274, 380, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 5540, 294, 360, 876, 371, 436, 694, 887, 376, 122, 892}
123   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '('}
   {897, 5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 5541, 295, 360, 876, 371, 436, 694, 887, 376, 123, 892, 381}
124   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>'}
   {898, 5506, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 5542, 296, 360, 876, 124, 371, 436, 694, 887, 376, 892, 382}
125   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+='}
   {5506, 899, 260, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 5543, 360, 297, 876, 371, 436, 694, 887, 376, 892, 125, 383}
126   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'return'}
   {384, 5506, 260, 900, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 5544, 298, 876, 371, 436, 694, 887, 376, 892, 126}
127   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '%='}
   {385, 5506, 260, 901, 5509, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 5545, 299, 876, 371, 436, 694, 887, 376, 892, 127}
128   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<='}
   {128, 5506, 386, 260, 5509, 902, 263, 522, 780, 5520, 274, 346, 5531, 285, 862, 349, 608, 865, 290, 5536, 360, 5546, 876, 300, 371, 436, 694, 887, 376, 892}
129   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'number'}
   {5504, 129, 258, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 86, 215, 344, 346, 860, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
130   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'if'}
   {5505, 130, 259, 260, 5506, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 87, 216, 345, 346, 861, 862, 349, 608, 865, 360, 876, 371, 887, 376, 892}
131   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'float'}
   {5506, 131, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 88, 217, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
132   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '{'}
   {5506, 5507, 132, 260, 261, 263, 5509, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 89, 346, 347, 218, 349, 862, 863, 608, 865, 360, 876, 371, 887, 376, 892}
133   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*'}
   {5506, 260, 133, 262, 263, 5508, 5509, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 90, 346, 348, 349, 862, 219, 608, 864, 865, 360, 876, 371, 887, 376, 892}
134   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'double'}
   {5506, 260, 5509, 134, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 91, 220, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
135   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'identifier'}
   {5506, 260, 5509, 5510, 135, 263, 264, 522, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 92, 349, 862, 350, 608, 865, 866, 221, 360, 876, 371, 887, 376, 892}
136   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '#'}
   {5506, 260, 5509, 263, 136, 265, 522, 5511, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 93, 862, 349, 608, 865, 351, 867, 222, 360, 876, 371, 887, 376, 892}
137   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ','}
   {5506, 260, 5509, 263, 5512, 137, 522, 266, 780, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 94, 608, 865, 352, 223, 868, 360, 876, 371, 887, 376, 892}
138   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ')'}
   {5506, 260, 5509, 263, 5513, 138, 522, 780, 267, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 95, 608, 865, 353, 224, 869, 360, 876, 371, 887, 376, 892}
139   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-='}
   {5506, 260, 5509, 263, 522, 139, 780, 268, 5514, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 96, 608, 865, 354, 225, 870, 360, 876, 371, 887, 376, 892}
140   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'for'}
   {5506, 260, 5509, 263, 522, 5515, 140, 780, 269, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 97, 865, 355, 226, 871, 360, 876, 371, 887, 376, 892}
141   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>='}
   {5506, 260, 5509, 263, 522, 780, 141, 270, 5516, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 98, 227, 356, 872, 360, 876, 371, 887, 376, 892}
142   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'break'}
   {5506, 260, 5509, 263, 522, 780, 5517, 142, 271, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 99, 228, 357, 360, 873, 876, 371, 887, 376, 892}
143   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '^='}
   {5506, 260, 5509, 263, 522, 780, 5518, 143, 272, 5520, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 100, 229, 358, 360, 874, 876, 371, 887, 376, 892}
144   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '='}
   {5506, 260, 5509, 263, 522, 780, 5519, 144, 273, 274, 5520, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 101, 230, 359, 360, 875, 876, 371, 887, 376, 892}
145   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'char'}
   {5506, 260, 5509, 263, 522, 780, 5520, 145, 274, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 102, 231, 360, 876, 371, 887, 376, 892}
146   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '&='}
   {5506, 260, 5509, 263, 522, 780, 5520, 5521, 146, 274, 275, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 103, 360, 361, 232, 876, 877, 371, 887, 376, 892}
147   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '!='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 147, 276, 5522, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 104, 360, 362, 233, 876, 878, 371, 887, 376, 892}
148   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5523, 148, 277, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 105, 234, 363, 876, 879, 371, 887, 376, 892}
149   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '=='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5524, 149, 278, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 106, 235, 876, 364, 880, 371, 887, 376, 892}
150   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '&'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5525, 150, 279, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 107, 876, 365, 236, 881, 371, 887, 376, 892}
151   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '}'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5526, 151, 280, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 108, 876, 366, 237, 882, 371, 887, 376, 892}
152   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': ';'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5527, 152, 281, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 109, 238, 367, 883, 371, 887, 376, 892}
153   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'while'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5528, 153, 282, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 110, 239, 368, 371, 884, 887, 376, 892}
154   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '|='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5529, 154, 283, 5531, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 111, 240, 369, 371, 885, 887, 376, 892}
155   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5530, 155, 284, 285, 5531, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 112, 241, 370, 371, 886, 887, 376, 892}
156   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'int'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 156, 285, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 113, 242, 371, 887, 376, 892}
157   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 5532, 285, 157, 286, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 376, 360, 876, 114, 371, 372, 243, 887, 888, 892}
158   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'continue'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 158, 287, 5533, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 115, 371, 373, 244, 887, 376, 889, 892}
159   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '^'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5534, 159, 288, 5536, 290, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 116, 245, 374, 887, 376, 890, 892}
160   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'else'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5535, 160, 289, 290, 5536, 436, 694, 346, 349, 862, 375, 608, 865, 360, 876, 371, 117, 246, 887, 376, 891, 892}
161   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'void'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 161, 290, 436, 694, 346, 247, 349, 862, 608, 865, 360, 876, 371, 118, 887, 376, 892}
162   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 5537, 162, 290, 291, 436, 694, 119, 346, 349, 862, 608, 865, 248, 360, 876, 371, 887, 376, 377, 892, 893}
163   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '%'}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 163, 292, 5538, 436, 694, 346, 349, 862, 608, 865, 376, 360, 876, 371, 887, 120, 249, 378, 892, 894}
164   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/='}
   {5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5539, 164, 293, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 121, 250, 379, 892, 895}
165   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-'}
   {896, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5540, 165, 294, 436, 694, 380, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 122, 251, 892}
166   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '('}
   {897, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5541, 166, 295, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 252, 887, 376, 123, 892, 381}
167   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>'}
   {898, 5506, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5542, 167, 296, 436, 694, 346, 349, 862, 608, 865, 360, 876, 124, 371, 887, 376, 892, 253, 382}
168   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+='}
   {5506, 899, 260, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5543, 168, 297, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 125, 254, 383}
169   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'return'}
   {384, 5506, 260, 900, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5544, 169, 298, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 126, 255}
170   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '%='}
   {256, 385, 5506, 260, 901, 5509, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5545, 170, 299, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892, 127}
171   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<='}
   {128, 257, 5506, 386, 260, 5509, 902, 263, 522, 780, 5520, 274, 5531, 285, 5536, 290, 5546, 171, 300, 436, 694, 346, 349, 862, 608, 865, 360, 876, 371, 887, 376, 892}
172   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'number'}
   {172}
173   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'if'}
   {173}
174   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'float'}
   {174}
175   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '{'}
   {175}
176   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*'}
   {176}
177   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'double'}
   {177}
178   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'identifier'}
   {178}
179   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '#'}
   {179}
180   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ','}
   {180}
181   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ')'}
   {181}
182   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-='}
   {182}
183   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'for'}
   {183}
184   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>='}
   {184}
185   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'break'}
   {185}
186   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '^='}
   {186}
187   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '='}
   {187}
188   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'char'}
   {188}
189   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '&='}
   {189}
190   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '!='}
   {190}
191   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*='}
   {191}
192   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '=='}
   {192}
193   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '&'}
   {193}
194   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '}'}
   {194}
195   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': ';'}
   {195}
196   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'while'}
   {196}
197   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '|='}
   {197}
198   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<'}
   {198}
199   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'int'}
   {199}
200   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/'}
   {200}
201   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'continue'}
   {201}
202   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '^'}
   {202}
203   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'else'}
   {203}
204   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'void'}
   {204}
205   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+'}
   {205}
206   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '%'}
   {206}
207   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/='}
   {207}
208   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-'}
   {208}
209   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '('}
   {209}
210   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>'}
   {210}
211   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+='}
   {211}
212   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'return'}
   {212}
213   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '%='}
   {213}
214   {'left': 'start', 'right': ['external_declaration', 'start'], 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<='}
   {214}
215   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'number'}
   {215}
216   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'if'}
   {216}
217   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'float'}
   {217}
218   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '{'}
   {218}
219   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*'}
   {219}
220   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'double'}
   {220}
221   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'identifier'}
   {221}
222   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '#'}
   {222}
223   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ','}
   {223}
224   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ')'}
   {224}
225   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-='}
   {225}
226   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'for'}
   {226}
227   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>='}
   {227}
228   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'break'}
   {228}
229   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '^='}
   {229}
230   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '='}
   {230}
231   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'char'}
   {231}
232   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '&='}
   {232}
233   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '!='}
   {233}
234   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*='}
   {234}
235   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '=='}
   {235}
236   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '&'}
   {236}
237   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '}'}
   {237}
238   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': ';'}
   {238}
239   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'while'}
   {239}
240   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '|='}
   {240}
241   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<'}
   {241}
242   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'int'}
   {242}
243   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/'}
   {243}
244   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'continue'}
   {244}
245   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '^'}
   {245}
246   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'else'}
   {246}
247   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'void'}
   {247}
248   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+'}
   {248}
249   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '%'}
   {249}
250   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/='}
   {250}
251   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-'}
   {251}
252   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '('}
   {252}
253   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>'}
   {253}
254   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+='}
   {254}
255   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'return'}
   {255}
256   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '%='}
   {256}
257   {'left': 'start', 'right': [], 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<='}
   {257}
258   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'number'}
   {608, 258, 522, 780, 436, 694, 860}
259   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'if'}
   {608, 259, 522, 780, 436, 694, 861}
260   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'float'}
   {608, 260, 522, 780, 436, 694, 862}
261   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '{'}
   {261, 863}
262   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*'}
   {864, 262}
263   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'double'}
   {865, 263}
264   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'identifier'}
   {264, 866}
265   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '#'}
   {265, 867}
266   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ','}
   {266, 868}
267   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ')'}
   {267, 869}
268   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-='}
   {268, 870}
269   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'for'}
   {269, 871}
270   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>='}
   {872, 270}
271   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'break'}
   {873, 271}
272   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '^='}
   {272, 874}
273   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '='}
   {273, 875}
274   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'char'}
   {274, 876}
275   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '&='}
   {275, 877}
276   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '!='}
   {276, 878}
277   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*='}
   {277, 879}
278   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '=='}
   {880, 278}
279   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '&'}
   {881, 279}
280   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '}'}
   {280, 882}
281   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': ';'}
   {281, 883}
282   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'while'}
   {282, 884}
283   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '|='}
   {283, 885}
284   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<'}
   {284, 886}
285   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'int'}
   {285, 887}
286   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/'}
   {888, 286}
287   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'continue'}
   {889, 287}
288   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '^'}
   {288, 890}
289   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'else'}
   {289, 891}
290   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'void'}
   {290, 892}
291   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+'}
   {291, 893}
292   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '%'}
   {292, 894}
293   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/='}
   {293, 895}
294   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-'}
   {896, 294}
295   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '('}
   {897, 295}
296   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>'}
   {296, 898}
297   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+='}
   {297, 899}
298   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'return'}
   {298, 900}
299   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '%='}
   {299, 901}
300   {'left': 'external_declaration', 'right': ['declaration'], 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<='}
   {300, 902}
301   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'number'}
   {301}
302   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'if'}
   {302}
303   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'float'}
   {303}
304   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '{'}
   {304}
305   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*'}
   {305}
306   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'double'}
   {306}
307   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'identifier'}
   {307}
308   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '#'}
   {308}
309   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ','}
   {309}
310   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ')'}
   {310}
311   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-='}
   {311}
312   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'for'}
   {312}
313   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>='}
   {313}
314   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'break'}
   {314}
315   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '^='}
   {315}
316   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '='}
   {316}
317   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'char'}
   {317}
318   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '&='}
   {318}
319   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '!='}
   {319}
320   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*='}
   {320}
321   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '=='}
   {321}
322   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '&'}
   {322}
323   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '}'}
   {323}
324   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': ';'}
   {324}
325   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'while'}
   {325}
326   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '|='}
   {326}
327   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<'}
   {327}
328   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'int'}
   {328}
329   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/'}
   {329}
330   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'continue'}
   {330}
331   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '^'}
   {331}
332   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'else'}
   {332}
333   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'void'}
   {333}
334   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+'}
   {334}
335   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '%'}
   {335}
336   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/='}
   {336}
337   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-'}
   {337}
338   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '('}
   {338}
339   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>'}
   {339}
340   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+='}
   {340}
341   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'return'}
   {341}
342   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '%='}
   {342}
343   {'left': 'external_declaration', 'right': ['declaration'], 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<='}
   {343}
344   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'number'}
   {5504, 344}
345   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'if'}
   {345, 5505}
346   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'float'}
   {5506, 346}
347   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '{'}
   {347, 5507}
348   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*'}
   {5508, 348}
349   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'double'}
   {349, 5509}
350   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'identifier'}
   {350, 5510}
351   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '#'}
   {351, 5511}
352   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ','}
   {5512, 352}
353   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ')'}
   {5513, 353}
354   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-='}
   {5514, 354}
355   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'for'}
   {355, 5515}
356   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>='}
   {356, 5516}
357   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'break'}
   {357, 5517}
358   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '^='}
   {358, 5518}
359   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '='}
   {359, 5519}
360   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'char'}
   {5520, 360}
361   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '&='}
   {5521, 361}
362   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '!='}
   {5522, 362}
363   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*='}
   {363, 5523}
364   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '=='}
   {364, 5524}
365   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '&'}
   {365, 5525}
366   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '}'}
   {366, 5526}
367   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': ';'}
   {367, 5527}
368   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'while'}
   {5528, 368}
369   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '|='}
   {5529, 369}
370   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<'}
   {5530, 370}
371   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'int'}
   {371, 5531}
372   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/'}
   {372, 5532}
373   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'continue'}
   {373, 5533}
374   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '^'}
   {374, 5534}
375   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'else'}
   {375, 5535}
376   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'void'}
   {5536, 376}
377   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+'}
   {5537, 377}
378   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '%'}
   {5538, 378}
379   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/='}
   {379, 5539}
380   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-'}
   {380, 5540}
381   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '('}
   {381, 5541}
382   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>'}
   {382, 5542}
383   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+='}
   {383, 5543}
384   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'return'}
   {5544, 384}
385   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '%='}
   {5545, 385}
386   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<='}
   {5546, 386}
387   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'number'}
   {387}
388   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'if'}
   {388}
389   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'float'}
   {389}
390   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '{'}
   {390}
391   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*'}
   {391}
392   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'double'}
   {392}
393   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'identifier'}
   {393}
394   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '#'}
   {394}
395   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ','}
   {395}
396   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ')'}
   {396}
397   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-='}
   {397}
398   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'for'}
   {398}
399   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>='}
   {399}
400   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'break'}
   {400}
401   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '^='}
   {401}
402   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '='}
   {402}
403   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'char'}
   {403}
404   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '&='}
   {404}
405   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '!='}
   {405}
406   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*='}
   {406}
407   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '=='}
   {407}
408   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '&'}
   {408}
409   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '}'}
   {409}
410   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': ';'}
   {410}
411   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'while'}
   {411}
412   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '|='}
   {412}
413   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<'}
   {413}
414   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'int'}
   {414}
415   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/'}
   {415}
416   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'continue'}
   {416}
417   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '^'}
   {417}
418   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'else'}
   {418}
419   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'void'}
   {419}
420   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+'}
   {420}
421   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '%'}
   {421}
422   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/='}
   {422}
423   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-'}
   {423}
424   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '('}
   {424}
425   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>'}
   {425}
426   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+='}
   {426}
427   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'return'}
   {427}
428   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '%='}
   {428}
429   {'left': 'external_declaration', 'right': ['function_definition'], 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<='}
   {429}
430   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'number'}
   {430}
431   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'if'}
   {431}
432   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'float'}
   {432}
433   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '{'}
   {433}
434   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*'}
   {434}
435   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'double'}
   {435}
436   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'identifier'}
   {436}
437   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '#'}
   {437}
438   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ','}
   {438}
439   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ')'}
   {439}
440   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-='}
   {440}
441   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'for'}
   {441}
442   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>='}
   {442}
443   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'break'}
   {443}
444   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '^='}
   {444}
445   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '='}
   {445}
446   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'char'}
   {446}
447   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '&='}
   {447}
448   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '!='}
   {448}
449   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*='}
   {449}
450   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '=='}
   {450}
451   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '&'}
   {451}
452   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '}'}
   {452}
453   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': ';'}
   {453}
454   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'while'}
   {454}
455   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '|='}
   {455}
456   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<'}
   {456}
457   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'int'}
   {457}
458   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/'}
   {458}
459   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'continue'}
   {459}
460   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '^'}
   {460}
461   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'else'}
   {461}
462   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'void'}
   {462}
463   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+'}
   {463}
464   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '%'}
   {464}
465   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/='}
   {465}
466   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-'}
   {466}
467   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '('}
   {467}
468   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>'}
   {468}
469   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+='}
   {469}
470   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'return'}
   {470}
471   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '%='}
   {471}
472   {'left': 'type_specifier', 'right': ['char'], 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<='}
   {472}
473   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'number'}
   {473}
474   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'if'}
   {474}
475   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'float'}
   {475}
476   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '{'}
   {476}
477   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '*'}
   {477}
478   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'double'}
   {478}
479   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'identifier'}
   {479}
480   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '#'}
   {480}
481   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ','}
   {481}
482   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ')'}
   {482}
483   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '-='}
   {483}
484   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'for'}
   {484}
485   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '>='}
   {485}
486   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'break'}
   {486}
487   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '^='}
   {487}
488   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '='}
   {488}
489   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'char'}
   {489}
490   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '&='}
   {490}
491   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '!='}
   {491}
492   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '*='}
   {492}
493   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '=='}
   {493}
494   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '&'}
   {494}
495   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '}'}
   {495}
496   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': ';'}
   {496}
497   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'while'}
   {497}
498   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '|='}
   {498}
499   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '<'}
   {499}
500   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'int'}
   {500}
501   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '/'}
   {501}
502   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'continue'}
   {502}
503   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '^'}
   {503}
504   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'else'}
   {504}
505   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'void'}
   {505}
506   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '+'}
   {506}
507   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '%'}
   {507}
508   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '/='}
   {508}
509   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '-'}
   {509}
510   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '('}
   {510}
511   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '>'}
   {511}
512   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '+='}
   {512}
513   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': 'return'}
   {513}
514   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '%='}
   {514}
515   {'left': 'type_specifier', 'right': ['char'], 'point': 1, 'origin': 5, 'isTer': True, 'accept': '<='}
   {515}
516   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'number'}
   {516}
517   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'if'}
   {517}
518   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'float'}
   {518}
519   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '{'}
   {519}
520   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*'}
   {520}
521   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'double'}
   {521}
522   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'identifier'}
   {522}
523   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '#'}
   {523}
524   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ','}
   {524}
525   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ')'}
   {525}
526   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-='}
   {526}
527   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'for'}
   {527}
528   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>='}
   {528}
529   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'break'}
   {529}
530   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '^='}
   {530}
531   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '='}
   {531}
532   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'char'}
   {532}
533   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '&='}
   {533}
534   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '!='}
   {534}
535   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*='}
   {535}
536   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '=='}
   {536}
537   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '&'}
   {537}
538   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '}'}
   {538}
539   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': ';'}
   {539}
540   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'while'}
   {540}
541   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '|='}
   {541}
542   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<'}
   {542}
543   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'int'}
   {543}
544   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/'}
   {544}
545   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'continue'}
   {545}
546   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '^'}
   {546}
547   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'else'}
   {547}
548   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'void'}
   {548}
549   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+'}
   {549}
550   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '%'}
   {550}
551   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/='}
   {551}
552   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-'}
   {552}
553   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '('}
   {553}
554   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>'}
   {554}
555   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+='}
   {555}
556   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'return'}
   {556}
557   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '%='}
   {557}
558   {'left': 'type_specifier', 'right': ['int'], 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<='}
   {558}
559   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'number'}
   {559}
560   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'if'}
   {560}
561   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'float'}
   {561}
562   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '{'}
   {562}
563   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '*'}
   {563}
564   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'double'}
   {564}
565   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'identifier'}
   {565}
566   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '#'}
   {566}
567   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ','}
   {567}
568   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ')'}
   {568}
569   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '-='}
   {569}
570   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'for'}
   {570}
571   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '>='}
   {571}
572   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'break'}
   {572}
573   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '^='}
   {573}
574   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '='}
   {574}
575   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'char'}
   {575}
576   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '&='}
   {576}
577   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '!='}
   {577}
578   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '*='}
   {578}
579   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '=='}
   {579}
580   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '&'}
   {580}
581   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '}'}
   {581}
582   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': ';'}
   {582}
583   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'while'}
   {583}
584   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '|='}
   {584}
585   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '<'}
   {585}
586   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'int'}
   {586}
587   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '/'}
   {587}
588   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'continue'}
   {588}
589   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '^'}
   {589}
590   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'else'}
   {590}
591   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'void'}
   {591}
592   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '+'}
   {592}
593   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '%'}
   {593}
594   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '/='}
   {594}
595   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '-'}
   {595}
596   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '('}
   {596}
597   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '>'}
   {597}
598   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '+='}
   {598}
599   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': 'return'}
   {599}
600   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '%='}
   {600}
601   {'left': 'type_specifier', 'right': ['int'], 'point': 1, 'origin': 6, 'isTer': True, 'accept': '<='}
   {601}
602   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'number'}
   {602}
603   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'if'}
   {603}
604   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'float'}
   {604}
605   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '{'}
   {605}
606   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*'}
   {606}
607   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'double'}
   {607}
608   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'identifier'}
   {608}
609   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '#'}
   {609}
610   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ','}
   {610}
611   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ')'}
   {611}
612   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-='}
   {612}
613   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'for'}
   {613}
614   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>='}
   {614}
615   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'break'}
   {615}
616   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '^='}
   {616}
617   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '='}
   {617}
618   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'char'}
   {618}
619   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '&='}
   {619}
620   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '!='}
   {620}
621   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*='}
   {621}
622   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '=='}
   {622}
623   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '&'}
   {623}
624   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '}'}
   {624}
625   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': ';'}
   {625}
626   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'while'}
   {626}
627   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '|='}
   {627}
628   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<'}
   {628}
629   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'int'}
   {629}
630   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/'}
   {630}
631   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'continue'}
   {631}
632   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '^'}
   {632}
633   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'else'}
   {633}
634   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'void'}
   {634}
635   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+'}
   {635}
636   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '%'}
   {636}
637   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/='}
   {637}
638   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-'}
   {638}
639   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '('}
   {639}
640   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>'}
   {640}
641   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+='}
   {641}
642   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'return'}
   {642}
643   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '%='}
   {643}
644   {'left': 'type_specifier', 'right': ['double'], 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<='}
   {644}
645   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'number'}
   {645}
646   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'if'}
   {646}
647   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'float'}
   {647}
648   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '{'}
   {648}
649   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '*'}
   {649}
650   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'double'}
   {650}
651   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'identifier'}
   {651}
652   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '#'}
   {652}
653   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ','}
   {653}
654   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ')'}
   {654}
655   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '-='}
   {655}
656   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'for'}
   {656}
657   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '>='}
   {657}
658   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'break'}
   {658}
659   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '^='}
   {659}
660   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '='}
   {660}
661   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'char'}
   {661}
662   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '&='}
   {662}
663   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '!='}
   {663}
664   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '*='}
   {664}
665   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '=='}
   {665}
666   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '&'}
   {666}
667   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '}'}
   {667}
668   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': ';'}
   {668}
669   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'while'}
   {669}
670   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '|='}
   {670}
671   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '<'}
   {671}
672   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'int'}
   {672}
673   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '/'}
   {673}
674   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'continue'}
   {674}
675   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '^'}
   {675}
676   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'else'}
   {676}
677   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'void'}
   {677}
678   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '+'}
   {678}
679   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '%'}
   {679}
680   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '/='}
   {680}
681   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '-'}
   {681}
682   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '('}
   {682}
683   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '>'}
   {683}
684   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '+='}
   {684}
685   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': 'return'}
   {685}
686   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '%='}
   {686}
687   {'left': 'type_specifier', 'right': ['double'], 'point': 1, 'origin': 7, 'isTer': True, 'accept': '<='}
   {687}
688   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'number'}
   {688}
689   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'if'}
   {689}
690   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'float'}
   {690}
691   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '{'}
   {691}
692   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '*'}
   {692}
693   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'double'}
   {693}
694   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'identifier'}
   {694}
695   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '#'}
   {695}
696   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ','}
   {696}
697   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ')'}
   {697}
698   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '-='}
   {698}
699   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'for'}
   {699}
700   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '>='}
   {700}
701   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'break'}
   {701}
702   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '^='}
   {702}
703   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '='}
   {703}
704   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'char'}
   {704}
705   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '&='}
   {705}
706   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '!='}
   {706}
707   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '*='}
   {707}
708   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '=='}
   {708}
709   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '&'}
   {709}
710   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '}'}
   {710}
711   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': ';'}
   {711}
712   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'while'}
   {712}
713   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '|='}
   {713}
714   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '<'}
   {714}
715   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'int'}
   {715}
716   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '/'}
   {716}
717   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'continue'}
   {717}
718   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '^'}
   {718}
719   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'else'}
   {719}
720   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'void'}
   {720}
721   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '+'}
   {721}
722   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '%'}
   {722}
723   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '/='}
   {723}
724   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '-'}
   {724}
725   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '('}
   {725}
726   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '>'}
   {726}
727   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '+='}
   {727}
728   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': 'return'}
   {728}
729   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '%='}
   {729}
730   {'left': 'type_specifier', 'right': ['float'], 'point': 0, 'origin': 8, 'isTer': False, 'accept': '<='}
   {730}
731   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'number'}
   {731}
732   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'if'}
   {732}
733   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'float'}
   {733}
734   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '{'}
   {734}
735   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '*'}
   {735}
736   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'double'}
   {736}
737   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'identifier'}
   {737}
738   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '#'}
   {738}
739   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ','}
   {739}
740   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ')'}
   {740}
741   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '-='}
   {741}
742   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'for'}
   {742}
743   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '>='}
   {743}
744   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'break'}
   {744}
745   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '^='}
   {745}
746   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '='}
   {746}
747   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'char'}
   {747}
748   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '&='}
   {748}
749   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '!='}
   {749}
750   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '*='}
   {750}
751   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '=='}
   {751}
752   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '&'}
   {752}
753   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '}'}
   {753}
754   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': ';'}
   {754}
755   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'while'}
   {755}
756   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '|='}
   {756}
757   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '<'}
   {757}
758   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'int'}
   {758}
759   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '/'}
   {759}
760   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'continue'}
   {760}
761   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '^'}
   {761}
762   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'else'}
   {762}
763   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'void'}
   {763}
764   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '+'}
   {764}
765   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '%'}
   {765}
766   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '/='}
   {766}
767   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '-'}
   {767}
768   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '('}
   {768}
769   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '>'}
   {769}
770   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '+='}
   {770}
771   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': 'return'}
   {771}
772   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '%='}
   {772}
773   {'left': 'type_specifier', 'right': ['float'], 'point': 1, 'origin': 8, 'isTer': True, 'accept': '<='}
   {773}
774   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'number'}
   {774}
775   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'if'}
   {775}
776   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'float'}
   {776}
777   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '{'}
   {777}
778   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*'}
   {778}
779   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'double'}
   {779}
780   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'identifier'}
   {780}
781   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '#'}
   {781}
782   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ','}
   {782}
783   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ')'}
   {783}
784   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-='}
   {784}
785   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'for'}
   {785}
786   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>='}
   {786}
787   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'break'}
   {787}
788   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '^='}
   {788}
789   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '='}
   {789}
790   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'char'}
   {790}
791   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '&='}
   {791}
792   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '!='}
   {792}
793   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*='}
   {793}
794   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '=='}
   {794}
795   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '&'}
   {795}
796   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '}'}
   {796}
797   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': ';'}
   {797}
798   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'while'}
   {798}
799   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '|='}
   {799}
800   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<'}
   {800}
801   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'int'}
   {801}
802   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/'}
   {802}
803   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'continue'}
   {803}
804   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '^'}
   {804}
805   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'else'}
   {805}
806   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'void'}
   {806}
807   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+'}
   {807}
808   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '%'}
   {808}
809   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/='}
   {809}
810   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-'}
   {810}
811   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '('}
   {811}
812   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>'}
   {812}
813   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+='}
   {813}
814   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'return'}
   {814}
815   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '%='}
   {815}
816   {'left': 'type_specifier', 'right': ['void'], 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<='}
   {816}
817   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'number'}
   {817}
818   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'if'}
   {818}
819   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'float'}
   {819}
820   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '{'}
   {820}
821   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '*'}
   {821}
822   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'double'}
   {822}
823   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'identifier'}
   {823}
824   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '#'}
   {824}
825   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ','}
   {825}
826   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ')'}
   {826}
827   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '-='}
   {827}
828   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'for'}
   {828}
829   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '>='}
   {829}
830   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'break'}
   {830}
831   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '^='}
   {831}
832   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '='}
   {832}
833   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'char'}
   {833}
834   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '&='}
   {834}
835   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '!='}
   {835}
836   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '*='}
   {836}
837   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '=='}
   {837}
838   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '&'}
   {838}
839   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '}'}
   {839}
840   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': ';'}
   {840}
841   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'while'}
   {841}
842   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '|='}
   {842}
843   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '<'}
   {843}
844   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'int'}
   {844}
845   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '/'}
   {845}
846   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'continue'}
   {846}
847   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '^'}
   {847}
848   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'else'}
   {848}
849   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'void'}
   {849}
850   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '+'}
   {850}
851   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '%'}
   {851}
852   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '/='}
   {852}
853   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '-'}
   {853}
854   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '('}
   {854}
855   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '>'}
   {855}
856   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '+='}
   {856}
857   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': 'return'}
   {857}
858   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '%='}
   {858}
859   {'left': 'type_specifier', 'right': ['void'], 'point': 1, 'origin': 9, 'isTer': True, 'accept': '<='}
   {859}
860   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {608, 522, 780, 436, 694, 860}
861   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {608, 522, 780, 436, 694, 861}
862   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {608, 522, 780, 436, 694, 862}
863   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '{'}
   {608, 436, 694, 522, 780, 863}
864   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '*'}
   {864, 608, 436, 694, 522, 780}
865   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {608, 865, 436, 694, 522, 780}
866   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {608, 866, 436, 694, 522, 780}
867   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '#'}
   {608, 867, 436, 694, 522, 780}
868   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ','}
   {608, 868, 436, 694, 522, 780}
869   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ')'}
   {608, 436, 869, 694, 522, 780}
870   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '-='}
   {608, 436, 694, 870, 522, 780}
871   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {608, 436, 694, 871, 522, 780}
872   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '>='}
   {608, 436, 694, 872, 522, 780}
873   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {608, 436, 694, 873, 522, 780}
874   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '^='}
   {608, 522, 436, 694, 874, 780}
875   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '='}
   {608, 436, 694, 522, 875, 780}
876   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {608, 436, 780, 694, 522, 876}
877   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '&='}
   {608, 436, 694, 522, 780, 877}
878   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '!='}
   {608, 436, 694, 522, 780, 878}
879   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '*='}
   {608, 436, 694, 522, 780, 879}
880   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '=='}
   {880, 608, 436, 694, 522, 780}
881   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '&'}
   {608, 881, 436, 694, 522, 780}
882   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '}'}
   {608, 882, 436, 694, 522, 780}
883   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': ';'}
   {608, 883, 436, 694, 522, 780}
884   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {608, 884, 436, 694, 522, 780}
885   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '|='}
   {608, 436, 885, 694, 522, 780}
886   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '<'}
   {608, 436, 694, 886, 522, 780}
887   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {608, 436, 694, 887, 522, 780}
888   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '/'}
   {608, 436, 694, 888, 522, 780}
889   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {608, 436, 694, 889, 522, 780}
890   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '^'}
   {608, 522, 436, 694, 890, 780}
891   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {608, 436, 694, 522, 891, 780}
892   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {608, 436, 780, 694, 522, 892}
893   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '+'}
   {608, 436, 694, 522, 780, 893}
894   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '%'}
   {608, 436, 694, 522, 780, 894}
895   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '/='}
   {608, 436, 694, 522, 780, 895}
896   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '-'}
   {896, 608, 436, 694, 522, 780}
897   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '('}
   {608, 897, 436, 694, 522, 780}
898   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '>'}
   {608, 898, 436, 694, 522, 780}
899   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '+='}
   {608, 899, 436, 694, 522, 780}
900   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {608, 900, 436, 694, 522, 780}
901   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '%='}
   {608, 436, 901, 694, 522, 780}
902   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 0, 'origin': 10, 'isTer': False, 'accept': '<='}
   {608, 436, 694, 902, 522, 780}
903   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {1098, 1083, 903}
904   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {904, 1098, 1083}
905   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {905, 1098, 1083}
906   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '{'}
   {906, 1083, 1098}
907   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '*'}
   {1083, 1098, 907}
908   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {1098, 1083, 908}
909   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {1098, 1083, 909}
910   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '#'}
   {1098, 1083, 910}
911   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ','}
   {1098, 1083, 911}
912   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ')'}
   {912, 1098, 1083}
913   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '-='}
   {913, 1098, 1083}
914   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {914, 1083, 1098}
915   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '>='}
   {1083, 1098, 915}
916   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {1098, 1083, 916}
917   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '^='}
   {1098, 1083, 917}
918   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '='}
   {1098, 1083, 918}
919   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {1098, 1083, 919}
920   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '&='}
   {920, 1098, 1083}
921   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '!='}
   {921, 1098, 1083}
922   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '*='}
   {922, 1083, 1098}
923   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '=='}
   {1083, 1098, 923}
924   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '&'}
   {1098, 1083, 924}
925   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '}'}
   {1098, 1083, 925}
926   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': ';'}
   {1098, 1083, 926}
927   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {1098, 1083, 927}
928   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '|='}
   {928, 1098, 1083}
929   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '<'}
   {929, 1098, 1083}
930   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {930, 1083, 1098}
931   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '/'}
   {1083, 1098, 931}
932   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {1098, 1083, 932}
933   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '^'}
   {1098, 1083, 933}
934   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {1098, 1083, 934}
935   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {1098, 1083, 935}
936   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '+'}
   {936, 1098, 1083}
937   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '%'}
   {937, 1098, 1083}
938   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '/='}
   {938, 1083, 1098}
939   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '-'}
   {1083, 1098, 939}
940   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '('}
   {1098, 1083, 940}
941   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '>'}
   {1098, 1083, 941}
942   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '+='}
   {1098, 1083, 942}
943   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {1098, 1083, 943}
944   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '%='}
   {944, 1098, 1083}
945   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 1, 'origin': 10, 'isTer': False, 'accept': '<='}
   {945, 1098, 1083}
946   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {946, 1571, 1399}
947   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {1571, 947, 1399}
948   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {1571, 948, 1399}
949   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '{'}
   {1571, 949, 1399}
950   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '*'}
   {1571, 950, 1399}
951   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {1571, 1399, 951}
952   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {952, 1571, 1399}
953   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '#'}
   {953, 1571, 1399}
954   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ','}
   {954, 1571, 1399}
955   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ')'}
   {1571, 955, 1399}
956   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '-='}
   {1571, 956, 1399}
957   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {1571, 957, 1399}
958   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '>='}
   {1571, 958, 1399}
959   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {1571, 1399, 959}
960   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '^='}
   {960, 1571, 1399}
961   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '='}
   {961, 1571, 1399}
962   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {962, 1571, 1399}
963   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '&='}
   {1571, 963, 1399}
964   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '!='}
   {1571, 964, 1399}
965   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '*='}
   {1571, 965, 1399}
966   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '=='}
   {1571, 966, 1399}
967   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '&'}
   {1571, 1399, 967}
968   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '}'}
   {968, 1571, 1399}
969   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': ';'}
   {969, 1571, 1399}
970   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {970, 1571, 1399}
971   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '|='}
   {1571, 971, 1399}
972   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '<'}
   {1571, 972, 1399}
973   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {1571, 973, 1399}
974   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '/'}
   {1571, 974, 1399}
975   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {1571, 1399, 975}
976   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '^'}
   {976, 1571, 1399}
977   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {977, 1571, 1399}
978   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {978, 1571, 1399}
979   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '+'}
   {1571, 979, 1399}
980   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '%'}
   {1571, 980, 1399}
981   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '/='}
   {1571, 981, 1399}
982   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '-'}
   {1571, 982, 1399}
983   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '('}
   {1571, 1399, 983}
984   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '>'}
   {984, 1571, 1399}
985   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '+='}
   {985, 1571, 1399}
986   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {986, 1571, 1399}
987   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '%='}
   {1571, 987, 1399}
988   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 2, 'origin': 10, 'isTer': False, 'accept': '<='}
   {1571, 988, 1399}
989   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'number'}
   {989}
990   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'if'}
   {990}
991   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'float'}
   {991}
992   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '{'}
   {992}
993   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '*'}
   {993}
994   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'double'}
   {994}
995   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'identifier'}
   {995}
996   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '#'}
   {996}
997   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ','}
   {997}
998   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ')'}
   {998}
999   {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '-='}
   {999}
1000  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'for'}
   {1000}
1001  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '>='}
   {1001}
1002  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'break'}
   {1002}
1003  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '^='}
   {1003}
1004  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '='}
   {1004}
1005  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'char'}
   {1005}
1006  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '&='}
   {1006}
1007  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '!='}
   {1007}
1008  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '*='}
   {1008}
1009  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '=='}
   {1009}
1010  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '&'}
   {1010}
1011  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '}'}
   {1011}
1012  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': ';'}
   {1012}
1013  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'while'}
   {1013}
1014  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '|='}
   {1014}
1015  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '<'}
   {1015}
1016  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'int'}
   {1016}
1017  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '/'}
   {1017}
1018  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'continue'}
   {1018}
1019  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '^'}
   {1019}
1020  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'else'}
   {1020}
1021  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'void'}
   {1021}
1022  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '+'}
   {1022}
1023  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '%'}
   {1023}
1024  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '/='}
   {1024}
1025  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '-'}
   {1025}
1026  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '('}
   {1026}
1027  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '>'}
   {1027}
1028  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '+='}
   {1028}
1029  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': 'return'}
   {1029}
1030  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '%='}
   {1030}
1031  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 3, 'origin': 10, 'isTer': False, 'accept': '<='}
   {1031}
1032  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'number'}
   {1032}
1033  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'if'}
   {1033}
1034  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'float'}
   {1034}
1035  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '{'}
   {1035}
1036  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '*'}
   {1036}
1037  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'double'}
   {1037}
1038  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'identifier'}
   {1038}
1039  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '#'}
   {1039}
1040  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ','}
   {1040}
1041  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ')'}
   {1041}
1042  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '-='}
   {1042}
1043  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'for'}
   {1043}
1044  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '>='}
   {1044}
1045  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'break'}
   {1045}
1046  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '^='}
   {1046}
1047  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '='}
   {1047}
1048  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'char'}
   {1048}
1049  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '&='}
   {1049}
1050  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '!='}
   {1050}
1051  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '*='}
   {1051}
1052  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '=='}
   {1052}
1053  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '&'}
   {1053}
1054  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '}'}
   {1054}
1055  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': ';'}
   {1055}
1056  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'while'}
   {1056}
1057  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '|='}
   {1057}
1058  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '<'}
   {1058}
1059  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'int'}
   {1059}
1060  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '/'}
   {1060}
1061  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'continue'}
   {1061}
1062  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '^'}
   {1062}
1063  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'else'}
   {1063}
1064  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'void'}
   {1064}
1065  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '+'}
   {1065}
1066  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '%'}
   {1066}
1067  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '/='}
   {1067}
1068  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '-'}
   {1068}
1069  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '('}
   {1069}
1070  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '>'}
   {1070}
1071  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '+='}
   {1071}
1072  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': 'return'}
   {1072}
1073  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '%='}
   {1073}
1074  {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'point': 4, 'origin': 10, 'isTer': True, 'accept': '<='}
   {1074}
1075  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'number'}
   {1075}
1076  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'if'}
   {1076}
1077  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'float'}
   {1077}
1078  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '{'}
   {1078}
1079  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '*'}
   {1079}
1080  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'double'}
   {1080}
1081  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'identifier'}
   {1081}
1082  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '#'}
   {1082}
1083  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ','}
   {1083}
1084  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ')'}
   {1084}
1085  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '-='}
   {1085}
1086  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'for'}
   {1086}
1087  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '>='}
   {1087}
1088  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'break'}
   {1088}
1089  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '^='}
   {1089}
1090  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '='}
   {1090}
1091  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'char'}
   {1091}
1092  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '&='}
   {1092}
1093  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '!='}
   {1093}
1094  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '*='}
   {1094}
1095  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '=='}
   {1095}
1096  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '&'}
   {1096}
1097  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '}'}
   {1097}
1098  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': ';'}
   {1098}
1099  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'while'}
   {1099}
1100  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '|='}
   {1100}
1101  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '<'}
   {1101}
1102  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'int'}
   {1102}
1103  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '/'}
   {1103}
1104  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'continue'}
   {1104}
1105  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '^'}
   {1105}
1106  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'else'}
   {1106}
1107  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'void'}
   {1107}
1108  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '+'}
   {1108}
1109  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '%'}
   {1109}
1110  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '/='}
   {1110}
1111  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '-'}
   {1111}
1112  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '('}
   {1112}
1113  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '>'}
   {1113}
1114  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '+='}
   {1114}
1115  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': 'return'}
   {1115}
1116  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '%='}
   {1116}
1117  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 0, 'origin': 11, 'isTer': False, 'accept': '<='}
   {1117}
1118  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'number'}
   {1204, 1333, 1118}
1119  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'if'}
   {1205, 1334, 1119}
1120  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'float'}
   {1120, 1206, 1335}
1121  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '{'}
   {1336, 1121, 1207}
1122  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '*'}
   {1208, 1337, 1122}
1123  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'double'}
   {1209, 1338, 1123}
1124  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'identifier'}
   {1210, 1339, 1124}
1125  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '#'}
   {1211, 1340, 1125}
1126  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ','}
   {1212, 1341, 1126}
1127  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ')'}
   {1213, 1342, 1127}
1128  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '-='}
   {1128, 1214, 1343}
1129  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'for'}
   {1344, 1129, 1215}
1130  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '>='}
   {1216, 1345, 1130}
1131  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'break'}
   {1217, 1346, 1131}
1132  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '^='}
   {1218, 1347, 1132}
1133  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '='}
   {1219, 1348, 1133}
1134  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'char'}
   {1220, 1349, 1134}
1135  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '&='}
   {1221, 1350, 1135}
1136  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '!='}
   {1136, 1222, 1351}
1137  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '*='}
   {1352, 1137, 1223}
1138  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '=='}
   {1224, 1353, 1138}
1139  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '&'}
   {1225, 1354, 1139}
1140  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '}'}
   {1226, 1355, 1140}
1141  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': ';'}
   {1227, 1356, 1141}
1142  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'while'}
   {1228, 1357, 1142}
1143  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '|='}
   {1229, 1358, 1143}
1144  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '<'}
   {1144, 1230, 1359}
1145  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'int'}
   {1360, 1145, 1231}
1146  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '/'}
   {1232, 1361, 1146}
1147  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'continue'}
   {1233, 1362, 1147}
1148  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '^'}
   {1234, 1363, 1148}
1149  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'else'}
   {1235, 1364, 1149}
1150  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'void'}
   {1236, 1365, 1150}
1151  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '+'}
   {1237, 1366, 1151}
1152  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '%'}
   {1152, 1238, 1367}
1153  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '/='}
   {1368, 1153, 1239}
1154  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '-'}
   {1240, 1369, 1154}
1155  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '('}
   {1241, 1370, 1155}
1156  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '>'}
   {1242, 1371, 1156}
1157  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '+='}
   {1243, 1372, 1157}
1158  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': 'return'}
   {1244, 1373, 1158}
1159  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '%='}
   {1245, 1374, 1159}
1160  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 1, 'origin': 11, 'isTer': False, 'accept': '<='}
   {1160, 1246, 1375}
1161  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'number'}
   {1161}
1162  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'if'}
   {1162}
1163  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'float'}
   {1163}
1164  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '{'}
   {1164}
1165  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '*'}
   {1165}
1166  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'double'}
   {1166}
1167  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'identifier'}
   {1167}
1168  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '#'}
   {1168}
1169  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ','}
   {1169}
1170  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ')'}
   {1170}
1171  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '-='}
   {1171}
1172  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'for'}
   {1172}
1173  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '>='}
   {1173}
1174  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'break'}
   {1174}
1175  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '^='}
   {1175}
1176  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '='}
   {1176}
1177  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'char'}
   {1177}
1178  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '&='}
   {1178}
1179  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '!='}
   {1179}
1180  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '*='}
   {1180}
1181  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '=='}
   {1181}
1182  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '&'}
   {1182}
1183  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '}'}
   {1183}
1184  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': ';'}
   {1184}
1185  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'while'}
   {1185}
1186  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '|='}
   {1186}
1187  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '<'}
   {1187}
1188  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'int'}
   {1188}
1189  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '/'}
   {1189}
1190  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'continue'}
   {1190}
1191  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '^'}
   {1191}
1192  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'else'}
   {1192}
1193  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'void'}
   {1193}
1194  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '+'}
   {1194}
1195  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '%'}
   {1195}
1196  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '/='}
   {1196}
1197  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '-'}
   {1197}
1198  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '('}
   {1198}
1199  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '>'}
   {1199}
1200  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '+='}
   {1200}
1201  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': 'return'}
   {1201}
1202  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '%='}
   {1202}
1203  {'left': 'declaration_parameter', 'right': ['identifier', 'declaration_parameter_assign'], 'point': 2, 'origin': 11, 'isTer': True, 'accept': '<='}
   {1203}
1204  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'number'}
   {1204}
1205  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'if'}
   {1205}
1206  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'float'}
   {1206}
1207  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '{'}
   {1207}
1208  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '*'}
   {1208}
1209  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'double'}
   {1209}
1210  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'identifier'}
   {1210}
1211  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '#'}
   {1211}
1212  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ','}
   {1212}
1213  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ')'}
   {1213}
1214  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '-='}
   {1214}
1215  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'for'}
   {1215}
1216  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '>='}
   {1216}
1217  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'break'}
   {1217}
1218  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '^='}
   {1218}
1219  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '='}
   {1219}
1220  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'char'}
   {1220}
1221  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '&='}
   {1221}
1222  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '!='}
   {1222}
1223  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '*='}
   {1223}
1224  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '=='}
   {1224}
1225  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '&'}
   {1225}
1226  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '}'}
   {1226}
1227  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': ';'}
   {1227}
1228  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'while'}
   {1228}
1229  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '|='}
   {1229}
1230  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '<'}
   {1230}
1231  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'int'}
   {1231}
1232  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '/'}
   {1232}
1233  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'continue'}
   {1233}
1234  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '^'}
   {1234}
1235  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'else'}
   {1235}
1236  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'void'}
   {1236}
1237  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '+'}
   {1237}
1238  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '%'}
   {1238}
1239  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '/='}
   {1239}
1240  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '-'}
   {1240}
1241  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '('}
   {1241}
1242  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '>'}
   {1242}
1243  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '+='}
   {1243}
1244  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': 'return'}
   {1244}
1245  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '%='}
   {1245}
1246  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 0, 'origin': 12, 'isTer': False, 'accept': '<='}
   {1246}
1247  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4386, 4902, 1591, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4472, 1677, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4558, 1247, 1763, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1248  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4387, 4903, 1592, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4473, 1678, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4559, 1248, 1764, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1249  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4388, 4904, 1593, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4474, 1679, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4560, 1249, 1765, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1250  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4389, 4905, 1594, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4475, 1680, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4561, 1250, 1766, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1251  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4390, 4906, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4476, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4562, 1251, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1252  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4391, 4907, 1595, 1596, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4477, 1681, 1682, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4563, 1252, 1767, 1768, 1775, 1781, 1783, 1784, 1789, 1791}
1253  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4392, 4908, 1595, 1597, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4478, 1681, 1683, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4564, 1253, 1767, 1769, 1775, 1781, 1783, 1784, 1789, 1791}
1254  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4393, 4909, 1595, 1598, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4479, 1681, 1684, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4565, 1254, 1767, 1770, 1775, 1781, 1783, 1784, 1789, 1791}
1255  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1255, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
1256  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1256, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1257  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4396, 4912, 1595, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4482, 1681, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4568, 1767, 1257, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
1258  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4397, 4913, 1595, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4483, 1681, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4569, 1767, 1258, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
1259  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4398, 4914, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4484, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4570, 1767, 1259, 1775, 1781, 1783, 1784, 1789, 1791}
1260  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4399, 4915, 1595, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4485, 1681, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4571, 1767, 1260, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
1261  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4400, 4916, 1595, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4486, 1681, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4572, 1767, 1261, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
1262  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4401, 4917, 1595, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4487, 1681, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4573, 1767, 1262, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
1263  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4402, 4918, 1595, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4488, 1681, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4574, 1767, 1263, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
1264  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4403, 4919, 1595, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4489, 1681, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4575, 1767, 1775, 1264, 1780, 1781, 1783, 1784, 1789, 1791}
1265  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4404, 4920, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4490, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4576, 1767, 1775, 1265, 1781, 1783, 1784, 1789, 1791}
1266  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4405, 4921, 1595, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4491, 1681, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4577, 1767, 1775, 1266, 1781, 1782, 1783, 1784, 1789, 1791}
1267  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4406, 4922, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4492, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4578, 1767, 1775, 1267, 1781, 1783, 1784, 1789, 1791}
1268  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4407, 1595, 4923, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4493, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4579, 1767, 1775, 1268, 1781, 1783, 1784, 1789, 1791}
1269  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4408, 1595, 4924, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4494, 1681, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4580, 1767, 1775, 1269, 1781, 1783, 1784, 1785, 1789, 1791}
1270  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1270, 1783, 1784, 1786, 1789, 1791}
1271  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1787, 4410, 1595, 4926, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4496, 1681, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4582, 1767, 1775, 1781, 1783, 1784, 1271, 1789, 1791}
1272  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '|='}
   {1272, 1793, 1796, 1797, 1799, 1801, 1805, 4411, 1595, 4927, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4497, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4583, 1767, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
1273  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4412, 4928, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4498, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4584, 1775, 1781, 1783, 1784, 1273, 1789, 1791}
1274  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4413, 4929, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4499, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4585, 1775, 1781, 1783, 1784, 1274, 1789, 1790, 1791}
1275  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4414, 4930, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4500, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4586, 1775, 1781, 1783, 1784, 1275, 1789, 1791}
1276  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 1595, 4415, 1603, 4931, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4501, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4587, 1775, 1781, 1783, 1784, 1276, 1789, 1791}
1277  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1277, 1595, 4416, 1603, 4932, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 4502, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4588, 1775, 1781, 1783, 1784, 1789, 1791}
1278  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 1595, 4417, 1603, 4933, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 1681, 4503, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 1767, 4589, 1775, 1781, 1783, 1784, 1789, 1278, 1791}
1279  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 1279, 1595, 4418, 1603, 4934, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 1681, 4504, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 1767, 4590, 1775, 1781, 1783, 1784, 1789, 1791}
1280  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '+'}
   {1280, 1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4419, 4935, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 4505, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4591, 1775, 1781, 1783, 1784, 1789, 1791}
1281  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '%'}
   {1281, 1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4420, 4936, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 4506, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4592, 1781, 1783, 1784, 1789, 1791}
1282  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '/='}
   {1793, 1282, 1796, 1797, 1798, 1799, 1801, 1805, 1595, 1603, 4421, 1609, 4937, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 1681, 1689, 4507, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 1767, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
1283  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '-'}
   {1793, 1283, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4422, 1609, 4938, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 4508, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
1284  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '('}
   {1793, 1284, 1796, 1797, 1799, 1800, 1801, 1805, 1595, 1603, 4423, 1609, 1611, 1612, 4939, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 1681, 1689, 4509, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 1767, 1775, 4595, 1781, 1783, 1784, 1789, 1791}
1285  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1285, 1797, 1799, 1801, 1805, 1595, 1603, 4424, 1609, 1611, 1612, 4940, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 4510, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4596, 1781, 1783, 1784, 1789, 1791}
1286  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1286, 1799, 1801, 1802, 1805, 1595, 1603, 4425, 1609, 1611, 1612, 4941, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 1681, 1689, 1695, 4511, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 1767, 1775, 4597, 1781, 1783, 1784, 1789, 1791}
1287  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1287, 1799, 1801, 1803, 1805, 1595, 1603, 1609, 4426, 1611, 1612, 4942, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 1681, 1689, 1695, 4512, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 1767, 1775, 1781, 4598, 1783, 1784, 1789, 1791}
1288  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1288, 1801, 1804, 1805, 1595, 1603, 1609, 4427, 1611, 1612, 4943, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 1681, 1689, 1695, 1697, 1698, 4513, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1289  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 1, 'origin': 12, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1289, 1801, 1805, 1595, 1603, 1609, 1611, 4428, 1612, 4944, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4600, 1681, 1689, 1695, 1697, 1698, 4514, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
1290  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'number'}
   {1290}
1291  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'if'}
   {1291}
1292  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'float'}
   {1292}
1293  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '{'}
   {1293}
1294  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '*'}
   {1294}
1295  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'double'}
   {1295}
1296  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'identifier'}
   {1296}
1297  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '#'}
   {1297}
1298  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ','}
   {1298}
1299  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ')'}
   {1299}
1300  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '-='}
   {1300}
1301  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'for'}
   {1301}
1302  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '>='}
   {1302}
1303  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'break'}
   {1303}
1304  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '^='}
   {1304}
1305  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '='}
   {1305}
1306  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'char'}
   {1306}
1307  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '&='}
   {1307}
1308  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '!='}
   {1308}
1309  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '*='}
   {1309}
1310  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '=='}
   {1310}
1311  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '&'}
   {1311}
1312  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '}'}
   {1312}
1313  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': ';'}
   {1313}
1314  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'while'}
   {1314}
1315  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '|='}
   {1315}
1316  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '<'}
   {1316}
1317  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'int'}
   {1317}
1318  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '/'}
   {1318}
1319  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'continue'}
   {1319}
1320  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '^'}
   {1320}
1321  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'else'}
   {1321}
1322  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'void'}
   {1322}
1323  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '+'}
   {1323}
1324  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '%'}
   {1324}
1325  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '/='}
   {1325}
1326  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '-'}
   {1326}
1327  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '('}
   {1327}
1328  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '>'}
   {1328}
1329  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '+='}
   {1329}
1330  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': 'return'}
   {1330}
1331  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '%='}
   {1331}
1332  {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'point': 2, 'origin': 12, 'isTer': True, 'accept': '<='}
   {1332}
1333  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'number'}
   {1333}
1334  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'if'}
   {1334}
1335  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'float'}
   {1335}
1336  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '{'}
   {1336}
1337  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '*'}
   {1337}
1338  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'double'}
   {1338}
1339  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'identifier'}
   {1339}
1340  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '#'}
   {1340}
1341  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ','}
   {1341}
1342  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ')'}
   {1342}
1343  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '-='}
   {1343}
1344  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'for'}
   {1344}
1345  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '>='}
   {1345}
1346  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'break'}
   {1346}
1347  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '^='}
   {1347}
1348  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '='}
   {1348}
1349  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'char'}
   {1349}
1350  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '&='}
   {1350}
1351  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '!='}
   {1351}
1352  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '*='}
   {1352}
1353  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '=='}
   {1353}
1354  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '&'}
   {1354}
1355  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '}'}
   {1355}
1356  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': ';'}
   {1356}
1357  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'while'}
   {1357}
1358  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '|='}
   {1358}
1359  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '<'}
   {1359}
1360  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'int'}
   {1360}
1361  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '/'}
   {1361}
1362  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'continue'}
   {1362}
1363  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '^'}
   {1363}
1364  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'else'}
   {1364}
1365  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'void'}
   {1365}
1366  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '+'}
   {1366}
1367  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '%'}
   {1367}
1368  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '/='}
   {1368}
1369  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '-'}
   {1369}
1370  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '('}
   {1370}
1371  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '>'}
   {1371}
1372  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '+='}
   {1372}
1373  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': 'return'}
   {1373}
1374  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '%='}
   {1374}
1375  {'left': 'declaration_parameter_assign', 'right': [], 'point': 0, 'origin': 13, 'isTer': True, 'accept': '<='}
   {1375}
1376  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {1376}
1377  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1377}
1378  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {1378}
1379  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1379}
1380  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1380}
1381  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {1381}
1382  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {1382}
1383  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1383}
1384  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ','}
   {1384}
1385  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1385}
1386  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-='}
   {1386}
1387  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1387}
1388  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>='}
   {1388}
1389  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1389}
1390  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '^='}
   {1390}
1391  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '='}
   {1391}
1392  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {1392}
1393  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '&='}
   {1393}
1394  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '!='}
   {1394}
1395  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*='}
   {1395}
1396  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1396}
1397  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '&'}
   {1397}
1398  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '}'}
   {1398}
1399  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': ';'}
   {1399}
1400  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1400}
1401  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '|='}
   {1401}
1402  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1402}
1403  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1403}
1404  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/'}
   {1404}
1405  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1405}
1406  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '^'}
   {1406}
1407  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {1407}
1408  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1408}
1409  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+'}
   {1409}
1410  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '%'}
   {1410}
1411  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1411}
1412  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-'}
   {1412}
1413  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '('}
   {1413}
1414  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1414}
1415  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1415}
1416  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {1416}
1417  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '%='}
   {1417}
1418  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1418}
1419  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {1075, 1419, 1083}
1420  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1083, 1420, 1076}
1421  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {1083, 1077, 1421}
1422  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1078, 1083, 1422}
1423  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1083, 1079, 1423}
1424  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {1424, 1080, 1083}
1425  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {1425, 1083, 1081}
1426  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1426, 1083, 1082}
1427  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ','}
   {1083, 1427}
1428  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1083, 1428, 1084}
1429  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '-='}
   {1085, 1083, 1429}
1430  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1086, 1083, 1430}
1431  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '>='}
   {1083, 1087, 1431}
1432  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1432, 1088, 1083}
1433  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '^='}
   {1089, 1433, 1083}
1434  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '='}
   {1434, 1083, 1090}
1435  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {1083, 1091, 1435}
1436  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '&='}
   {1083, 1436, 1092}
1437  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '!='}
   {1083, 1093, 1437}
1438  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '*='}
   {1094, 1083, 1438}
1439  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1083, 1095, 1439}
1440  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '&'}
   {1440, 1096, 1083}
1441  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '}'}
   {1097, 1441, 1083}
1442  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': ';'}
   {1442, 1083, 1098}
1443  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1083, 1099, 1443}
1444  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '|='}
   {1083, 1444, 1100}
1445  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1083, 1101, 1445}
1446  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1102, 1083, 1446}
1447  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '/'}
   {1083, 1103, 1447}
1448  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1448, 1104, 1083}
1449  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '^'}
   {1105, 1449, 1083}
1450  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {1450, 1083, 1106}
1451  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1083, 1107, 1451}
1452  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '+'}
   {1083, 1452, 1108}
1453  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '%'}
   {1083, 1109, 1453}
1454  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1110, 1083, 1454}
1455  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '-'}
   {1083, 1111, 1455}
1456  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '('}
   {1456, 1112, 1083}
1457  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1113, 1457, 1083}
1458  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1458, 1083, 1114}
1459  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {1083, 1115, 1459}
1460  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '%='}
   {1083, 1460, 1116}
1461  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 1, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1083, 1117, 1461}
1462  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'number'}
   {1376, 1548, 1462}
1463  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'if'}
   {1377, 1549, 1463}
1464  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'float'}
   {1464, 1378, 1550}
1465  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '{'}
   {1465, 1379, 1551}
1466  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '*'}
   {1552, 1466, 1380}
1467  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'double'}
   {1553, 1467, 1381}
1468  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'identifier'}
   {1554, 1468, 1382}
1469  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '#'}
   {1555, 1469, 1383}
1470  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ','}
   {1384, 1556, 1470}
1471  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ')'}
   {1385, 1557, 1471}
1472  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '-='}
   {1472, 1386, 1558}
1473  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'for'}
   {1473, 1387, 1559}
1474  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '>='}
   {1560, 1474, 1388}
1475  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'break'}
   {1561, 1475, 1389}
1476  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '^='}
   {1562, 1476, 1390}
1477  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '='}
   {1563, 1477, 1391}
1478  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'char'}
   {1392, 1564, 1478}
1479  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '&='}
   {1393, 1565, 1479}
1480  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '!='}
   {1480, 1394, 1566}
1481  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '*='}
   {1481, 1395, 1567}
1482  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '=='}
   {1568, 1482, 1396}
1483  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '&'}
   {1569, 1483, 1397}
1484  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '}'}
   {1570, 1484, 1398}
1485  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': ';'}
   {1571, 1485, 1399}
1486  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'while'}
   {1400, 1572, 1486}
1487  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '|='}
   {1401, 1573, 1487}
1488  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '<'}
   {1488, 1402, 1574}
1489  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'int'}
   {1489, 1403, 1575}
1490  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '/'}
   {1576, 1490, 1404}
1491  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'continue'}
   {1577, 1491, 1405}
1492  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '^'}
   {1578, 1492, 1406}
1493  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'else'}
   {1579, 1493, 1407}
1494  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'void'}
   {1408, 1580, 1494}
1495  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '+'}
   {1409, 1581, 1495}
1496  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '%'}
   {1496, 1410, 1582}
1497  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '/='}
   {1497, 1411, 1583}
1498  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '-'}
   {1584, 1498, 1412}
1499  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '('}
   {1585, 1499, 1413}
1500  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '>'}
   {1586, 1500, 1414}
1501  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '+='}
   {1587, 1501, 1415}
1502  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': 'return'}
   {1416, 1588, 1502}
1503  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '%='}
   {1417, 1589, 1503}
1504  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 2, 'origin': 14, 'isTer': False, 'accept': '<='}
   {1504, 1418, 1590}
1505  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'number'}
   {1505}
1506  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'if'}
   {1506}
1507  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'float'}
   {1507}
1508  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '{'}
   {1508}
1509  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '*'}
   {1509}
1510  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'double'}
   {1510}
1511  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'identifier'}
   {1511}
1512  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '#'}
   {1512}
1513  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ','}
   {1513}
1514  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ')'}
   {1514}
1515  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '-='}
   {1515}
1516  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'for'}
   {1516}
1517  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '>='}
   {1517}
1518  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'break'}
   {1518}
1519  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '^='}
   {1519}
1520  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '='}
   {1520}
1521  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'char'}
   {1521}
1522  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '&='}
   {1522}
1523  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '!='}
   {1523}
1524  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '*='}
   {1524}
1525  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '=='}
   {1525}
1526  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '&'}
   {1526}
1527  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '}'}
   {1527}
1528  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': ';'}
   {1528}
1529  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'while'}
   {1529}
1530  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '|='}
   {1530}
1531  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '<'}
   {1531}
1532  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'int'}
   {1532}
1533  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '/'}
   {1533}
1534  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'continue'}
   {1534}
1535  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '^'}
   {1535}
1536  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'else'}
   {1536}
1537  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'void'}
   {1537}
1538  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '+'}
   {1538}
1539  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '%'}
   {1539}
1540  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '/='}
   {1540}
1541  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '-'}
   {1541}
1542  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '('}
   {1542}
1543  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '>'}
   {1543}
1544  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '+='}
   {1544}
1545  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': 'return'}
   {1545}
1546  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '%='}
   {1546}
1547  {'left': 'declaration_parameter_suffix', 'right': [',', 'declaration_parameter', 'declaration_parameter_suffix'], 'point': 3, 'origin': 14, 'isTer': True, 'accept': '<='}
   {1547}
1548  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'number'}
   {1548}
1549  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'if'}
   {1549}
1550  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'float'}
   {1550}
1551  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '{'}
   {1551}
1552  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '*'}
   {1552}
1553  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'double'}
   {1553}
1554  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'identifier'}
   {1554}
1555  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '#'}
   {1555}
1556  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ','}
   {1556}
1557  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ')'}
   {1557}
1558  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '-='}
   {1558}
1559  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'for'}
   {1559}
1560  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '>='}
   {1560}
1561  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'break'}
   {1561}
1562  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '^='}
   {1562}
1563  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '='}
   {1563}
1564  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'char'}
   {1564}
1565  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '&='}
   {1565}
1566  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '!='}
   {1566}
1567  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '*='}
   {1567}
1568  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '=='}
   {1568}
1569  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '&'}
   {1569}
1570  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '}'}
   {1570}
1571  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': ';'}
   {1571}
1572  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'while'}
   {1572}
1573  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '|='}
   {1573}
1574  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '<'}
   {1574}
1575  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'int'}
   {1575}
1576  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '/'}
   {1576}
1577  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'continue'}
   {1577}
1578  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '^'}
   {1578}
1579  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'else'}
   {1579}
1580  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'void'}
   {1580}
1581  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '+'}
   {1581}
1582  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '%'}
   {1582}
1583  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '/='}
   {1583}
1584  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '-'}
   {1584}
1585  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '('}
   {1585}
1586  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '>'}
   {1586}
1587  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '+='}
   {1587}
1588  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': 'return'}
   {1588}
1589  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '%='}
   {1589}
1590  {'left': 'declaration_parameter_suffix', 'right': [], 'point': 0, 'origin': 15, 'isTer': True, 'accept': '<='}
   {1590}
1591  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'number'}
   {1591}
1592  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'if'}
   {1592}
1593  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'float'}
   {1593}
1594  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '{'}
   {1594}
1595  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*'}
   {1595}
1596  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'double'}
   {1596}
1597  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'identifier'}
   {1597}
1598  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '#'}
   {1598}
1599  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ','}
   {1599}
1600  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ')'}
   {1600}
1601  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-='}
   {1601}
1602  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'for'}
   {1602}
1603  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>='}
   {1603}
1604  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'break'}
   {1604}
1605  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '^='}
   {1605}
1606  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '='}
   {1606}
1607  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'char'}
   {1607}
1608  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '&='}
   {1608}
1609  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '!='}
   {1609}
1610  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*='}
   {1610}
1611  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '=='}
   {1611}
1612  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '&'}
   {1612}
1613  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '}'}
   {1613}
1614  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': ';'}
   {1614}
1615  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'while'}
   {1615}
1616  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '|='}
   {1616}
1617  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<'}
   {1617}
1618  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'int'}
   {1618}
1619  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/'}
   {1619}
1620  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'continue'}
   {1620}
1621  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '^'}
   {1621}
1622  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'else'}
   {1622}
1623  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'void'}
   {1623}
1624  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+'}
   {1624}
1625  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '%'}
   {1625}
1626  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/='}
   {1626}
1627  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-'}
   {1627}
1628  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '('}
   {1628}
1629  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>'}
   {1629}
1630  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+='}
   {1630}
1631  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'return'}
   {1631}
1632  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '%='}
   {1632}
1633  {'left': 'primary_expression', 'right': ['identifier'], 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<='}
   {1633}
1634  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'number'}
   {1634}
1635  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'if'}
   {1635}
1636  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'float'}
   {1636}
1637  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '{'}
   {1637}
1638  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*'}
   {1638}
1639  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'double'}
   {1639}
1640  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'identifier'}
   {1640}
1641  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '#'}
   {1641}
1642  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ','}
   {1642}
1643  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ')'}
   {1643}
1644  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-='}
   {1644}
1645  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'for'}
   {1645}
1646  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>='}
   {1646}
1647  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'break'}
   {1647}
1648  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '^='}
   {1648}
1649  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '='}
   {1649}
1650  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'char'}
   {1650}
1651  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '&='}
   {1651}
1652  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '!='}
   {1652}
1653  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*='}
   {1653}
1654  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '=='}
   {1654}
1655  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '&'}
   {1655}
1656  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '}'}
   {1656}
1657  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': ';'}
   {1657}
1658  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'while'}
   {1658}
1659  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '|='}
   {1659}
1660  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<'}
   {1660}
1661  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'int'}
   {1661}
1662  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/'}
   {1662}
1663  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'continue'}
   {1663}
1664  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '^'}
   {1664}
1665  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'else'}
   {1665}
1666  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'void'}
   {1666}
1667  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+'}
   {1667}
1668  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '%'}
   {1668}
1669  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/='}
   {1669}
1670  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-'}
   {1670}
1671  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '('}
   {1671}
1672  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>'}
   {1672}
1673  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+='}
   {1673}
1674  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'return'}
   {1674}
1675  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '%='}
   {1675}
1676  {'left': 'primary_expression', 'right': ['identifier'], 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<='}
   {1676}
1677  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'number'}
   {1677}
1678  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'if'}
   {1678}
1679  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'float'}
   {1679}
1680  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '{'}
   {1680}
1681  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*'}
   {1681}
1682  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'double'}
   {1682}
1683  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'identifier'}
   {1683}
1684  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '#'}
   {1684}
1685  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ','}
   {1685}
1686  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ')'}
   {1686}
1687  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-='}
   {1687}
1688  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'for'}
   {1688}
1689  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>='}
   {1689}
1690  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'break'}
   {1690}
1691  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '^='}
   {1691}
1692  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '='}
   {1692}
1693  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'char'}
   {1693}
1694  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '&='}
   {1694}
1695  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '!='}
   {1695}
1696  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*='}
   {1696}
1697  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '=='}
   {1697}
1698  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '&'}
   {1698}
1699  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '}'}
   {1699}
1700  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': ';'}
   {1700}
1701  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'while'}
   {1701}
1702  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '|='}
   {1702}
1703  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<'}
   {1703}
1704  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'int'}
   {1704}
1705  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/'}
   {1705}
1706  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'continue'}
   {1706}
1707  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '^'}
   {1707}
1708  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'else'}
   {1708}
1709  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'void'}
   {1709}
1710  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+'}
   {1710}
1711  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '%'}
   {1711}
1712  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/='}
   {1712}
1713  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-'}
   {1713}
1714  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '('}
   {1714}
1715  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>'}
   {1715}
1716  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+='}
   {1716}
1717  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'return'}
   {1717}
1718  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '%='}
   {1718}
1719  {'left': 'primary_expression', 'right': ['number'], 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<='}
   {1719}
1720  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'number'}
   {1720}
1721  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'if'}
   {1721}
1722  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'float'}
   {1722}
1723  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '{'}
   {1723}
1724  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*'}
   {1724}
1725  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'double'}
   {1725}
1726  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'identifier'}
   {1726}
1727  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '#'}
   {1727}
1728  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ','}
   {1728}
1729  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ')'}
   {1729}
1730  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-='}
   {1730}
1731  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'for'}
   {1731}
1732  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>='}
   {1732}
1733  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'break'}
   {1733}
1734  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '^='}
   {1734}
1735  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '='}
   {1735}
1736  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'char'}
   {1736}
1737  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '&='}
   {1737}
1738  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '!='}
   {1738}
1739  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*='}
   {1739}
1740  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '=='}
   {1740}
1741  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '&'}
   {1741}
1742  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '}'}
   {1742}
1743  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': ';'}
   {1743}
1744  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'while'}
   {1744}
1745  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '|='}
   {1745}
1746  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<'}
   {1746}
1747  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'int'}
   {1747}
1748  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/'}
   {1748}
1749  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'continue'}
   {1749}
1750  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '^'}
   {1750}
1751  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'else'}
   {1751}
1752  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'void'}
   {1752}
1753  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+'}
   {1753}
1754  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '%'}
   {1754}
1755  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/='}
   {1755}
1756  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-'}
   {1756}
1757  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '('}
   {1757}
1758  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>'}
   {1758}
1759  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+='}
   {1759}
1760  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'return'}
   {1760}
1761  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '%='}
   {1761}
1762  {'left': 'primary_expression', 'right': ['number'], 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<='}
   {1762}
1763  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1763}
1764  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1764}
1765  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1765}
1766  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1766}
1767  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1767}
1768  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1768}
1769  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1769}
1770  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1770}
1771  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ','}
   {1771}
1772  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1772}
1773  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1773}
1774  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1774}
1775  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1775}
1776  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1776}
1777  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '^='}
   {1777}
1778  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '='}
   {1778}
1779  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1779}
1780  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '&='}
   {1780}
1781  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1781}
1782  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1782}
1783  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1783}
1784  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '&'}
   {1784}
1785  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1785}
1786  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1786}
1787  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1787}
1788  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '|='}
   {1788}
1789  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1789}
1790  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1790}
1791  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1791}
1792  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1792}
1793  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '^'}
   {1793}
1794  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1794}
1795  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1795}
1796  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1796}
1797  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '%'}
   {1797}
1798  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1798}
1799  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1799}
1800  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '('}
   {1800}
1801  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1801}
1802  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1802}
1803  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1803}
1804  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '%='}
   {1804}
1805  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1805}
1806  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1806, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1807  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1807, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1808  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1808, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1809  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1809, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1810  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1810, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1811  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1811, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1812  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1812, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1813  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1813, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1814  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 1814, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1815  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1815, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1816  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1816, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1817  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1817, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1818  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1818, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1819  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1819, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1820  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1820, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1821  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1821, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1822  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1822, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1823  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1823, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1824  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1824, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1825  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1825, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1826  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1826, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1827  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1827, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1828  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1828, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1829  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1829, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1830  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1830, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1831  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1831, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1832  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1832, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1833  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1833, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1834  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1834, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1835  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1835, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1836  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1836, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1837  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1837, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1838  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1838, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1839  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1839, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1840  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1840, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1841  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1841, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1842  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1842, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1843  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1843, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1844  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1844, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1845  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1845, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1846  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1846, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1847  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1847, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1848  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1848, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
1849  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'number'}
   {1849}
1850  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'if'}
   {1850}
1851  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'float'}
   {1851}
1852  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '{'}
   {1852}
1853  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*'}
   {1853}
1854  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'double'}
   {1854}
1855  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'identifier'}
   {1855}
1856  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '#'}
   {1856}
1857  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ','}
   {1857}
1858  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ')'}
   {1858}
1859  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-='}
   {1859}
1860  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'for'}
   {1860}
1861  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>='}
   {1861}
1862  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'break'}
   {1862}
1863  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '^='}
   {1863}
1864  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '='}
   {1864}
1865  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'char'}
   {1865}
1866  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '&='}
   {1866}
1867  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '!='}
   {1867}
1868  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*='}
   {1868}
1869  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '=='}
   {1869}
1870  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '&'}
   {1870}
1871  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '}'}
   {1871}
1872  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': ';'}
   {1872}
1873  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'while'}
   {1873}
1874  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '|='}
   {1874}
1875  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<'}
   {1875}
1876  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'int'}
   {1876}
1877  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/'}
   {1877}
1878  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'continue'}
   {1878}
1879  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '^'}
   {1879}
1880  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'else'}
   {1880}
1881  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'void'}
   {1881}
1882  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+'}
   {1882}
1883  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '%'}
   {1883}
1884  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/='}
   {1884}
1885  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-'}
   {1885}
1886  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '('}
   {1886}
1887  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>'}
   {1887}
1888  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+='}
   {1888}
1889  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'return'}
   {1889}
1890  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '%='}
   {1890}
1891  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<='}
   {1891}
1892  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'number'}
   {1892}
1893  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'if'}
   {1893}
1894  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'float'}
   {1894}
1895  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '{'}
   {1895}
1896  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '*'}
   {1896}
1897  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'double'}
   {1897}
1898  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'identifier'}
   {1898}
1899  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '#'}
   {1899}
1900  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ','}
   {1900}
1901  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ')'}
   {1901}
1902  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '-='}
   {1902}
1903  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'for'}
   {1903}
1904  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '>='}
   {1904}
1905  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'break'}
   {1905}
1906  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '^='}
   {1906}
1907  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '='}
   {1907}
1908  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'char'}
   {1908}
1909  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '&='}
   {1909}
1910  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '!='}
   {1910}
1911  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '*='}
   {1911}
1912  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '=='}
   {1912}
1913  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '&'}
   {1913}
1914  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '}'}
   {1914}
1915  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': ';'}
   {1915}
1916  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'while'}
   {1916}
1917  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '|='}
   {1917}
1918  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '<'}
   {1918}
1919  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'int'}
   {1919}
1920  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '/'}
   {1920}
1921  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'continue'}
   {1921}
1922  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '^'}
   {1922}
1923  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'else'}
   {1923}
1924  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'void'}
   {1924}
1925  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '+'}
   {1925}
1926  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '%'}
   {1926}
1927  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '/='}
   {1927}
1928  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '-'}
   {1928}
1929  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '('}
   {1929}
1930  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '>'}
   {1930}
1931  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '+='}
   {1931}
1932  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': 'return'}
   {1932}
1933  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '%='}
   {1933}
1934  {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'point': 3, 'origin': 18, 'isTer': True, 'accept': '<='}
   {1934}
1935  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'number'}
   {1935}
1936  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'if'}
   {1936}
1937  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'float'}
   {1937}
1938  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '{'}
   {1938}
1939  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*'}
   {1939}
1940  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'double'}
   {1940}
1941  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'identifier'}
   {1941}
1942  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '#'}
   {1942}
1943  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ','}
   {1943}
1944  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ')'}
   {1944}
1945  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-='}
   {1945}
1946  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'for'}
   {1946}
1947  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>='}
   {1947}
1948  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'break'}
   {1948}
1949  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '^='}
   {1949}
1950  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '='}
   {1950}
1951  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'char'}
   {1951}
1952  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '&='}
   {1952}
1953  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '!='}
   {1953}
1954  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*='}
   {1954}
1955  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '=='}
   {1955}
1956  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '&'}
   {1956}
1957  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '}'}
   {1957}
1958  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': ';'}
   {1958}
1959  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'while'}
   {1959}
1960  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '|='}
   {1960}
1961  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<'}
   {1961}
1962  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'int'}
   {1962}
1963  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/'}
   {1963}
1964  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'continue'}
   {1964}
1965  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '^'}
   {1965}
1966  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'else'}
   {1966}
1967  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'void'}
   {1967}
1968  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+'}
   {1968}
1969  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '%'}
   {1969}
1970  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/='}
   {1970}
1971  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-'}
   {1971}
1972  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '('}
   {1972}
1973  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>'}
   {1973}
1974  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+='}
   {1974}
1975  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'return'}
   {1975}
1976  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '%='}
   {1976}
1977  {'left': 'operator', 'right': ['+'], 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<='}
   {1977}
1978  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'number'}
   {1978}
1979  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'if'}
   {1979}
1980  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'float'}
   {1980}
1981  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '{'}
   {1981}
1982  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '*'}
   {1982}
1983  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'double'}
   {1983}
1984  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'identifier'}
   {1984}
1985  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '#'}
   {1985}
1986  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ','}
   {1986}
1987  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ')'}
   {1987}
1988  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '-='}
   {1988}
1989  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'for'}
   {1989}
1990  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '>='}
   {1990}
1991  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'break'}
   {1991}
1992  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '^='}
   {1992}
1993  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '='}
   {1993}
1994  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'char'}
   {1994}
1995  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '&='}
   {1995}
1996  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '!='}
   {1996}
1997  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '*='}
   {1997}
1998  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '=='}
   {1998}
1999  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '&'}
   {1999}
2000  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '}'}
   {2000}
2001  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': ';'}
   {2001}
2002  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'while'}
   {2002}
2003  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '|='}
   {2003}
2004  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '<'}
   {2004}
2005  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'int'}
   {2005}
2006  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '/'}
   {2006}
2007  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'continue'}
   {2007}
2008  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '^'}
   {2008}
2009  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'else'}
   {2009}
2010  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'void'}
   {2010}
2011  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '+'}
   {2011}
2012  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '%'}
   {2012}
2013  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '/='}
   {2013}
2014  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '-'}
   {2014}
2015  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '('}
   {2015}
2016  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '>'}
   {2016}
2017  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '+='}
   {2017}
2018  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': 'return'}
   {2018}
2019  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '%='}
   {2019}
2020  {'left': 'operator', 'right': ['+'], 'point': 1, 'origin': 19, 'isTer': True, 'accept': '<='}
   {2020}
2021  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'number'}
   {2021}
2022  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'if'}
   {2022}
2023  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'float'}
   {2023}
2024  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '{'}
   {2024}
2025  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '*'}
   {2025}
2026  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'double'}
   {2026}
2027  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'identifier'}
   {2027}
2028  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '#'}
   {2028}
2029  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ','}
   {2029}
2030  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ')'}
   {2030}
2031  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '-='}
   {2031}
2032  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'for'}
   {2032}
2033  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '>='}
   {2033}
2034  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'break'}
   {2034}
2035  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '^='}
   {2035}
2036  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '='}
   {2036}
2037  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'char'}
   {2037}
2038  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '&='}
   {2038}
2039  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '!='}
   {2039}
2040  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '*='}
   {2040}
2041  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '=='}
   {2041}
2042  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '&'}
   {2042}
2043  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '}'}
   {2043}
2044  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': ';'}
   {2044}
2045  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'while'}
   {2045}
2046  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '|='}
   {2046}
2047  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '<'}
   {2047}
2048  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'int'}
   {2048}
2049  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '/'}
   {2049}
2050  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'continue'}
   {2050}
2051  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '^'}
   {2051}
2052  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'else'}
   {2052}
2053  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'void'}
   {2053}
2054  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '+'}
   {2054}
2055  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '%'}
   {2055}
2056  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '/='}
   {2056}
2057  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '-'}
   {2057}
2058  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '('}
   {2058}
2059  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '>'}
   {2059}
2060  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '+='}
   {2060}
2061  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': 'return'}
   {2061}
2062  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '%='}
   {2062}
2063  {'left': 'operator', 'right': ['-'], 'point': 0, 'origin': 20, 'isTer': False, 'accept': '<='}
   {2063}
2064  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'number'}
   {2064}
2065  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'if'}
   {2065}
2066  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'float'}
   {2066}
2067  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '{'}
   {2067}
2068  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '*'}
   {2068}
2069  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'double'}
   {2069}
2070  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'identifier'}
   {2070}
2071  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '#'}
   {2071}
2072  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ','}
   {2072}
2073  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ')'}
   {2073}
2074  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '-='}
   {2074}
2075  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'for'}
   {2075}
2076  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '>='}
   {2076}
2077  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'break'}
   {2077}
2078  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '^='}
   {2078}
2079  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '='}
   {2079}
2080  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'char'}
   {2080}
2081  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '&='}
   {2081}
2082  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '!='}
   {2082}
2083  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '*='}
   {2083}
2084  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '=='}
   {2084}
2085  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '&'}
   {2085}
2086  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '}'}
   {2086}
2087  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': ';'}
   {2087}
2088  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'while'}
   {2088}
2089  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '|='}
   {2089}
2090  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '<'}
   {2090}
2091  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'int'}
   {2091}
2092  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '/'}
   {2092}
2093  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'continue'}
   {2093}
2094  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '^'}
   {2094}
2095  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'else'}
   {2095}
2096  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'void'}
   {2096}
2097  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '+'}
   {2097}
2098  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '%'}
   {2098}
2099  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '/='}
   {2099}
2100  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '-'}
   {2100}
2101  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '('}
   {2101}
2102  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '>'}
   {2102}
2103  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '+='}
   {2103}
2104  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': 'return'}
   {2104}
2105  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '%='}
   {2105}
2106  {'left': 'operator', 'right': ['-'], 'point': 1, 'origin': 20, 'isTer': True, 'accept': '<='}
   {2106}
2107  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'number'}
   {2107}
2108  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'if'}
   {2108}
2109  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'float'}
   {2109}
2110  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '{'}
   {2110}
2111  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*'}
   {2111}
2112  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'double'}
   {2112}
2113  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'identifier'}
   {2113}
2114  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '#'}
   {2114}
2115  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ','}
   {2115}
2116  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ')'}
   {2116}
2117  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-='}
   {2117}
2118  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'for'}
   {2118}
2119  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>='}
   {2119}
2120  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'break'}
   {2120}
2121  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '^='}
   {2121}
2122  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '='}
   {2122}
2123  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'char'}
   {2123}
2124  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '&='}
   {2124}
2125  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '!='}
   {2125}
2126  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*='}
   {2126}
2127  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '=='}
   {2127}
2128  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '&'}
   {2128}
2129  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '}'}
   {2129}
2130  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': ';'}
   {2130}
2131  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'while'}
   {2131}
2132  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '|='}
   {2132}
2133  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<'}
   {2133}
2134  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'int'}
   {2134}
2135  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/'}
   {2135}
2136  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'continue'}
   {2136}
2137  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '^'}
   {2137}
2138  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'else'}
   {2138}
2139  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'void'}
   {2139}
2140  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+'}
   {2140}
2141  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '%'}
   {2141}
2142  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/='}
   {2142}
2143  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-'}
   {2143}
2144  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '('}
   {2144}
2145  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>'}
   {2145}
2146  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+='}
   {2146}
2147  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'return'}
   {2147}
2148  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '%='}
   {2148}
2149  {'left': 'operator', 'right': ['*'], 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<='}
   {2149}
2150  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'number'}
   {2150}
2151  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'if'}
   {2151}
2152  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'float'}
   {2152}
2153  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '{'}
   {2153}
2154  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '*'}
   {2154}
2155  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'double'}
   {2155}
2156  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'identifier'}
   {2156}
2157  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '#'}
   {2157}
2158  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ','}
   {2158}
2159  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ')'}
   {2159}
2160  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '-='}
   {2160}
2161  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'for'}
   {2161}
2162  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '>='}
   {2162}
2163  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'break'}
   {2163}
2164  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '^='}
   {2164}
2165  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '='}
   {2165}
2166  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'char'}
   {2166}
2167  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '&='}
   {2167}
2168  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '!='}
   {2168}
2169  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '*='}
   {2169}
2170  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '=='}
   {2170}
2171  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '&'}
   {2171}
2172  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '}'}
   {2172}
2173  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': ';'}
   {2173}
2174  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'while'}
   {2174}
2175  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '|='}
   {2175}
2176  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '<'}
   {2176}
2177  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'int'}
   {2177}
2178  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '/'}
   {2178}
2179  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'continue'}
   {2179}
2180  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '^'}
   {2180}
2181  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'else'}
   {2181}
2182  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'void'}
   {2182}
2183  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '+'}
   {2183}
2184  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '%'}
   {2184}
2185  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '/='}
   {2185}
2186  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '-'}
   {2186}
2187  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '('}
   {2187}
2188  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '>'}
   {2188}
2189  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '+='}
   {2189}
2190  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': 'return'}
   {2190}
2191  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '%='}
   {2191}
2192  {'left': 'operator', 'right': ['*'], 'point': 1, 'origin': 21, 'isTer': True, 'accept': '<='}
   {2192}
2193  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'number'}
   {2193}
2194  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'if'}
   {2194}
2195  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'float'}
   {2195}
2196  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '{'}
   {2196}
2197  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '*'}
   {2197}
2198  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'double'}
   {2198}
2199  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'identifier'}
   {2199}
2200  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '#'}
   {2200}
2201  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ','}
   {2201}
2202  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ')'}
   {2202}
2203  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '-='}
   {2203}
2204  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'for'}
   {2204}
2205  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '>='}
   {2205}
2206  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'break'}
   {2206}
2207  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '^='}
   {2207}
2208  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '='}
   {2208}
2209  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'char'}
   {2209}
2210  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '&='}
   {2210}
2211  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '!='}
   {2211}
2212  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '*='}
   {2212}
2213  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '=='}
   {2213}
2214  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '&'}
   {2214}
2215  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '}'}
   {2215}
2216  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': ';'}
   {2216}
2217  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'while'}
   {2217}
2218  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '|='}
   {2218}
2219  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '<'}
   {2219}
2220  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'int'}
   {2220}
2221  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '/'}
   {2221}
2222  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'continue'}
   {2222}
2223  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '^'}
   {2223}
2224  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'else'}
   {2224}
2225  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'void'}
   {2225}
2226  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '+'}
   {2226}
2227  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '%'}
   {2227}
2228  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '/='}
   {2228}
2229  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '-'}
   {2229}
2230  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '('}
   {2230}
2231  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '>'}
   {2231}
2232  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '+='}
   {2232}
2233  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': 'return'}
   {2233}
2234  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '%='}
   {2234}
2235  {'left': 'operator', 'right': ['/'], 'point': 0, 'origin': 22, 'isTer': False, 'accept': '<='}
   {2235}
2236  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'number'}
   {2236}
2237  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'if'}
   {2237}
2238  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'float'}
   {2238}
2239  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '{'}
   {2239}
2240  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '*'}
   {2240}
2241  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'double'}
   {2241}
2242  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'identifier'}
   {2242}
2243  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '#'}
   {2243}
2244  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ','}
   {2244}
2245  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ')'}
   {2245}
2246  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '-='}
   {2246}
2247  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'for'}
   {2247}
2248  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '>='}
   {2248}
2249  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'break'}
   {2249}
2250  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '^='}
   {2250}
2251  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '='}
   {2251}
2252  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'char'}
   {2252}
2253  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '&='}
   {2253}
2254  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '!='}
   {2254}
2255  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '*='}
   {2255}
2256  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '=='}
   {2256}
2257  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '&'}
   {2257}
2258  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '}'}
   {2258}
2259  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': ';'}
   {2259}
2260  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'while'}
   {2260}
2261  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '|='}
   {2261}
2262  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '<'}
   {2262}
2263  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'int'}
   {2263}
2264  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '/'}
   {2264}
2265  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'continue'}
   {2265}
2266  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '^'}
   {2266}
2267  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'else'}
   {2267}
2268  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'void'}
   {2268}
2269  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '+'}
   {2269}
2270  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '%'}
   {2270}
2271  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '/='}
   {2271}
2272  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '-'}
   {2272}
2273  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '('}
   {2273}
2274  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '>'}
   {2274}
2275  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '+='}
   {2275}
2276  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': 'return'}
   {2276}
2277  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '%='}
   {2277}
2278  {'left': 'operator', 'right': ['/'], 'point': 1, 'origin': 22, 'isTer': True, 'accept': '<='}
   {2278}
2279  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'number'}
   {2279}
2280  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'if'}
   {2280}
2281  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'float'}
   {2281}
2282  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '{'}
   {2282}
2283  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*'}
   {2283}
2284  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'double'}
   {2284}
2285  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'identifier'}
   {2285}
2286  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '#'}
   {2286}
2287  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ','}
   {2287}
2288  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ')'}
   {2288}
2289  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-='}
   {2289}
2290  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'for'}
   {2290}
2291  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>='}
   {2291}
2292  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'break'}
   {2292}
2293  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '^='}
   {2293}
2294  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '='}
   {2294}
2295  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'char'}
   {2295}
2296  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '&='}
   {2296}
2297  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '!='}
   {2297}
2298  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*='}
   {2298}
2299  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '=='}
   {2299}
2300  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '&'}
   {2300}
2301  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '}'}
   {2301}
2302  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': ';'}
   {2302}
2303  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'while'}
   {2303}
2304  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '|='}
   {2304}
2305  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<'}
   {2305}
2306  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'int'}
   {2306}
2307  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/'}
   {2307}
2308  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'continue'}
   {2308}
2309  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '^'}
   {2309}
2310  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'else'}
   {2310}
2311  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'void'}
   {2311}
2312  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+'}
   {2312}
2313  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '%'}
   {2313}
2314  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/='}
   {2314}
2315  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-'}
   {2315}
2316  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '('}
   {2316}
2317  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>'}
   {2317}
2318  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+='}
   {2318}
2319  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'return'}
   {2319}
2320  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '%='}
   {2320}
2321  {'left': 'operator', 'right': ['%'], 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<='}
   {2321}
2322  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'number'}
   {2322}
2323  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'if'}
   {2323}
2324  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'float'}
   {2324}
2325  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '{'}
   {2325}
2326  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*'}
   {2326}
2327  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'double'}
   {2327}
2328  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'identifier'}
   {2328}
2329  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '#'}
   {2329}
2330  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ','}
   {2330}
2331  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ')'}
   {2331}
2332  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-='}
   {2332}
2333  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'for'}
   {2333}
2334  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>='}
   {2334}
2335  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'break'}
   {2335}
2336  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '^='}
   {2336}
2337  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '='}
   {2337}
2338  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'char'}
   {2338}
2339  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '&='}
   {2339}
2340  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '!='}
   {2340}
2341  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*='}
   {2341}
2342  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '=='}
   {2342}
2343  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '&'}
   {2343}
2344  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '}'}
   {2344}
2345  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': ';'}
   {2345}
2346  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'while'}
   {2346}
2347  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '|='}
   {2347}
2348  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<'}
   {2348}
2349  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'int'}
   {2349}
2350  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/'}
   {2350}
2351  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'continue'}
   {2351}
2352  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '^'}
   {2352}
2353  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'else'}
   {2353}
2354  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'void'}
   {2354}
2355  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+'}
   {2355}
2356  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '%'}
   {2356}
2357  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/='}
   {2357}
2358  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-'}
   {2358}
2359  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '('}
   {2359}
2360  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>'}
   {2360}
2361  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+='}
   {2361}
2362  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'return'}
   {2362}
2363  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '%='}
   {2363}
2364  {'left': 'operator', 'right': ['%'], 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<='}
   {2364}
2365  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'number'}
   {2365}
2366  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'if'}
   {2366}
2367  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'float'}
   {2367}
2368  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '{'}
   {2368}
2369  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*'}
   {2369}
2370  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'double'}
   {2370}
2371  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'identifier'}
   {2371}
2372  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '#'}
   {2372}
2373  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ','}
   {2373}
2374  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ')'}
   {2374}
2375  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-='}
   {2375}
2376  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'for'}
   {2376}
2377  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>='}
   {2377}
2378  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'break'}
   {2378}
2379  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '^='}
   {2379}
2380  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '='}
   {2380}
2381  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'char'}
   {2381}
2382  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '&='}
   {2382}
2383  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '!='}
   {2383}
2384  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*='}
   {2384}
2385  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '=='}
   {2385}
2386  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '&'}
   {2386}
2387  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '}'}
   {2387}
2388  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': ';'}
   {2388}
2389  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'while'}
   {2389}
2390  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '|='}
   {2390}
2391  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<'}
   {2391}
2392  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'int'}
   {2392}
2393  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/'}
   {2393}
2394  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'continue'}
   {2394}
2395  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '^'}
   {2395}
2396  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'else'}
   {2396}
2397  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'void'}
   {2397}
2398  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+'}
   {2398}
2399  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '%'}
   {2399}
2400  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/='}
   {2400}
2401  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-'}
   {2401}
2402  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '('}
   {2402}
2403  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>'}
   {2403}
2404  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+='}
   {2404}
2405  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'return'}
   {2405}
2406  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '%='}
   {2406}
2407  {'left': 'operator', 'right': ['^'], 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<='}
   {2407}
2408  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'number'}
   {2408}
2409  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'if'}
   {2409}
2410  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'float'}
   {2410}
2411  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '{'}
   {2411}
2412  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*'}
   {2412}
2413  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'double'}
   {2413}
2414  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'identifier'}
   {2414}
2415  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '#'}
   {2415}
2416  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ','}
   {2416}
2417  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ')'}
   {2417}
2418  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-='}
   {2418}
2419  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'for'}
   {2419}
2420  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>='}
   {2420}
2421  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'break'}
   {2421}
2422  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '^='}
   {2422}
2423  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '='}
   {2423}
2424  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'char'}
   {2424}
2425  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '&='}
   {2425}
2426  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '!='}
   {2426}
2427  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*='}
   {2427}
2428  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '=='}
   {2428}
2429  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '&'}
   {2429}
2430  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '}'}
   {2430}
2431  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': ';'}
   {2431}
2432  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'while'}
   {2432}
2433  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '|='}
   {2433}
2434  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<'}
   {2434}
2435  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'int'}
   {2435}
2436  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/'}
   {2436}
2437  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'continue'}
   {2437}
2438  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '^'}
   {2438}
2439  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'else'}
   {2439}
2440  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'void'}
   {2440}
2441  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+'}
   {2441}
2442  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '%'}
   {2442}
2443  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/='}
   {2443}
2444  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-'}
   {2444}
2445  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '('}
   {2445}
2446  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>'}
   {2446}
2447  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+='}
   {2447}
2448  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'return'}
   {2448}
2449  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '%='}
   {2449}
2450  {'left': 'operator', 'right': ['^'], 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<='}
   {2450}
2451  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'number'}
   {2451}
2452  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'if'}
   {2452}
2453  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'float'}
   {2453}
2454  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '{'}
   {2454}
2455  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*'}
   {2455}
2456  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'double'}
   {2456}
2457  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'identifier'}
   {2457}
2458  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '#'}
   {2458}
2459  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ','}
   {2459}
2460  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ')'}
   {2460}
2461  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-='}
   {2461}
2462  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'for'}
   {2462}
2463  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>='}
   {2463}
2464  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'break'}
   {2464}
2465  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '^='}
   {2465}
2466  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '='}
   {2466}
2467  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'char'}
   {2467}
2468  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '&='}
   {2468}
2469  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '!='}
   {2469}
2470  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*='}
   {2470}
2471  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '=='}
   {2471}
2472  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '&'}
   {2472}
2473  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '}'}
   {2473}
2474  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': ';'}
   {2474}
2475  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'while'}
   {2475}
2476  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '|='}
   {2476}
2477  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<'}
   {2477}
2478  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'int'}
   {2478}
2479  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/'}
   {2479}
2480  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'continue'}
   {2480}
2481  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '^'}
   {2481}
2482  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'else'}
   {2482}
2483  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'void'}
   {2483}
2484  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+'}
   {2484}
2485  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '%'}
   {2485}
2486  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/='}
   {2486}
2487  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-'}
   {2487}
2488  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '('}
   {2488}
2489  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>'}
   {2489}
2490  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+='}
   {2490}
2491  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'return'}
   {2491}
2492  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '%='}
   {2492}
2493  {'left': 'operator', 'right': ['&'], 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<='}
   {2493}
2494  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'number'}
   {2494}
2495  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'if'}
   {2495}
2496  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'float'}
   {2496}
2497  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '{'}
   {2497}
2498  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*'}
   {2498}
2499  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'double'}
   {2499}
2500  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'identifier'}
   {2500}
2501  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '#'}
   {2501}
2502  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ','}
   {2502}
2503  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ')'}
   {2503}
2504  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-='}
   {2504}
2505  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'for'}
   {2505}
2506  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>='}
   {2506}
2507  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'break'}
   {2507}
2508  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '^='}
   {2508}
2509  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '='}
   {2509}
2510  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'char'}
   {2510}
2511  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '&='}
   {2511}
2512  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '!='}
   {2512}
2513  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*='}
   {2513}
2514  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '=='}
   {2514}
2515  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '&'}
   {2515}
2516  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '}'}
   {2516}
2517  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': ';'}
   {2517}
2518  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'while'}
   {2518}
2519  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '|='}
   {2519}
2520  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<'}
   {2520}
2521  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'int'}
   {2521}
2522  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/'}
   {2522}
2523  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'continue'}
   {2523}
2524  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '^'}
   {2524}
2525  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'else'}
   {2525}
2526  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'void'}
   {2526}
2527  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+'}
   {2527}
2528  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '%'}
   {2528}
2529  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/='}
   {2529}
2530  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-'}
   {2530}
2531  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '('}
   {2531}
2532  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>'}
   {2532}
2533  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+='}
   {2533}
2534  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'return'}
   {2534}
2535  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '%='}
   {2535}
2536  {'left': 'operator', 'right': ['&'], 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<='}
   {2536}
2537  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'number'}
   {2537}
2538  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'if'}
   {2538}
2539  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'float'}
   {2539}
2540  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '{'}
   {2540}
2541  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*'}
   {2541}
2542  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'double'}
   {2542}
2543  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'identifier'}
   {2543}
2544  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '#'}
   {2544}
2545  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ','}
   {2545}
2546  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ')'}
   {2546}
2547  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-='}
   {2547}
2548  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'for'}
   {2548}
2549  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>='}
   {2549}
2550  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'break'}
   {2550}
2551  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '^='}
   {2551}
2552  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '='}
   {2552}
2553  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'char'}
   {2553}
2554  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '&='}
   {2554}
2555  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '!='}
   {2555}
2556  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*='}
   {2556}
2557  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '=='}
   {2557}
2558  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '&'}
   {2558}
2559  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '}'}
   {2559}
2560  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': ';'}
   {2560}
2561  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'while'}
   {2561}
2562  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '|='}
   {2562}
2563  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<'}
   {2563}
2564  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'int'}
   {2564}
2565  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/'}
   {2565}
2566  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'continue'}
   {2566}
2567  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '^'}
   {2567}
2568  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'else'}
   {2568}
2569  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'void'}
   {2569}
2570  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+'}
   {2570}
2571  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '%'}
   {2571}
2572  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/='}
   {2572}
2573  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-'}
   {2573}
2574  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '('}
   {2574}
2575  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>'}
   {2575}
2576  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+='}
   {2576}
2577  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'return'}
   {2577}
2578  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '%='}
   {2578}
2579  {'left': 'operator', 'right': ['<'], 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<='}
   {2579}
2580  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'number'}
   {2580}
2581  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'if'}
   {2581}
2582  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'float'}
   {2582}
2583  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '{'}
   {2583}
2584  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*'}
   {2584}
2585  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'double'}
   {2585}
2586  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'identifier'}
   {2586}
2587  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '#'}
   {2587}
2588  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ','}
   {2588}
2589  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ')'}
   {2589}
2590  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-='}
   {2590}
2591  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'for'}
   {2591}
2592  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>='}
   {2592}
2593  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'break'}
   {2593}
2594  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '^='}
   {2594}
2595  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '='}
   {2595}
2596  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'char'}
   {2596}
2597  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '&='}
   {2597}
2598  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '!='}
   {2598}
2599  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*='}
   {2599}
2600  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '=='}
   {2600}
2601  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '&'}
   {2601}
2602  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '}'}
   {2602}
2603  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': ';'}
   {2603}
2604  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'while'}
   {2604}
2605  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '|='}
   {2605}
2606  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<'}
   {2606}
2607  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'int'}
   {2607}
2608  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/'}
   {2608}
2609  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'continue'}
   {2609}
2610  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '^'}
   {2610}
2611  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'else'}
   {2611}
2612  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'void'}
   {2612}
2613  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+'}
   {2613}
2614  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '%'}
   {2614}
2615  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/='}
   {2615}
2616  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-'}
   {2616}
2617  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '('}
   {2617}
2618  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>'}
   {2618}
2619  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+='}
   {2619}
2620  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'return'}
   {2620}
2621  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '%='}
   {2621}
2622  {'left': 'operator', 'right': ['<'], 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<='}
   {2622}
2623  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'number'}
   {2623}
2624  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'if'}
   {2624}
2625  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'float'}
   {2625}
2626  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '{'}
   {2626}
2627  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*'}
   {2627}
2628  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'double'}
   {2628}
2629  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'identifier'}
   {2629}
2630  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '#'}
   {2630}
2631  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ','}
   {2631}
2632  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ')'}
   {2632}
2633  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-='}
   {2633}
2634  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'for'}
   {2634}
2635  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>='}
   {2635}
2636  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'break'}
   {2636}
2637  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '^='}
   {2637}
2638  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '='}
   {2638}
2639  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'char'}
   {2639}
2640  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '&='}
   {2640}
2641  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '!='}
   {2641}
2642  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*='}
   {2642}
2643  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '=='}
   {2643}
2644  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '&'}
   {2644}
2645  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '}'}
   {2645}
2646  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': ';'}
   {2646}
2647  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'while'}
   {2647}
2648  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '|='}
   {2648}
2649  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<'}
   {2649}
2650  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'int'}
   {2650}
2651  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/'}
   {2651}
2652  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'continue'}
   {2652}
2653  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '^'}
   {2653}
2654  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'else'}
   {2654}
2655  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'void'}
   {2655}
2656  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+'}
   {2656}
2657  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '%'}
   {2657}
2658  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/='}
   {2658}
2659  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-'}
   {2659}
2660  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '('}
   {2660}
2661  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>'}
   {2661}
2662  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+='}
   {2662}
2663  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'return'}
   {2663}
2664  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '%='}
   {2664}
2665  {'left': 'operator', 'right': ['>'], 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<='}
   {2665}
2666  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'number'}
   {2666}
2667  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'if'}
   {2667}
2668  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'float'}
   {2668}
2669  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '{'}
   {2669}
2670  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*'}
   {2670}
2671  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'double'}
   {2671}
2672  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'identifier'}
   {2672}
2673  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '#'}
   {2673}
2674  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ','}
   {2674}
2675  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ')'}
   {2675}
2676  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-='}
   {2676}
2677  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'for'}
   {2677}
2678  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>='}
   {2678}
2679  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'break'}
   {2679}
2680  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '^='}
   {2680}
2681  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '='}
   {2681}
2682  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'char'}
   {2682}
2683  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '&='}
   {2683}
2684  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '!='}
   {2684}
2685  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*='}
   {2685}
2686  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '=='}
   {2686}
2687  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '&'}
   {2687}
2688  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '}'}
   {2688}
2689  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': ';'}
   {2689}
2690  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'while'}
   {2690}
2691  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '|='}
   {2691}
2692  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<'}
   {2692}
2693  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'int'}
   {2693}
2694  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/'}
   {2694}
2695  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'continue'}
   {2695}
2696  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '^'}
   {2696}
2697  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'else'}
   {2697}
2698  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'void'}
   {2698}
2699  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+'}
   {2699}
2700  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '%'}
   {2700}
2701  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/='}
   {2701}
2702  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-'}
   {2702}
2703  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '('}
   {2703}
2704  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>'}
   {2704}
2705  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+='}
   {2705}
2706  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'return'}
   {2706}
2707  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '%='}
   {2707}
2708  {'left': 'operator', 'right': ['>'], 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<='}
   {2708}
2709  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'number'}
   {2709}
2710  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'if'}
   {2710}
2711  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'float'}
   {2711}
2712  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '{'}
   {2712}
2713  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*'}
   {2713}
2714  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'double'}
   {2714}
2715  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'identifier'}
   {2715}
2716  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '#'}
   {2716}
2717  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ','}
   {2717}
2718  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ')'}
   {2718}
2719  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-='}
   {2719}
2720  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'for'}
   {2720}
2721  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>='}
   {2721}
2722  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'break'}
   {2722}
2723  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '^='}
   {2723}
2724  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '='}
   {2724}
2725  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'char'}
   {2725}
2726  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '&='}
   {2726}
2727  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '!='}
   {2727}
2728  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*='}
   {2728}
2729  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '=='}
   {2729}
2730  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '&'}
   {2730}
2731  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '}'}
   {2731}
2732  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': ';'}
   {2732}
2733  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'while'}
   {2733}
2734  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '|='}
   {2734}
2735  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<'}
   {2735}
2736  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'int'}
   {2736}
2737  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/'}
   {2737}
2738  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'continue'}
   {2738}
2739  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '^'}
   {2739}
2740  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'else'}
   {2740}
2741  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'void'}
   {2741}
2742  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+'}
   {2742}
2743  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '%'}
   {2743}
2744  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/='}
   {2744}
2745  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-'}
   {2745}
2746  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '('}
   {2746}
2747  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>'}
   {2747}
2748  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+='}
   {2748}
2749  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'return'}
   {2749}
2750  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '%='}
   {2750}
2751  {'left': 'operator', 'right': ['!='], 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<='}
   {2751}
2752  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'number'}
   {2752}
2753  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'if'}
   {2753}
2754  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'float'}
   {2754}
2755  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '{'}
   {2755}
2756  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*'}
   {2756}
2757  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'double'}
   {2757}
2758  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'identifier'}
   {2758}
2759  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '#'}
   {2759}
2760  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ','}
   {2760}
2761  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ')'}
   {2761}
2762  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-='}
   {2762}
2763  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'for'}
   {2763}
2764  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>='}
   {2764}
2765  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'break'}
   {2765}
2766  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '^='}
   {2766}
2767  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '='}
   {2767}
2768  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'char'}
   {2768}
2769  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '&='}
   {2769}
2770  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '!='}
   {2770}
2771  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*='}
   {2771}
2772  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '=='}
   {2772}
2773  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '&'}
   {2773}
2774  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '}'}
   {2774}
2775  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': ';'}
   {2775}
2776  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'while'}
   {2776}
2777  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '|='}
   {2777}
2778  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<'}
   {2778}
2779  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'int'}
   {2779}
2780  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/'}
   {2780}
2781  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'continue'}
   {2781}
2782  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '^'}
   {2782}
2783  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'else'}
   {2783}
2784  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'void'}
   {2784}
2785  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+'}
   {2785}
2786  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '%'}
   {2786}
2787  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/='}
   {2787}
2788  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-'}
   {2788}
2789  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '('}
   {2789}
2790  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>'}
   {2790}
2791  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+='}
   {2791}
2792  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'return'}
   {2792}
2793  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '%='}
   {2793}
2794  {'left': 'operator', 'right': ['!='], 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<='}
   {2794}
2795  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'number'}
   {2795}
2796  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'if'}
   {2796}
2797  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'float'}
   {2797}
2798  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '{'}
   {2798}
2799  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*'}
   {2799}
2800  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'double'}
   {2800}
2801  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'identifier'}
   {2801}
2802  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '#'}
   {2802}
2803  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ','}
   {2803}
2804  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ')'}
   {2804}
2805  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-='}
   {2805}
2806  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'for'}
   {2806}
2807  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>='}
   {2807}
2808  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'break'}
   {2808}
2809  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '^='}
   {2809}
2810  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '='}
   {2810}
2811  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'char'}
   {2811}
2812  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '&='}
   {2812}
2813  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '!='}
   {2813}
2814  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*='}
   {2814}
2815  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '=='}
   {2815}
2816  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '&'}
   {2816}
2817  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '}'}
   {2817}
2818  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': ';'}
   {2818}
2819  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'while'}
   {2819}
2820  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '|='}
   {2820}
2821  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<'}
   {2821}
2822  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'int'}
   {2822}
2823  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/'}
   {2823}
2824  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'continue'}
   {2824}
2825  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '^'}
   {2825}
2826  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'else'}
   {2826}
2827  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'void'}
   {2827}
2828  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+'}
   {2828}
2829  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '%'}
   {2829}
2830  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/='}
   {2830}
2831  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-'}
   {2831}
2832  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '('}
   {2832}
2833  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>'}
   {2833}
2834  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+='}
   {2834}
2835  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'return'}
   {2835}
2836  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '%='}
   {2836}
2837  {'left': 'operator', 'right': ['=='], 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<='}
   {2837}
2838  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'number'}
   {2838}
2839  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'if'}
   {2839}
2840  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'float'}
   {2840}
2841  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '{'}
   {2841}
2842  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*'}
   {2842}
2843  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'double'}
   {2843}
2844  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'identifier'}
   {2844}
2845  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '#'}
   {2845}
2846  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ','}
   {2846}
2847  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ')'}
   {2847}
2848  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-='}
   {2848}
2849  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'for'}
   {2849}
2850  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>='}
   {2850}
2851  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'break'}
   {2851}
2852  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '^='}
   {2852}
2853  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '='}
   {2853}
2854  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'char'}
   {2854}
2855  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '&='}
   {2855}
2856  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '!='}
   {2856}
2857  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*='}
   {2857}
2858  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '=='}
   {2858}
2859  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '&'}
   {2859}
2860  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '}'}
   {2860}
2861  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': ';'}
   {2861}
2862  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'while'}
   {2862}
2863  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '|='}
   {2863}
2864  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<'}
   {2864}
2865  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'int'}
   {2865}
2866  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/'}
   {2866}
2867  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'continue'}
   {2867}
2868  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '^'}
   {2868}
2869  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'else'}
   {2869}
2870  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'void'}
   {2870}
2871  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+'}
   {2871}
2872  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '%'}
   {2872}
2873  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/='}
   {2873}
2874  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-'}
   {2874}
2875  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '('}
   {2875}
2876  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>'}
   {2876}
2877  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+='}
   {2877}
2878  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'return'}
   {2878}
2879  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '%='}
   {2879}
2880  {'left': 'operator', 'right': ['=='], 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<='}
   {2880}
2881  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'number'}
   {2881}
2882  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'if'}
   {2882}
2883  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'float'}
   {2883}
2884  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '{'}
   {2884}
2885  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*'}
   {2885}
2886  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'double'}
   {2886}
2887  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'identifier'}
   {2887}
2888  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '#'}
   {2888}
2889  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ','}
   {2889}
2890  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ')'}
   {2890}
2891  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-='}
   {2891}
2892  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'for'}
   {2892}
2893  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>='}
   {2893}
2894  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'break'}
   {2894}
2895  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '^='}
   {2895}
2896  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '='}
   {2896}
2897  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'char'}
   {2897}
2898  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '&='}
   {2898}
2899  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '!='}
   {2899}
2900  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*='}
   {2900}
2901  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '=='}
   {2901}
2902  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '&'}
   {2902}
2903  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '}'}
   {2903}
2904  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': ';'}
   {2904}
2905  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'while'}
   {2905}
2906  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '|='}
   {2906}
2907  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<'}
   {2907}
2908  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'int'}
   {2908}
2909  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/'}
   {2909}
2910  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'continue'}
   {2910}
2911  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '^'}
   {2911}
2912  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'else'}
   {2912}
2913  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'void'}
   {2913}
2914  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+'}
   {2914}
2915  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '%'}
   {2915}
2916  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/='}
   {2916}
2917  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-'}
   {2917}
2918  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '('}
   {2918}
2919  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>'}
   {2919}
2920  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+='}
   {2920}
2921  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'return'}
   {2921}
2922  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '%='}
   {2922}
2923  {'left': 'operator', 'right': ['<='], 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<='}
   {2923}
2924  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'number'}
   {2924}
2925  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'if'}
   {2925}
2926  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'float'}
   {2926}
2927  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '{'}
   {2927}
2928  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*'}
   {2928}
2929  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'double'}
   {2929}
2930  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'identifier'}
   {2930}
2931  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '#'}
   {2931}
2932  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ','}
   {2932}
2933  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ')'}
   {2933}
2934  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-='}
   {2934}
2935  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'for'}
   {2935}
2936  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>='}
   {2936}
2937  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'break'}
   {2937}
2938  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '^='}
   {2938}
2939  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '='}
   {2939}
2940  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'char'}
   {2940}
2941  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '&='}
   {2941}
2942  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '!='}
   {2942}
2943  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*='}
   {2943}
2944  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '=='}
   {2944}
2945  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '&'}
   {2945}
2946  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '}'}
   {2946}
2947  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': ';'}
   {2947}
2948  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'while'}
   {2948}
2949  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '|='}
   {2949}
2950  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<'}
   {2950}
2951  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'int'}
   {2951}
2952  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/'}
   {2952}
2953  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'continue'}
   {2953}
2954  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '^'}
   {2954}
2955  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'else'}
   {2955}
2956  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'void'}
   {2956}
2957  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+'}
   {2957}
2958  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '%'}
   {2958}
2959  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/='}
   {2959}
2960  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-'}
   {2960}
2961  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '('}
   {2961}
2962  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>'}
   {2962}
2963  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+='}
   {2963}
2964  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'return'}
   {2964}
2965  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '%='}
   {2965}
2966  {'left': 'operator', 'right': ['<='], 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<='}
   {2966}
2967  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'number'}
   {2967}
2968  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'if'}
   {2968}
2969  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'float'}
   {2969}
2970  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '{'}
   {2970}
2971  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*'}
   {2971}
2972  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'double'}
   {2972}
2973  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'identifier'}
   {2973}
2974  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '#'}
   {2974}
2975  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ','}
   {2975}
2976  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ')'}
   {2976}
2977  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-='}
   {2977}
2978  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'for'}
   {2978}
2979  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>='}
   {2979}
2980  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'break'}
   {2980}
2981  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '^='}
   {2981}
2982  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '='}
   {2982}
2983  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'char'}
   {2983}
2984  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '&='}
   {2984}
2985  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '!='}
   {2985}
2986  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*='}
   {2986}
2987  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '=='}
   {2987}
2988  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '&'}
   {2988}
2989  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '}'}
   {2989}
2990  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': ';'}
   {2990}
2991  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'while'}
   {2991}
2992  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '|='}
   {2992}
2993  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<'}
   {2993}
2994  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'int'}
   {2994}
2995  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/'}
   {2995}
2996  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'continue'}
   {2996}
2997  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '^'}
   {2997}
2998  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'else'}
   {2998}
2999  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'void'}
   {2999}
3000  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+'}
   {3000}
3001  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '%'}
   {3001}
3002  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/='}
   {3002}
3003  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-'}
   {3003}
3004  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '('}
   {3004}
3005  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>'}
   {3005}
3006  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+='}
   {3006}
3007  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'return'}
   {3007}
3008  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '%='}
   {3008}
3009  {'left': 'operator', 'right': ['>='], 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<='}
   {3009}
3010  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'number'}
   {3010}
3011  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'if'}
   {3011}
3012  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'float'}
   {3012}
3013  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '{'}
   {3013}
3014  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*'}
   {3014}
3015  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'double'}
   {3015}
3016  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'identifier'}
   {3016}
3017  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '#'}
   {3017}
3018  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ','}
   {3018}
3019  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ')'}
   {3019}
3020  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-='}
   {3020}
3021  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'for'}
   {3021}
3022  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>='}
   {3022}
3023  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'break'}
   {3023}
3024  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '^='}
   {3024}
3025  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '='}
   {3025}
3026  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'char'}
   {3026}
3027  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '&='}
   {3027}
3028  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '!='}
   {3028}
3029  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*='}
   {3029}
3030  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '=='}
   {3030}
3031  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '&'}
   {3031}
3032  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '}'}
   {3032}
3033  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': ';'}
   {3033}
3034  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'while'}
   {3034}
3035  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '|='}
   {3035}
3036  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<'}
   {3036}
3037  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'int'}
   {3037}
3038  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/'}
   {3038}
3039  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'continue'}
   {3039}
3040  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '^'}
   {3040}
3041  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'else'}
   {3041}
3042  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'void'}
   {3042}
3043  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+'}
   {3043}
3044  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '%'}
   {3044}
3045  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/='}
   {3045}
3046  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-'}
   {3046}
3047  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '('}
   {3047}
3048  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>'}
   {3048}
3049  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+='}
   {3049}
3050  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'return'}
   {3050}
3051  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '%='}
   {3051}
3052  {'left': 'operator', 'right': ['>='], 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<='}
   {3052}
3053  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'number'}
   {3053}
3054  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'if'}
   {3054}
3055  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'float'}
   {3055}
3056  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '{'}
   {3056}
3057  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*'}
   {3057}
3058  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'double'}
   {3058}
3059  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'identifier'}
   {3059}
3060  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '#'}
   {3060}
3061  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ','}
   {3061}
3062  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ')'}
   {3062}
3063  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-='}
   {3063}
3064  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'for'}
   {3064}
3065  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>='}
   {3065}
3066  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'break'}
   {3066}
3067  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '^='}
   {3067}
3068  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '='}
   {3068}
3069  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'char'}
   {3069}
3070  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '&='}
   {3070}
3071  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '!='}
   {3071}
3072  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*='}
   {3072}
3073  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '=='}
   {3073}
3074  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '&'}
   {3074}
3075  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '}'}
   {3075}
3076  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': ';'}
   {3076}
3077  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'while'}
   {3077}
3078  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '|='}
   {3078}
3079  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<'}
   {3079}
3080  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'int'}
   {3080}
3081  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/'}
   {3081}
3082  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'continue'}
   {3082}
3083  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '^'}
   {3083}
3084  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'else'}
   {3084}
3085  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'void'}
   {3085}
3086  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+'}
   {3086}
3087  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '%'}
   {3087}
3088  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/='}
   {3088}
3089  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-'}
   {3089}
3090  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '('}
   {3090}
3091  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>'}
   {3091}
3092  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+='}
   {3092}
3093  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'return'}
   {3093}
3094  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '%='}
   {3094}
3095  {'left': 'assignment_operator', 'right': ['='], 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<='}
   {3095}
3096  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'number'}
   {3096}
3097  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'if'}
   {3097}
3098  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'float'}
   {3098}
3099  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '{'}
   {3099}
3100  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*'}
   {3100}
3101  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'double'}
   {3101}
3102  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'identifier'}
   {3102}
3103  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '#'}
   {3103}
3104  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ','}
   {3104}
3105  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ')'}
   {3105}
3106  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-='}
   {3106}
3107  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'for'}
   {3107}
3108  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>='}
   {3108}
3109  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'break'}
   {3109}
3110  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '^='}
   {3110}
3111  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '='}
   {3111}
3112  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'char'}
   {3112}
3113  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '&='}
   {3113}
3114  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '!='}
   {3114}
3115  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*='}
   {3115}
3116  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '=='}
   {3116}
3117  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '&'}
   {3117}
3118  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '}'}
   {3118}
3119  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': ';'}
   {3119}
3120  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'while'}
   {3120}
3121  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '|='}
   {3121}
3122  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<'}
   {3122}
3123  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'int'}
   {3123}
3124  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/'}
   {3124}
3125  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'continue'}
   {3125}
3126  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '^'}
   {3126}
3127  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'else'}
   {3127}
3128  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'void'}
   {3128}
3129  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+'}
   {3129}
3130  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '%'}
   {3130}
3131  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/='}
   {3131}
3132  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-'}
   {3132}
3133  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '('}
   {3133}
3134  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>'}
   {3134}
3135  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+='}
   {3135}
3136  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'return'}
   {3136}
3137  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '%='}
   {3137}
3138  {'left': 'assignment_operator', 'right': ['='], 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<='}
   {3138}
3139  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'number'}
   {3139}
3140  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'if'}
   {3140}
3141  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'float'}
   {3141}
3142  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '{'}
   {3142}
3143  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*'}
   {3143}
3144  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'double'}
   {3144}
3145  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'identifier'}
   {3145}
3146  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '#'}
   {3146}
3147  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ','}
   {3147}
3148  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ')'}
   {3148}
3149  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-='}
   {3149}
3150  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'for'}
   {3150}
3151  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>='}
   {3151}
3152  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'break'}
   {3152}
3153  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '^='}
   {3153}
3154  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '='}
   {3154}
3155  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'char'}
   {3155}
3156  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '&='}
   {3156}
3157  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '!='}
   {3157}
3158  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*='}
   {3158}
3159  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '=='}
   {3159}
3160  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '&'}
   {3160}
3161  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '}'}
   {3161}
3162  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': ';'}
   {3162}
3163  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'while'}
   {3163}
3164  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '|='}
   {3164}
3165  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<'}
   {3165}
3166  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'int'}
   {3166}
3167  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/'}
   {3167}
3168  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'continue'}
   {3168}
3169  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '^'}
   {3169}
3170  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'else'}
   {3170}
3171  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'void'}
   {3171}
3172  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+'}
   {3172}
3173  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '%'}
   {3173}
3174  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/='}
   {3174}
3175  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-'}
   {3175}
3176  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '('}
   {3176}
3177  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>'}
   {3177}
3178  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+='}
   {3178}
3179  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'return'}
   {3179}
3180  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '%='}
   {3180}
3181  {'left': 'assignment_operator', 'right': ['+='], 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<='}
   {3181}
3182  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'number'}
   {3182}
3183  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'if'}
   {3183}
3184  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'float'}
   {3184}
3185  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '{'}
   {3185}
3186  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*'}
   {3186}
3187  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'double'}
   {3187}
3188  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'identifier'}
   {3188}
3189  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '#'}
   {3189}
3190  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ','}
   {3190}
3191  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ')'}
   {3191}
3192  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-='}
   {3192}
3193  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'for'}
   {3193}
3194  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>='}
   {3194}
3195  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'break'}
   {3195}
3196  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '^='}
   {3196}
3197  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '='}
   {3197}
3198  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'char'}
   {3198}
3199  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '&='}
   {3199}
3200  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '!='}
   {3200}
3201  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*='}
   {3201}
3202  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '=='}
   {3202}
3203  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '&'}
   {3203}
3204  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '}'}
   {3204}
3205  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': ';'}
   {3205}
3206  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'while'}
   {3206}
3207  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '|='}
   {3207}
3208  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<'}
   {3208}
3209  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'int'}
   {3209}
3210  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/'}
   {3210}
3211  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'continue'}
   {3211}
3212  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '^'}
   {3212}
3213  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'else'}
   {3213}
3214  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'void'}
   {3214}
3215  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+'}
   {3215}
3216  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '%'}
   {3216}
3217  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/='}
   {3217}
3218  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-'}
   {3218}
3219  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '('}
   {3219}
3220  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>'}
   {3220}
3221  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+='}
   {3221}
3222  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'return'}
   {3222}
3223  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '%='}
   {3223}
3224  {'left': 'assignment_operator', 'right': ['+='], 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<='}
   {3224}
3225  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'number'}
   {3225}
3226  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'if'}
   {3226}
3227  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'float'}
   {3227}
3228  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '{'}
   {3228}
3229  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*'}
   {3229}
3230  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'double'}
   {3230}
3231  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'identifier'}
   {3231}
3232  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '#'}
   {3232}
3233  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ','}
   {3233}
3234  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ')'}
   {3234}
3235  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-='}
   {3235}
3236  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'for'}
   {3236}
3237  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>='}
   {3237}
3238  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'break'}
   {3238}
3239  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '^='}
   {3239}
3240  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '='}
   {3240}
3241  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'char'}
   {3241}
3242  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '&='}
   {3242}
3243  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '!='}
   {3243}
3244  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*='}
   {3244}
3245  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '=='}
   {3245}
3246  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '&'}
   {3246}
3247  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '}'}
   {3247}
3248  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': ';'}
   {3248}
3249  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'while'}
   {3249}
3250  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '|='}
   {3250}
3251  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<'}
   {3251}
3252  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'int'}
   {3252}
3253  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/'}
   {3253}
3254  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'continue'}
   {3254}
3255  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '^'}
   {3255}
3256  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'else'}
   {3256}
3257  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'void'}
   {3257}
3258  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+'}
   {3258}
3259  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '%'}
   {3259}
3260  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/='}
   {3260}
3261  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-'}
   {3261}
3262  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '('}
   {3262}
3263  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>'}
   {3263}
3264  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+='}
   {3264}
3265  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'return'}
   {3265}
3266  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '%='}
   {3266}
3267  {'left': 'assignment_operator', 'right': ['-='], 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<='}
   {3267}
3268  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'number'}
   {3268}
3269  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'if'}
   {3269}
3270  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'float'}
   {3270}
3271  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '{'}
   {3271}
3272  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '*'}
   {3272}
3273  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'double'}
   {3273}
3274  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'identifier'}
   {3274}
3275  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '#'}
   {3275}
3276  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': ','}
   {3276}
3277  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': ')'}
   {3277}
3278  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '-='}
   {3278}
3279  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'for'}
   {3279}
3280  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '>='}
   {3280}
3281  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'break'}
   {3281}
3282  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '^='}
   {3282}
3283  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '='}
   {3283}
3284  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'char'}
   {3284}
3285  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '&='}
   {3285}
3286  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '!='}
   {3286}
3287  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '*='}
   {3287}
3288  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '=='}
   {3288}
3289  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '&'}
   {3289}
3290  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '}'}
   {3290}
3291  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': ';'}
   {3291}
3292  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'while'}
   {3292}
3293  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '|='}
   {3293}
3294  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '<'}
   {3294}
3295  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'int'}
   {3295}
3296  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '/'}
   {3296}
3297  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'continue'}
   {3297}
3298  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '^'}
   {3298}
3299  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'else'}
   {3299}
3300  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'void'}
   {3300}
3301  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '+'}
   {3301}
3302  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '%'}
   {3302}
3303  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '/='}
   {3303}
3304  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '-'}
   {3304}
3305  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '('}
   {3305}
3306  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '>'}
   {3306}
3307  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '+='}
   {3307}
3308  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'return'}
   {3308}
3309  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '%='}
   {3309}
3310  {'left': 'assignment_operator', 'right': ['-='], 'point': 1, 'origin': 34, 'isTer': True, 'accept': '<='}
   {3310}
3311  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'number'}
   {3311}
3312  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'if'}
   {3312}
3313  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'float'}
   {3313}
3314  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '{'}
   {3314}
3315  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*'}
   {3315}
3316  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'double'}
   {3316}
3317  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'identifier'}
   {3317}
3318  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '#'}
   {3318}
3319  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ','}
   {3319}
3320  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ')'}
   {3320}
3321  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-='}
   {3321}
3322  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'for'}
   {3322}
3323  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>='}
   {3323}
3324  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'break'}
   {3324}
3325  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '^='}
   {3325}
3326  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '='}
   {3326}
3327  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'char'}
   {3327}
3328  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '&='}
   {3328}
3329  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '!='}
   {3329}
3330  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*='}
   {3330}
3331  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '=='}
   {3331}
3332  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '&'}
   {3332}
3333  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '}'}
   {3333}
3334  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': ';'}
   {3334}
3335  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'while'}
   {3335}
3336  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '|='}
   {3336}
3337  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<'}
   {3337}
3338  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'int'}
   {3338}
3339  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/'}
   {3339}
3340  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'continue'}
   {3340}
3341  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '^'}
   {3341}
3342  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'else'}
   {3342}
3343  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'void'}
   {3343}
3344  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+'}
   {3344}
3345  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '%'}
   {3345}
3346  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/='}
   {3346}
3347  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-'}
   {3347}
3348  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '('}
   {3348}
3349  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>'}
   {3349}
3350  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+='}
   {3350}
3351  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'return'}
   {3351}
3352  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '%='}
   {3352}
3353  {'left': 'assignment_operator', 'right': ['*='], 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<='}
   {3353}
3354  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'number'}
   {3354}
3355  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'if'}
   {3355}
3356  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'float'}
   {3356}
3357  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '{'}
   {3357}
3358  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '*'}
   {3358}
3359  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'double'}
   {3359}
3360  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'identifier'}
   {3360}
3361  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '#'}
   {3361}
3362  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': ','}
   {3362}
3363  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': ')'}
   {3363}
3364  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '-='}
   {3364}
3365  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'for'}
   {3365}
3366  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '>='}
   {3366}
3367  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'break'}
   {3367}
3368  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '^='}
   {3368}
3369  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '='}
   {3369}
3370  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'char'}
   {3370}
3371  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '&='}
   {3371}
3372  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '!='}
   {3372}
3373  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '*='}
   {3373}
3374  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '=='}
   {3374}
3375  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '&'}
   {3375}
3376  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '}'}
   {3376}
3377  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': ';'}
   {3377}
3378  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'while'}
   {3378}
3379  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '|='}
   {3379}
3380  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '<'}
   {3380}
3381  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'int'}
   {3381}
3382  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '/'}
   {3382}
3383  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'continue'}
   {3383}
3384  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '^'}
   {3384}
3385  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'else'}
   {3385}
3386  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'void'}
   {3386}
3387  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '+'}
   {3387}
3388  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '%'}
   {3388}
3389  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '/='}
   {3389}
3390  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '-'}
   {3390}
3391  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '('}
   {3391}
3392  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '>'}
   {3392}
3393  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '+='}
   {3393}
3394  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'return'}
   {3394}
3395  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '%='}
   {3395}
3396  {'left': 'assignment_operator', 'right': ['*='], 'point': 1, 'origin': 35, 'isTer': True, 'accept': '<='}
   {3396}
3397  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'number'}
   {3397}
3398  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'if'}
   {3398}
3399  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'float'}
   {3399}
3400  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '{'}
   {3400}
3401  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '*'}
   {3401}
3402  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'double'}
   {3402}
3403  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'identifier'}
   {3403}
3404  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '#'}
   {3404}
3405  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': ','}
   {3405}
3406  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': ')'}
   {3406}
3407  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '-='}
   {3407}
3408  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'for'}
   {3408}
3409  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '>='}
   {3409}
3410  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'break'}
   {3410}
3411  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '^='}
   {3411}
3412  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '='}
   {3412}
3413  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'char'}
   {3413}
3414  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '&='}
   {3414}
3415  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '!='}
   {3415}
3416  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '*='}
   {3416}
3417  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '=='}
   {3417}
3418  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '&'}
   {3418}
3419  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '}'}
   {3419}
3420  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': ';'}
   {3420}
3421  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'while'}
   {3421}
3422  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '|='}
   {3422}
3423  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '<'}
   {3423}
3424  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'int'}
   {3424}
3425  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '/'}
   {3425}
3426  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'continue'}
   {3426}
3427  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '^'}
   {3427}
3428  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'else'}
   {3428}
3429  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'void'}
   {3429}
3430  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '+'}
   {3430}
3431  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '%'}
   {3431}
3432  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '/='}
   {3432}
3433  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '-'}
   {3433}
3434  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '('}
   {3434}
3435  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '>'}
   {3435}
3436  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '+='}
   {3436}
3437  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'return'}
   {3437}
3438  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '%='}
   {3438}
3439  {'left': 'assignment_operator', 'right': ['/='], 'point': 0, 'origin': 36, 'isTer': False, 'accept': '<='}
   {3439}
3440  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'number'}
   {3440}
3441  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'if'}
   {3441}
3442  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'float'}
   {3442}
3443  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '{'}
   {3443}
3444  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '*'}
   {3444}
3445  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'double'}
   {3445}
3446  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'identifier'}
   {3446}
3447  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '#'}
   {3447}
3448  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': ','}
   {3448}
3449  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': ')'}
   {3449}
3450  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '-='}
   {3450}
3451  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'for'}
   {3451}
3452  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '>='}
   {3452}
3453  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'break'}
   {3453}
3454  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '^='}
   {3454}
3455  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '='}
   {3455}
3456  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'char'}
   {3456}
3457  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '&='}
   {3457}
3458  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '!='}
   {3458}
3459  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '*='}
   {3459}
3460  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '=='}
   {3460}
3461  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '&'}
   {3461}
3462  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '}'}
   {3462}
3463  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': ';'}
   {3463}
3464  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'while'}
   {3464}
3465  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '|='}
   {3465}
3466  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '<'}
   {3466}
3467  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'int'}
   {3467}
3468  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '/'}
   {3468}
3469  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'continue'}
   {3469}
3470  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '^'}
   {3470}
3471  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'else'}
   {3471}
3472  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'void'}
   {3472}
3473  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '+'}
   {3473}
3474  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '%'}
   {3474}
3475  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '/='}
   {3475}
3476  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '-'}
   {3476}
3477  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '('}
   {3477}
3478  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '>'}
   {3478}
3479  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '+='}
   {3479}
3480  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': 'return'}
   {3480}
3481  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '%='}
   {3481}
3482  {'left': 'assignment_operator', 'right': ['/='], 'point': 1, 'origin': 36, 'isTer': True, 'accept': '<='}
   {3482}
3483  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'number'}
   {3483}
3484  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'if'}
   {3484}
3485  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'float'}
   {3485}
3486  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '{'}
   {3486}
3487  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*'}
   {3487}
3488  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'double'}
   {3488}
3489  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'identifier'}
   {3489}
3490  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '#'}
   {3490}
3491  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ','}
   {3491}
3492  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ')'}
   {3492}
3493  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-='}
   {3493}
3494  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'for'}
   {3494}
3495  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>='}
   {3495}
3496  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'break'}
   {3496}
3497  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '^='}
   {3497}
3498  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '='}
   {3498}
3499  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'char'}
   {3499}
3500  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '&='}
   {3500}
3501  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '!='}
   {3501}
3502  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*='}
   {3502}
3503  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '=='}
   {3503}
3504  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '&'}
   {3504}
3505  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '}'}
   {3505}
3506  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': ';'}
   {3506}
3507  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'while'}
   {3507}
3508  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '|='}
   {3508}
3509  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<'}
   {3509}
3510  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'int'}
   {3510}
3511  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/'}
   {3511}
3512  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'continue'}
   {3512}
3513  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '^'}
   {3513}
3514  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'else'}
   {3514}
3515  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'void'}
   {3515}
3516  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+'}
   {3516}
3517  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '%'}
   {3517}
3518  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/='}
   {3518}
3519  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-'}
   {3519}
3520  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '('}
   {3520}
3521  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>'}
   {3521}
3522  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+='}
   {3522}
3523  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'return'}
   {3523}
3524  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '%='}
   {3524}
3525  {'left': 'assignment_operator', 'right': ['%='], 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<='}
   {3525}
3526  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'number'}
   {3526}
3527  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'if'}
   {3527}
3528  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'float'}
   {3528}
3529  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '{'}
   {3529}
3530  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '*'}
   {3530}
3531  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'double'}
   {3531}
3532  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'identifier'}
   {3532}
3533  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '#'}
   {3533}
3534  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': ','}
   {3534}
3535  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': ')'}
   {3535}
3536  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '-='}
   {3536}
3537  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'for'}
   {3537}
3538  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '>='}
   {3538}
3539  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'break'}
   {3539}
3540  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '^='}
   {3540}
3541  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '='}
   {3541}
3542  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'char'}
   {3542}
3543  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '&='}
   {3543}
3544  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '!='}
   {3544}
3545  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '*='}
   {3545}
3546  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '=='}
   {3546}
3547  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '&'}
   {3547}
3548  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '}'}
   {3548}
3549  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': ';'}
   {3549}
3550  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'while'}
   {3550}
3551  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '|='}
   {3551}
3552  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '<'}
   {3552}
3553  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'int'}
   {3553}
3554  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '/'}
   {3554}
3555  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'continue'}
   {3555}
3556  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '^'}
   {3556}
3557  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'else'}
   {3557}
3558  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'void'}
   {3558}
3559  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '+'}
   {3559}
3560  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '%'}
   {3560}
3561  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '/='}
   {3561}
3562  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '-'}
   {3562}
3563  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '('}
   {3563}
3564  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '>'}
   {3564}
3565  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '+='}
   {3565}
3566  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'return'}
   {3566}
3567  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '%='}
   {3567}
3568  {'left': 'assignment_operator', 'right': ['%='], 'point': 1, 'origin': 37, 'isTer': True, 'accept': '<='}
   {3568}
3569  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'number'}
   {3569}
3570  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'if'}
   {3570}
3571  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'float'}
   {3571}
3572  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '{'}
   {3572}
3573  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '*'}
   {3573}
3574  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'double'}
   {3574}
3575  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'identifier'}
   {3575}
3576  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '#'}
   {3576}
3577  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': ','}
   {3577}
3578  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': ')'}
   {3578}
3579  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '-='}
   {3579}
3580  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'for'}
   {3580}
3581  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '>='}
   {3581}
3582  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'break'}
   {3582}
3583  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '^='}
   {3583}
3584  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '='}
   {3584}
3585  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'char'}
   {3585}
3586  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '&='}
   {3586}
3587  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '!='}
   {3587}
3588  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '*='}
   {3588}
3589  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '=='}
   {3589}
3590  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '&'}
   {3590}
3591  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '}'}
   {3591}
3592  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': ';'}
   {3592}
3593  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'while'}
   {3593}
3594  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '|='}
   {3594}
3595  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '<'}
   {3595}
3596  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'int'}
   {3596}
3597  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '/'}
   {3597}
3598  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'continue'}
   {3598}
3599  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '^'}
   {3599}
3600  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'else'}
   {3600}
3601  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'void'}
   {3601}
3602  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '+'}
   {3602}
3603  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '%'}
   {3603}
3604  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '/='}
   {3604}
3605  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '-'}
   {3605}
3606  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '('}
   {3606}
3607  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '>'}
   {3607}
3608  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '+='}
   {3608}
3609  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'return'}
   {3609}
3610  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '%='}
   {3610}
3611  {'left': 'assignment_operator', 'right': ['^='], 'point': 0, 'origin': 38, 'isTer': False, 'accept': '<='}
   {3611}
3612  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'number'}
   {3612}
3613  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'if'}
   {3613}
3614  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'float'}
   {3614}
3615  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '{'}
   {3615}
3616  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '*'}
   {3616}
3617  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'double'}
   {3617}
3618  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'identifier'}
   {3618}
3619  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '#'}
   {3619}
3620  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': ','}
   {3620}
3621  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': ')'}
   {3621}
3622  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '-='}
   {3622}
3623  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'for'}
   {3623}
3624  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '>='}
   {3624}
3625  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'break'}
   {3625}
3626  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '^='}
   {3626}
3627  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '='}
   {3627}
3628  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'char'}
   {3628}
3629  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '&='}
   {3629}
3630  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '!='}
   {3630}
3631  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '*='}
   {3631}
3632  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '=='}
   {3632}
3633  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '&'}
   {3633}
3634  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '}'}
   {3634}
3635  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': ';'}
   {3635}
3636  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'while'}
   {3636}
3637  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '|='}
   {3637}
3638  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '<'}
   {3638}
3639  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'int'}
   {3639}
3640  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '/'}
   {3640}
3641  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'continue'}
   {3641}
3642  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '^'}
   {3642}
3643  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'else'}
   {3643}
3644  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'void'}
   {3644}
3645  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '+'}
   {3645}
3646  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '%'}
   {3646}
3647  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '/='}
   {3647}
3648  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '-'}
   {3648}
3649  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '('}
   {3649}
3650  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '>'}
   {3650}
3651  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '+='}
   {3651}
3652  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': 'return'}
   {3652}
3653  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '%='}
   {3653}
3654  {'left': 'assignment_operator', 'right': ['^='], 'point': 1, 'origin': 38, 'isTer': True, 'accept': '<='}
   {3654}
3655  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'number'}
   {3655}
3656  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'if'}
   {3656}
3657  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'float'}
   {3657}
3658  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '{'}
   {3658}
3659  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*'}
   {3659}
3660  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'double'}
   {3660}
3661  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'identifier'}
   {3661}
3662  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '#'}
   {3662}
3663  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ','}
   {3663}
3664  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ')'}
   {3664}
3665  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-='}
   {3665}
3666  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'for'}
   {3666}
3667  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>='}
   {3667}
3668  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'break'}
   {3668}
3669  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '^='}
   {3669}
3670  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '='}
   {3670}
3671  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'char'}
   {3671}
3672  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '&='}
   {3672}
3673  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '!='}
   {3673}
3674  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*='}
   {3674}
3675  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '=='}
   {3675}
3676  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '&'}
   {3676}
3677  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '}'}
   {3677}
3678  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': ';'}
   {3678}
3679  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'while'}
   {3679}
3680  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '|='}
   {3680}
3681  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<'}
   {3681}
3682  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'int'}
   {3682}
3683  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/'}
   {3683}
3684  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'continue'}
   {3684}
3685  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '^'}
   {3685}
3686  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'else'}
   {3686}
3687  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'void'}
   {3687}
3688  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+'}
   {3688}
3689  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '%'}
   {3689}
3690  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/='}
   {3690}
3691  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-'}
   {3691}
3692  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '('}
   {3692}
3693  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>'}
   {3693}
3694  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+='}
   {3694}
3695  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'return'}
   {3695}
3696  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '%='}
   {3696}
3697  {'left': 'assignment_operator', 'right': ['&='], 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<='}
   {3697}
3698  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'number'}
   {3698}
3699  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'if'}
   {3699}
3700  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'float'}
   {3700}
3701  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '{'}
   {3701}
3702  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*'}
   {3702}
3703  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'double'}
   {3703}
3704  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'identifier'}
   {3704}
3705  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '#'}
   {3705}
3706  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ','}
   {3706}
3707  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ')'}
   {3707}
3708  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-='}
   {3708}
3709  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'for'}
   {3709}
3710  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>='}
   {3710}
3711  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'break'}
   {3711}
3712  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '^='}
   {3712}
3713  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '='}
   {3713}
3714  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'char'}
   {3714}
3715  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '&='}
   {3715}
3716  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '!='}
   {3716}
3717  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*='}
   {3717}
3718  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '=='}
   {3718}
3719  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '&'}
   {3719}
3720  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '}'}
   {3720}
3721  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': ';'}
   {3721}
3722  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'while'}
   {3722}
3723  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '|='}
   {3723}
3724  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<'}
   {3724}
3725  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'int'}
   {3725}
3726  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/'}
   {3726}
3727  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'continue'}
   {3727}
3728  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '^'}
   {3728}
3729  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'else'}
   {3729}
3730  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'void'}
   {3730}
3731  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+'}
   {3731}
3732  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '%'}
   {3732}
3733  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/='}
   {3733}
3734  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-'}
   {3734}
3735  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '('}
   {3735}
3736  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>'}
   {3736}
3737  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+='}
   {3737}
3738  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'return'}
   {3738}
3739  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '%='}
   {3739}
3740  {'left': 'assignment_operator', 'right': ['&='], 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<='}
   {3740}
3741  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'number'}
   {3741}
3742  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'if'}
   {3742}
3743  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'float'}
   {3743}
3744  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '{'}
   {3744}
3745  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*'}
   {3745}
3746  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'double'}
   {3746}
3747  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'identifier'}
   {3747}
3748  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '#'}
   {3748}
3749  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ','}
   {3749}
3750  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ')'}
   {3750}
3751  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-='}
   {3751}
3752  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'for'}
   {3752}
3753  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>='}
   {3753}
3754  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'break'}
   {3754}
3755  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '^='}
   {3755}
3756  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '='}
   {3756}
3757  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'char'}
   {3757}
3758  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '&='}
   {3758}
3759  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '!='}
   {3759}
3760  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*='}
   {3760}
3761  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '=='}
   {3761}
3762  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '&'}
   {3762}
3763  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '}'}
   {3763}
3764  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': ';'}
   {3764}
3765  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'while'}
   {3765}
3766  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '|='}
   {3766}
3767  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<'}
   {3767}
3768  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'int'}
   {3768}
3769  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/'}
   {3769}
3770  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'continue'}
   {3770}
3771  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '^'}
   {3771}
3772  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'else'}
   {3772}
3773  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'void'}
   {3773}
3774  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+'}
   {3774}
3775  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '%'}
   {3775}
3776  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/='}
   {3776}
3777  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-'}
   {3777}
3778  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '('}
   {3778}
3779  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>'}
   {3779}
3780  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+='}
   {3780}
3781  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'return'}
   {3781}
3782  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '%='}
   {3782}
3783  {'left': 'assignment_operator', 'right': ['|='], 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<='}
   {3783}
3784  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'number'}
   {3784}
3785  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'if'}
   {3785}
3786  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'float'}
   {3786}
3787  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '{'}
   {3787}
3788  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '*'}
   {3788}
3789  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'double'}
   {3789}
3790  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'identifier'}
   {3790}
3791  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '#'}
   {3791}
3792  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ','}
   {3792}
3793  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ')'}
   {3793}
3794  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '-='}
   {3794}
3795  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'for'}
   {3795}
3796  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '>='}
   {3796}
3797  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'break'}
   {3797}
3798  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '^='}
   {3798}
3799  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '='}
   {3799}
3800  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'char'}
   {3800}
3801  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '&='}
   {3801}
3802  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '!='}
   {3802}
3803  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '*='}
   {3803}
3804  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '=='}
   {3804}
3805  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '&'}
   {3805}
3806  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '}'}
   {3806}
3807  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': ';'}
   {3807}
3808  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'while'}
   {3808}
3809  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '|='}
   {3809}
3810  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '<'}
   {3810}
3811  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'int'}
   {3811}
3812  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '/'}
   {3812}
3813  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'continue'}
   {3813}
3814  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '^'}
   {3814}
3815  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'else'}
   {3815}
3816  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'void'}
   {3816}
3817  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '+'}
   {3817}
3818  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '%'}
   {3818}
3819  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '/='}
   {3819}
3820  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '-'}
   {3820}
3821  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '('}
   {3821}
3822  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '>'}
   {3822}
3823  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '+='}
   {3823}
3824  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': 'return'}
   {3824}
3825  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '%='}
   {3825}
3826  {'left': 'assignment_operator', 'right': ['|='], 'point': 1, 'origin': 40, 'isTer': True, 'accept': '<='}
   {3826}
3827  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'number'}
   {3827}
3828  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'if'}
   {3828}
3829  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'float'}
   {3829}
3830  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '{'}
   {3830}
3831  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*'}
   {3831}
3832  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'double'}
   {3832}
3833  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'identifier'}
   {3833}
3834  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '#'}
   {3834}
3835  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ','}
   {3835}
3836  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ')'}
   {3836}
3837  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-='}
   {3837}
3838  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'for'}
   {3838}
3839  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>='}
   {3839}
3840  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'break'}
   {3840}
3841  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '^='}
   {3841}
3842  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '='}
   {3842}
3843  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'char'}
   {3843}
3844  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '&='}
   {3844}
3845  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '!='}
   {3845}
3846  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*='}
   {3846}
3847  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '=='}
   {3847}
3848  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '&'}
   {3848}
3849  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '}'}
   {3849}
3850  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': ';'}
   {3850}
3851  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'while'}
   {3851}
3852  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '|='}
   {3852}
3853  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<'}
   {3853}
3854  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'int'}
   {3854}
3855  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/'}
   {3855}
3856  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'continue'}
   {3856}
3857  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '^'}
   {3857}
3858  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'else'}
   {3858}
3859  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'void'}
   {3859}
3860  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+'}
   {3860}
3861  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '%'}
   {3861}
3862  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/='}
   {3862}
3863  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-'}
   {3863}
3864  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '('}
   {3864}
3865  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>'}
   {3865}
3866  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+='}
   {3866}
3867  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'return'}
   {3867}
3868  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '%='}
   {3868}
3869  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<='}
   {3869}
3870  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'number'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3870, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3871  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'if'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3871, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3872  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'float'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3872, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3873  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '{'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3873, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3874  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '*'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3874, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3875  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'double'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3875, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3876  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'identifier'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3876, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3877  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '#'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3877, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3878  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ','}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3878, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3879  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ')'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3879, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3880  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '-='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3880, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3881  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'for'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3881, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3882  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '>='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3882, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3883  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'break'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3883, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3884  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '^='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3884, 3053, 3692, 3311, 3569, 3059, 3317, 3575, 3262}
3885  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3885, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3886  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'char'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3886, 3311, 3569, 3059, 3317, 3575, 3262}
3887  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '&='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3887, 3311, 3569, 3059, 3317, 3575, 3262}
3888  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '!='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3888, 3569, 3059, 3317, 3575, 3262}
3889  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '*='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3889, 3569, 3059, 3317, 3575, 3262}
3890  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '=='}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3890, 3059, 3317, 3575, 3262}
3891  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '&'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3891, 3059, 3317, 3575, 3262}
3892  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '}'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3892, 3317, 3575, 3262}
3893  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': ';'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3893, 3317, 3575, 3262}
3894  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'while'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3894, 3575, 3262}
3895  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '|='}
   {3520, 3778, 3139, 3575, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3895, 3262}
3896  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '<'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3896, 3262}
3897  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'int'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3897, 3262}
3898  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '/'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3898, 3262}
3899  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'continue'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3899, 3262}
3900  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '^'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3900, 3262}
3901  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'else'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3901, 3262}
3902  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'void'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3902, 3569, 3059, 3317, 3575, 3262}
3903  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '+'}
   {3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262, 3903}
3904  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '%'}
   {3904, 3520, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3905  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '/='}
   {3520, 3905, 3778, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3906  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '-'}
   {3520, 3906, 3139, 3778, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3907  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '('}
   {3520, 3778, 3907, 3139, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3908  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '>'}
   {3520, 3778, 3139, 3908, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3909  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '+='}
   {3520, 3778, 3139, 3909, 3397, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3910  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': 'return'}
   {3520, 3778, 3139, 3397, 3910, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3911  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '%='}
   {3520, 3778, 3139, 3397, 3911, 3655, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3912  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 1, 'origin': 41, 'isTer': False, 'accept': '<='}
   {3520, 3778, 3139, 3397, 3655, 3912, 3145, 3403, 3661, 3090, 3348, 3606, 3225, 3483, 3741, 3231, 3489, 3747, 3176, 3434, 3692, 3053, 3311, 3569, 3059, 3317, 3575, 3262}
3913  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4386, 4902, 1591, 1595, 1603, 3913, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4472, 1677, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4558, 1763, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3914  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4387, 4903, 1592, 1595, 1603, 1609, 3914, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4473, 1678, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4559, 1764, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3915  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4388, 4904, 1593, 1595, 1603, 1609, 3915, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4474, 1679, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4560, 1765, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3916  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4389, 4905, 1594, 1595, 1603, 1609, 1611, 3916, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4475, 1680, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4561, 1766, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3917  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4390, 4906, 1595, 1603, 1609, 1611, 1612, 3917, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4476, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4562, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3918  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4391, 4907, 1595, 1596, 1603, 1609, 1611, 1612, 3918, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4477, 1681, 1682, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4563, 1767, 1768, 1775, 1781, 1783, 1784, 1789, 1791}
3919  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4392, 4908, 1595, 1597, 1603, 1609, 1611, 1612, 3919, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4478, 1681, 1683, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4564, 1767, 1769, 1775, 1781, 1783, 1784, 1789, 1791}
3920  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4393, 4909, 1595, 1598, 1603, 1609, 1611, 1612, 3920, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4479, 1681, 1684, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4565, 1767, 1770, 1775, 1781, 1783, 1784, 1789, 1791}
3921  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 3921, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
3922  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 3922, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
3923  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4396, 4912, 1595, 1601, 1603, 1609, 1611, 1612, 1617, 3923, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4482, 1681, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4568, 1767, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
3924  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4397, 4913, 1595, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 3924, 1621, 1624, 1625, 1627, 1629, 1633, 4483, 1681, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4569, 1767, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
3925  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4398, 4914, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 3925, 1621, 1624, 1625, 1627, 1629, 1633, 4484, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4570, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3926  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4399, 4915, 1595, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 3926, 1624, 1625, 1627, 1629, 1633, 4485, 1681, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4571, 1767, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
3927  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4400, 4916, 1595, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 3927, 1624, 1625, 1627, 1629, 1633, 4486, 1681, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4572, 1767, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
3928  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4401, 4917, 1595, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 3928, 1625, 1627, 1629, 1633, 4487, 1681, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4573, 1767, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
3929  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4402, 4918, 1595, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 3929, 1627, 1629, 1633, 4488, 1681, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4574, 1767, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
3930  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4403, 4919, 1595, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 3930, 1627, 1629, 1633, 4489, 1681, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4575, 1767, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
3931  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4404, 4920, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 3931, 1627, 1629, 1633, 4490, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4576, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3932  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4405, 4921, 1595, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 3932, 1629, 1633, 4491, 1681, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4577, 1767, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
3933  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4406, 4922, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 3933, 1633, 4492, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4578, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3934  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4407, 1595, 4923, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 3934, 1633, 4493, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4579, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3935  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4408, 1595, 4924, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 3935, 1633, 4494, 1681, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4580, 1767, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
3936  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 3936, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
3937  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4410, 1595, 4926, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 3937, 1633, 4496, 1681, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4582, 1767, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
3938  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4411, 1595, 4927, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3938, 1681, 4497, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4583, 1767, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
3939  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4412, 4928, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3939, 1681, 4498, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4584, 1775, 1781, 1783, 1784, 1789, 1791}
3940  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4413, 4929, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3940, 1681, 4499, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4585, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
3941  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4414, 4930, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3941, 1681, 4500, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4586, 1775, 1781, 1783, 1784, 1789, 1791}
3942  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 1595, 4415, 1603, 4931, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 3942, 1681, 4501, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4587, 1775, 1781, 1783, 1784, 1789, 1791}
3943  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4416, 1603, 4932, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3943, 1681, 4502, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4588, 1775, 1781, 1783, 1784, 1789, 1791}
3944  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 1595, 4417, 1603, 4933, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 3944, 1681, 4503, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 1767, 4589, 1775, 1781, 1783, 1784, 1789, 1791}
3945  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 1595, 4418, 1603, 4934, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 3945, 1681, 4504, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 1767, 4590, 1775, 1781, 1783, 1784, 1789, 1791}
3946  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4419, 1603, 4935, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3946, 1681, 1689, 4505, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4591, 1775, 1781, 1783, 1784, 1789, 1791}
3947  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4420, 4936, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3947, 1681, 1689, 4506, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4592, 1781, 1783, 1784, 1789, 1791}
3948  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 1595, 1603, 4421, 1609, 4937, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 3948, 1681, 1689, 4507, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 1767, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
3949  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4422, 1609, 4938, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3949, 1681, 1689, 4508, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
3950  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 1595, 1603, 4423, 1609, 1611, 1612, 4939, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 3950, 1681, 1689, 4509, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 1767, 1775, 4595, 1781, 1783, 1784, 1789, 1791}
3951  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4424, 1609, 1611, 1612, 4940, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 3951, 1681, 1689, 4510, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4596, 1781, 1783, 1784, 1789, 1791}
3952  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 1595, 1603, 4425, 1609, 1611, 1612, 4941, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 3952, 1681, 1689, 1695, 4511, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 1767, 1775, 4597, 1781, 1783, 1784, 1789, 1791}
3953  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 1595, 1603, 1609, 4426, 1611, 1612, 4942, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 3953, 1681, 1689, 1695, 4512, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 1767, 1775, 1781, 4598, 1783, 1784, 1789, 1791}
3954  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 1595, 1603, 1609, 4427, 1611, 1612, 4943, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 3954, 1681, 1689, 1695, 1697, 1698, 4513, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3955  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 2, 'origin': 41, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 1609, 1611, 4428, 1612, 4944, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4600, 3955, 1681, 1689, 1695, 1697, 1698, 4514, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
3956  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'number'}
   {3956}
3957  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'if'}
   {3957}
3958  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'float'}
   {3958}
3959  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '{'}
   {3959}
3960  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '*'}
   {3960}
3961  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'double'}
   {3961}
3962  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'identifier'}
   {3962}
3963  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '#'}
   {3963}
3964  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': ','}
   {3964}
3965  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': ')'}
   {3965}
3966  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '-='}
   {3966}
3967  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'for'}
   {3967}
3968  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '>='}
   {3968}
3969  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'break'}
   {3969}
3970  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '^='}
   {3970}
3971  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '='}
   {3971}
3972  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'char'}
   {3972}
3973  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '&='}
   {3973}
3974  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '!='}
   {3974}
3975  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '*='}
   {3975}
3976  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '=='}
   {3976}
3977  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '&'}
   {3977}
3978  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '}'}
   {3978}
3979  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': ';'}
   {3979}
3980  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'while'}
   {3980}
3981  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '|='}
   {3981}
3982  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '<'}
   {3982}
3983  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'int'}
   {3983}
3984  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '/'}
   {3984}
3985  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'continue'}
   {3985}
3986  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '^'}
   {3986}
3987  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'else'}
   {3987}
3988  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'void'}
   {3988}
3989  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '+'}
   {3989}
3990  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '%'}
   {3990}
3991  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '/='}
   {3991}
3992  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '-'}
   {3992}
3993  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '('}
   {3993}
3994  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '>'}
   {3994}
3995  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '+='}
   {3995}
3996  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': 'return'}
   {3996}
3997  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '%='}
   {3997}
3998  {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'point': 3, 'origin': 41, 'isTer': True, 'accept': '<='}
   {3998}
3999  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {3999}
4000  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {4000}
4001  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {4001}
4002  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '{'}
   {4002}
4003  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*'}
   {4003}
4004  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {4004}
4005  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {4005}
4006  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '#'}
   {4006}
4007  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ','}
   {4007}
4008  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ')'}
   {4008}
4009  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-='}
   {4009}
4010  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {4010}
4011  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>='}
   {4011}
4012  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {4012}
4013  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '^='}
   {4013}
4014  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '='}
   {4014}
4015  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {4015}
4016  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '&='}
   {4016}
4017  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '!='}
   {4017}
4018  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*='}
   {4018}
4019  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '=='}
   {4019}
4020  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '&'}
   {4020}
4021  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '}'}
   {4021}
4022  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': ';'}
   {4022}
4023  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {4023}
4024  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '|='}
   {4024}
4025  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<'}
   {4025}
4026  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {4026}
4027  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/'}
   {4027}
4028  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {4028}
4029  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '^'}
   {4029}
4030  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {4030}
4031  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {4031}
4032  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+'}
   {4032}
4033  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '%'}
   {4033}
4034  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/='}
   {4034}
4035  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-'}
   {4035}
4036  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '('}
   {4036}
4037  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>'}
   {4037}
4038  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+='}
   {4038}
4039  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {4039}
4040  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '%='}
   {4040}
4041  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<='}
   {4041}
4042  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {4042, 3827, 3835}
4043  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {4043, 3828, 3835}
4044  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {3835, 4044, 3829}
4045  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '{'}
   {3835, 4045, 3830}
4046  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*'}
   {3835, 4046, 3831}
4047  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {3832, 3835, 4047}
4048  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {4048, 3833, 3835}
4049  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '#'}
   {4049, 3834, 3835}
4050  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ','}
   {4050, 3835}
4051  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ')'}
   {4051, 3836, 3835}
4052  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-='}
   {3835, 4052, 3837}
4053  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {3835, 4053, 3838}
4054  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>='}
   {3835, 4054, 3839}
4055  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {3840, 3835, 4055}
4056  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '^='}
   {4056, 3841, 3835}
4057  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '='}
   {4057, 3842, 3835}
4058  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {4058, 3843, 3835}
4059  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '&='}
   {4059, 3844, 3835}
4060  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '!='}
   {3835, 4060, 3845}
4061  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*='}
   {3835, 4061, 3846}
4062  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '=='}
   {3835, 4062, 3847}
4063  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '&'}
   {3848, 3835, 4063}
4064  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '}'}
   {4064, 3849, 3835}
4065  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': ';'}
   {4065, 3850, 3835}
4066  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {4066, 3851, 3835}
4067  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '|='}
   {4067, 3852, 3835}
4068  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<'}
   {3835, 4068, 3853}
4069  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {3835, 4069, 3854}
4070  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/'}
   {3835, 4070, 3855}
4071  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {3856, 3835, 4071}
4072  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '^'}
   {4072, 3857, 3835}
4073  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {4073, 3858, 3835}
4074  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {4074, 3859, 3835}
4075  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+'}
   {4075, 3860, 3835}
4076  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '%'}
   {3835, 4076, 3861}
4077  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/='}
   {3835, 4077, 3862}
4078  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-'}
   {3835, 4078, 3863}
4079  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '('}
   {3864, 3835, 4079}
4080  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>'}
   {4080, 3865, 3835}
4081  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+='}
   {4081, 3866, 3835}
4082  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {4082, 3867, 3835}
4083  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '%='}
   {4083, 3868, 3835}
4084  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<='}
   {3835, 4084, 3869}
4085  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'number'}
   {4171, 4085, 3999}
4086  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'if'}
   {4000, 4172, 4086}
4087  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'float'}
   {4001, 4173, 4087}
4088  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '{'}
   {4088, 4002, 4174}
4089  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*'}
   {4089, 4003, 4175}
4090  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'double'}
   {4176, 4090, 4004}
4091  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'identifier'}
   {4177, 4091, 4005}
4092  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '#'}
   {4178, 4092, 4006}
4093  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ','}
   {4179, 4093, 4007}
4094  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ')'}
   {4008, 4180, 4094}
4095  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-='}
   {4009, 4181, 4095}
4096  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'for'}
   {4096, 4010, 4182}
4097  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>='}
   {4097, 4011, 4183}
4098  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'break'}
   {4184, 4098, 4012}
4099  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '^='}
   {4185, 4099, 4013}
4100  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '='}
   {4186, 4100, 4014}
4101  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'char'}
   {4187, 4101, 4015}
4102  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '&='}
   {4016, 4188, 4102}
4103  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '!='}
   {4017, 4189, 4103}
4104  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*='}
   {4104, 4018, 4190}
4105  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '=='}
   {4105, 4019, 4191}
4106  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '&'}
   {4192, 4106, 4020}
4107  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '}'}
   {4193, 4107, 4021}
4108  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': ';'}
   {4194, 4108, 4022}
4109  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'while'}
   {4195, 4109, 4023}
4110  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '|='}
   {4024, 4196, 4110}
4111  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<'}
   {4025, 4197, 4111}
4112  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'int'}
   {4112, 4026, 4198}
4113  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/'}
   {4113, 4027, 4199}
4114  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'continue'}
   {4200, 4114, 4028}
4115  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '^'}
   {4201, 4115, 4029}
4116  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'else'}
   {4202, 4116, 4030}
4117  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'void'}
   {4203, 4117, 4031}
4118  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+'}
   {4032, 4204, 4118}
4119  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '%'}
   {4033, 4205, 4119}
4120  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/='}
   {4120, 4034, 4206}
4121  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-'}
   {4121, 4035, 4207}
4122  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '('}
   {4208, 4122, 4036}
4123  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>'}
   {4209, 4123, 4037}
4124  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+='}
   {4210, 4124, 4038}
4125  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'return'}
   {4211, 4125, 4039}
4126  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '%='}
   {4040, 4212, 4126}
4127  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<='}
   {4041, 4213, 4127}
4128  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'number'}
   {4128}
4129  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'if'}
   {4129}
4130  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'float'}
   {4130}
4131  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '{'}
   {4131}
4132  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*'}
   {4132}
4133  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'double'}
   {4133}
4134  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'identifier'}
   {4134}
4135  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '#'}
   {4135}
4136  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ','}
   {4136}
4137  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ')'}
   {4137}
4138  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-='}
   {4138}
4139  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'for'}
   {4139}
4140  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>='}
   {4140}
4141  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'break'}
   {4141}
4142  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '^='}
   {4142}
4143  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '='}
   {4143}
4144  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'char'}
   {4144}
4145  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '&='}
   {4145}
4146  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '!='}
   {4146}
4147  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*='}
   {4147}
4148  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '=='}
   {4148}
4149  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '&'}
   {4149}
4150  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '}'}
   {4150}
4151  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': ';'}
   {4151}
4152  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'while'}
   {4152}
4153  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '|='}
   {4153}
4154  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<'}
   {4154}
4155  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'int'}
   {4155}
4156  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/'}
   {4156}
4157  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'continue'}
   {4157}
4158  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '^'}
   {4158}
4159  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'else'}
   {4159}
4160  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'void'}
   {4160}
4161  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+'}
   {4161}
4162  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '%'}
   {4162}
4163  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/='}
   {4163}
4164  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-'}
   {4164}
4165  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '('}
   {4165}
4166  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>'}
   {4166}
4167  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+='}
   {4167}
4168  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'return'}
   {4168}
4169  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '%='}
   {4169}
4170  {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<='}
   {4170}
4171  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'number'}
   {4171}
4172  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'if'}
   {4172}
4173  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'float'}
   {4173}
4174  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '{'}
   {4174}
4175  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '*'}
   {4175}
4176  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'double'}
   {4176}
4177  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'identifier'}
   {4177}
4178  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '#'}
   {4178}
4179  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': ','}
   {4179}
4180  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': ')'}
   {4180}
4181  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '-='}
   {4181}
4182  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'for'}
   {4182}
4183  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '>='}
   {4183}
4184  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'break'}
   {4184}
4185  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '^='}
   {4185}
4186  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '='}
   {4186}
4187  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'char'}
   {4187}
4188  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '&='}
   {4188}
4189  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '!='}
   {4189}
4190  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '*='}
   {4190}
4191  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '=='}
   {4191}
4192  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '&'}
   {4192}
4193  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '}'}
   {4193}
4194  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': ';'}
   {4194}
4195  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'while'}
   {4195}
4196  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '|='}
   {4196}
4197  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '<'}
   {4197}
4198  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'int'}
   {4198}
4199  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '/'}
   {4199}
4200  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'continue'}
   {4200}
4201  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '^'}
   {4201}
4202  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'else'}
   {4202}
4203  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'void'}
   {4203}
4204  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '+'}
   {4204}
4205  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '%'}
   {4205}
4206  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '/='}
   {4206}
4207  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '-'}
   {4207}
4208  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '('}
   {4208}
4209  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '>'}
   {4209}
4210  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '+='}
   {4210}
4211  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': 'return'}
   {4211}
4212  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '%='}
   {4212}
4213  {'left': 'assignment_expression_list_suffix', 'right': [], 'point': 0, 'origin': 43, 'isTer': True, 'accept': '<='}
   {4213}
4214  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'number'}
   {3827, 4214, 3835}
4215  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'if'}
   {3835, 3828, 4215}
4216  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'float'}
   {4216, 3835, 3829}
4217  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '{'}
   {4217, 3835, 3830}
4218  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '*'}
   {4218, 3835, 3831}
4219  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'double'}
   {3832, 4219, 3835}
4220  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'identifier'}
   {3833, 3835, 4220}
4221  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '#'}
   {3834, 3835, 4221}
4222  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': ','}
   {3835, 4222}
4223  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': ')'}
   {3835, 3836, 4223}
4224  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '-='}
   {4224, 3835, 3837}
4225  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'for'}
   {4225, 3835, 3838}
4226  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '>='}
   {4226, 3835, 3839}
4227  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'break'}
   {3840, 4227, 3835}
4228  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '^='}
   {3841, 3835, 4228}
4229  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '='}
   {3842, 3835, 4229}
4230  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'char'}
   {3843, 4230, 3835}
4231  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '&='}
   {3835, 3844, 4231}
4232  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '!='}
   {4232, 3835, 3845}
4233  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '*='}
   {4233, 3835, 3846}
4234  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '=='}
   {4234, 3835, 3847}
4235  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '&'}
   {3848, 4235, 3835}
4236  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '}'}
   {3849, 3835, 4236}
4237  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': ';'}
   {3850, 3835, 4237}
4238  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'while'}
   {3851, 4238, 3835}
4239  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '|='}
   {3835, 3852, 4239}
4240  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '<'}
   {4240, 3835, 3853}
4241  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'int'}
   {4241, 3835, 3854}
4242  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '/'}
   {4242, 3835, 3855}
4243  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'continue'}
   {3856, 4243, 3835}
4244  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '^'}
   {3857, 3835, 4244}
4245  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'else'}
   {3858, 3835, 4245}
4246  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'void'}
   {3859, 4246, 3835}
4247  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '+'}
   {3835, 3860, 4247}
4248  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '%'}
   {4248, 3835, 3861}
4249  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '/='}
   {4249, 3835, 3862}
4250  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '-'}
   {4250, 3835, 3863}
4251  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '('}
   {3864, 4251, 3835}
4252  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '>'}
   {3865, 3835, 4252}
4253  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '+='}
   {3866, 3835, 4253}
4254  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'return'}
   {3867, 4254, 3835}
4255  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '%='}
   {3835, 3868, 4255}
4256  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 0, 'origin': 44, 'isTer': False, 'accept': '<='}
   {4256, 3835, 3869}
4257  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'number'}
   {4257, 4171, 3999}
4258  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'if'}
   {4000, 4258, 4172}
4259  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'float'}
   {4001, 4259, 4173}
4260  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '{'}
   {4002, 4260, 4174}
4261  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '*'}
   {4003, 4261, 4175}
4262  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'double'}
   {4176, 4004, 4262}
4263  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'identifier'}
   {4177, 4005, 4263}
4264  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '#'}
   {4264, 4178, 4006}
4265  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': ','}
   {4265, 4179, 4007}
4266  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': ')'}
   {4008, 4266, 4180}
4267  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '-='}
   {4009, 4267, 4181}
4268  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'for'}
   {4010, 4268, 4182}
4269  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '>='}
   {4011, 4269, 4183}
4270  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'break'}
   {4184, 4012, 4270}
4271  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '^='}
   {4185, 4013, 4271}
4272  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '='}
   {4272, 4186, 4014}
4273  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'char'}
   {4273, 4187, 4015}
4274  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '&='}
   {4016, 4274, 4188}
4275  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '!='}
   {4017, 4275, 4189}
4276  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '*='}
   {4018, 4276, 4190}
4277  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '=='}
   {4019, 4277, 4191}
4278  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '&'}
   {4192, 4020, 4278}
4279  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '}'}
   {4193, 4021, 4279}
4280  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': ';'}
   {4280, 4194, 4022}
4281  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'while'}
   {4281, 4195, 4023}
4282  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '|='}
   {4024, 4282, 4196}
4283  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '<'}
   {4025, 4283, 4197}
4284  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'int'}
   {4026, 4284, 4198}
4285  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '/'}
   {4027, 4285, 4199}
4286  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'continue'}
   {4200, 4028, 4286}
4287  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '^'}
   {4201, 4029, 4287}
4288  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'else'}
   {4288, 4202, 4030}
4289  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'void'}
   {4289, 4203, 4031}
4290  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '+'}
   {4032, 4290, 4204}
4291  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '%'}
   {4033, 4291, 4205}
4292  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '/='}
   {4034, 4292, 4206}
4293  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '-'}
   {4035, 4293, 4207}
4294  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '('}
   {4208, 4036, 4294}
4295  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '>'}
   {4209, 4037, 4295}
4296  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '+='}
   {4296, 4210, 4038}
4297  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'return'}
   {4297, 4211, 4039}
4298  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '%='}
   {4040, 4298, 4212}
4299  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 1, 'origin': 44, 'isTer': False, 'accept': '<='}
   {4041, 4299, 4213}
4300  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'number'}
   {4300}
4301  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'if'}
   {4301}
4302  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'float'}
   {4302}
4303  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '{'}
   {4303}
4304  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '*'}
   {4304}
4305  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'double'}
   {4305}
4306  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'identifier'}
   {4306}
4307  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '#'}
   {4307}
4308  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': ','}
   {4308}
4309  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': ')'}
   {4309}
4310  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '-='}
   {4310}
4311  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'for'}
   {4311}
4312  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '>='}
   {4312}
4313  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'break'}
   {4313}
4314  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '^='}
   {4314}
4315  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '='}
   {4315}
4316  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'char'}
   {4316}
4317  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '&='}
   {4317}
4318  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '!='}
   {4318}
4319  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '*='}
   {4319}
4320  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '=='}
   {4320}
4321  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '&'}
   {4321}
4322  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '}'}
   {4322}
4323  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': ';'}
   {4323}
4324  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'while'}
   {4324}
4325  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '|='}
   {4325}
4326  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '<'}
   {4326}
4327  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'int'}
   {4327}
4328  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '/'}
   {4328}
4329  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'continue'}
   {4329}
4330  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '^'}
   {4330}
4331  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'else'}
   {4331}
4332  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'void'}
   {4332}
4333  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '+'}
   {4333}
4334  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '%'}
   {4334}
4335  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '/='}
   {4335}
4336  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '-'}
   {4336}
4337  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '('}
   {4337}
4338  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '>'}
   {4338}
4339  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '+='}
   {4339}
4340  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': 'return'}
   {4340}
4341  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '%='}
   {4341}
4342  {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'point': 2, 'origin': 44, 'isTer': True, 'accept': '<='}
   {4342}
4343  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'number'}
   {4343}
4344  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'if'}
   {4344}
4345  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'float'}
   {4345}
4346  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '{'}
   {4346}
4347  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '*'}
   {4347}
4348  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'double'}
   {4348}
4349  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'identifier'}
   {4349}
4350  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '#'}
   {4350}
4351  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': ','}
   {4351}
4352  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': ')'}
   {4352}
4353  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '-='}
   {4353}
4354  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'for'}
   {4354}
4355  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '>='}
   {4355}
4356  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'break'}
   {4356}
4357  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '^='}
   {4357}
4358  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '='}
   {4358}
4359  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'char'}
   {4359}
4360  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '&='}
   {4360}
4361  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '!='}
   {4361}
4362  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '*='}
   {4362}
4363  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '=='}
   {4363}
4364  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '&'}
   {4364}
4365  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '}'}
   {4365}
4366  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': ';'}
   {4366}
4367  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'while'}
   {4367}
4368  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '|='}
   {4368}
4369  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '<'}
   {4369}
4370  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'int'}
   {4370}
4371  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '/'}
   {4371}
4372  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'continue'}
   {4372}
4373  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '^'}
   {4373}
4374  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'else'}
   {4374}
4375  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'void'}
   {4375}
4376  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '+'}
   {4376}
4377  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '%'}
   {4377}
4378  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '/='}
   {4378}
4379  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '-'}
   {4379}
4380  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '('}
   {4380}
4381  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '>'}
   {4381}
4382  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '+='}
   {4382}
4383  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': 'return'}
   {4383}
4384  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '%='}
   {4384}
4385  {'left': 'assignment_expression_list', 'right': [], 'point': 0, 'origin': 45, 'isTer': True, 'accept': '<='}
   {4385}
4386  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4386, 1591, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1677, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4558, 1763, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4387  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4387, 1592, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1678, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4559, 1764, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4388  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4388, 1593, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1679, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4560, 1765, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4389  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4389, 1594, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1680, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4561, 1766, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4390  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4390, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4562, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4391  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4391, 1595, 1596, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1682, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4563, 1767, 1768, 1775, 1781, 1783, 1784, 1789, 1791}
4392  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4392, 1595, 1597, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1683, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4564, 1767, 1769, 1775, 1781, 1783, 1784, 1789, 1791}
4393  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4393, 1595, 1598, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1684, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4565, 1767, 1770, 1775, 1781, 1783, 1784, 1789, 1791}
4394  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
4395  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4396  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4396, 1595, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4568, 1767, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
4397  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4397, 1595, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4569, 1767, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
4398  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4398, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4570, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4399  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4399, 1595, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4571, 1767, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
4400  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4400, 1595, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4572, 1767, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
4401  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4401, 1595, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4573, 1767, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
4402  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4402, 1595, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4574, 1767, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
4403  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4403, 1595, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4575, 1767, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
4404  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4404, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4576, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4405  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4405, 1595, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4577, 1767, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
4406  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4406, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4578, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4407  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4407, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4579, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4408  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4408, 1595, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4580, 1767, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
4409  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
4410  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4410, 1595, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4582, 1767, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
4411  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4411, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4583, 1767, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
4412  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4412, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4584, 1775, 1781, 1783, 1784, 1789, 1791}
4413  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4413, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4585, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
4414  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4414, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4586, 1775, 1781, 1783, 1784, 1789, 1791}
4415  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 1595, 4415, 1603, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4587, 1775, 1781, 1783, 1784, 1789, 1791}
4416  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 4416, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4588, 1775, 1781, 1783, 1784, 1789, 1791}
4417  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 1595, 4417, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 1767, 4589, 1775, 1781, 1783, 1784, 1789, 1791}
4418  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 1595, 4418, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 1767, 4590, 1775, 1781, 1783, 1784, 1789, 1791}
4419  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4419, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 4591, 1775, 1781, 1783, 1784, 1789, 1791}
4420  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4420, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4592, 1781, 1783, 1784, 1789, 1791}
4421  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 1595, 1603, 4421, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 1767, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
4422  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4422, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
4423  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 1595, 1603, 4423, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 1767, 1775, 4595, 1781, 1783, 1784, 1789, 1791}
4424  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 4424, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 4596, 1781, 1783, 1784, 1789, 1791}
4425  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 1595, 1603, 1609, 4425, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 1767, 1775, 4597, 1781, 1783, 1784, 1789, 1791}
4426  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 1595, 1603, 1609, 4426, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 1767, 1775, 1781, 4598, 1783, 1784, 1789, 1791}
4427  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 1595, 1603, 1609, 1611, 1612, 4427, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4428  {'left': 'expression', 'right': ['constant_expression'], 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1595, 1603, 1609, 1611, 1612, 4428, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4600, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4429  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'number'}
   {4429}
4430  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'if'}
   {4430}
4431  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'float'}
   {4431}
4432  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '{'}
   {4432}
4433  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '*'}
   {4433}
4434  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'double'}
   {4434}
4435  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'identifier'}
   {4435}
4436  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '#'}
   {4436}
4437  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': ','}
   {4437}
4438  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': ')'}
   {4438}
4439  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '-='}
   {4439}
4440  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'for'}
   {4440}
4441  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '>='}
   {4441}
4442  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'break'}
   {4442}
4443  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '^='}
   {4443}
4444  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '='}
   {4444}
4445  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'char'}
   {4445}
4446  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '&='}
   {4446}
4447  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '!='}
   {4447}
4448  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '*='}
   {4448}
4449  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '=='}
   {4449}
4450  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '&'}
   {4450}
4451  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '}'}
   {4451}
4452  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': ';'}
   {4452}
4453  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'while'}
   {4453}
4454  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '|='}
   {4454}
4455  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '<'}
   {4455}
4456  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'int'}
   {4456}
4457  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '/'}
   {4457}
4458  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'continue'}
   {4458}
4459  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '^'}
   {4459}
4460  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'else'}
   {4460}
4461  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'void'}
   {4461}
4462  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '+'}
   {4462}
4463  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '%'}
   {4463}
4464  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '/='}
   {4464}
4465  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '-'}
   {4465}
4466  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '('}
   {4466}
4467  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '>'}
   {4467}
4468  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '+='}
   {4468}
4469  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': 'return'}
   {4469}
4470  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '%='}
   {4470}
4471  {'left': 'expression', 'right': ['constant_expression'], 'point': 1, 'origin': 46, 'isTer': True, 'accept': '<='}
   {4471}
4472  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'number'}
   {4472, 4902}
4473  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'if'}
   {4473, 4903}
4474  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'float'}
   {4904, 4474}
4475  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '{'}
   {4905, 4475}
4476  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '*'}
   {4906, 4476}
4477  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'double'}
   {4907, 4477}
4478  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'identifier'}
   {4908, 4478}
4479  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '#'}
   {4909, 4479}
4480  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': ','}
   {4480, 4910}
4481  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': ')'}
   {4481, 4911}
4482  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '-='}
   {4912, 4482}
4483  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'for'}
   {4913, 4483}
4484  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '>='}
   {4914, 4484}
4485  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'break'}
   {4915, 4485}
4486  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '^='}
   {4916, 4486}
4487  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '='}
   {4917, 4487}
4488  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'char'}
   {4488, 4918}
4489  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '&='}
   {4489, 4919}
4490  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '!='}
   {4920, 4490}
4491  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '*='}
   {4921, 4491}
4492  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '=='}
   {4922, 4492}
4493  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '&'}
   {4923, 4493}
4494  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '}'}
   {4924, 4494}
4495  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': ';'}
   {4925, 4495}
4496  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'while'}
   {4496, 4926}
4497  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '|='}
   {4497, 4927}
4498  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '<'}
   {4928, 4498}
4499  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'int'}
   {4929, 4499}
4500  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '/'}
   {4930, 4500}
4501  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'continue'}
   {4931, 4501}
4502  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '^'}
   {4932, 4502}
4503  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'else'}
   {4933, 4503}
4504  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'void'}
   {4504, 4934}
4505  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '+'}
   {4505, 4935}
4506  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '%'}
   {4936, 4506}
4507  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '/='}
   {4937, 4507}
4508  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '-'}
   {4938, 4508}
4509  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '('}
   {4939, 4509}
4510  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '>'}
   {4940, 4510}
4511  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '+='}
   {4941, 4511}
4512  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'return'}
   {4512, 4942}
4513  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '%='}
   {4513, 4943}
4514  {'left': 'expression', 'right': ['function_expression'], 'point': 0, 'origin': 47, 'isTer': False, 'accept': '<='}
   {4944, 4514}
4515  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'number'}
   {4515}
4516  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'if'}
   {4516}
4517  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'float'}
   {4517}
4518  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '{'}
   {4518}
4519  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '*'}
   {4519}
4520  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'double'}
   {4520}
4521  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'identifier'}
   {4521}
4522  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '#'}
   {4522}
4523  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': ','}
   {4523}
4524  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': ')'}
   {4524}
4525  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '-='}
   {4525}
4526  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'for'}
   {4526}
4527  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '>='}
   {4527}
4528  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'break'}
   {4528}
4529  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '^='}
   {4529}
4530  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '='}
   {4530}
4531  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'char'}
   {4531}
4532  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '&='}
   {4532}
4533  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '!='}
   {4533}
4534  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '*='}
   {4534}
4535  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '=='}
   {4535}
4536  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '&'}
   {4536}
4537  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '}'}
   {4537}
4538  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': ';'}
   {4538}
4539  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'while'}
   {4539}
4540  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '|='}
   {4540}
4541  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '<'}
   {4541}
4542  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'int'}
   {4542}
4543  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '/'}
   {4543}
4544  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'continue'}
   {4544}
4545  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '^'}
   {4545}
4546  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'else'}
   {4546}
4547  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'void'}
   {4547}
4548  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '+'}
   {4548}
4549  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '%'}
   {4549}
4550  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '/='}
   {4550}
4551  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '-'}
   {4551}
4552  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '('}
   {4552}
4553  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '>'}
   {4553}
4554  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '+='}
   {4554}
4555  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'return'}
   {4555}
4556  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '%='}
   {4556}
4557  {'left': 'expression', 'right': ['function_expression'], 'point': 1, 'origin': 47, 'isTer': True, 'accept': '<='}
   {4557}
4558  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1677, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1591, 1719, 1595, 1603, 1609, 1611, 1612, 4558, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1763, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4559  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1678, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1592, 1595, 1603, 1609, 1611, 1612, 4559, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1764, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4560  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1679, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1593, 1595, 1603, 1609, 1611, 1612, 4560, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1765, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4561  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1680, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1594, 1595, 1603, 1609, 1611, 1612, 1617, 4561, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1766, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4562  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 4562, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4563  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1682, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1596, 1603, 1609, 1611, 1612, 1617, 1619, 4563, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1768, 1775, 1781, 1783, 1784, 1789, 1791}
4564  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1683, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1597, 1603, 1609, 1611, 1612, 1617, 1619, 4564, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1769, 1775, 1781, 1783, 1784, 1789, 1791}
4565  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1684, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1598, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 4565, 1624, 1625, 1627, 1629, 1633, 1767, 1770, 1775, 1781, 1783, 1784, 1789, 1791}
4566  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 4566, 1624, 1625, 1627, 1629, 1633, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
4567  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 4567, 1624, 1625, 1627, 1629, 1633, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4568  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 4568, 1627, 1629, 1633, 1767, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
4569  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 4569, 1627, 1629, 1633, 1767, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
4570  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 4570, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4571  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 4571, 1629, 1633, 1767, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
4572  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 4572, 1629, 1633, 1767, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
4573  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 4573, 1633, 1767, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
4574  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 4574, 1633, 1767, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
4575  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 4575, 1633, 1767, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
4576  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 4576, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4577  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4577, 1767, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
4578  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4578, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4579  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4579, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4580  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4580, 1767, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
4581  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
4582  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4582, 1767, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
4583  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4583, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
4584  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4584, 1775, 1781, 1783, 1784, 1789, 1791}
4585  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4585, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
4586  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4586, 1775, 1781, 1783, 1784, 1789, 1791}
4587  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4587, 1775, 1781, 1783, 1784, 1789, 1791}
4588  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4588, 1775, 1781, 1783, 1784, 1789, 1791}
4589  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 1767, 4589, 1775, 1781, 1783, 1784, 1789, 1791}
4590  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 1767, 4590, 1775, 1781, 1783, 1784, 1789, 1791}
4591  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 4591, 1781, 1783, 1784, 1789, 1791}
4592  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 4592, 1781, 1783, 1784, 1789, 1791}
4593  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 1767, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
4594  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
4595  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 1767, 1775, 4595, 1781, 1783, 1784, 1789, 1791}
4596  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 4596, 1781, 1783, 1784, 1789, 1791}
4597  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 1767, 1775, 1781, 4597, 1783, 1784, 1789, 1791}
4598  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 1767, 1775, 1781, 4598, 1783, 1784, 1789, 1791}
4599  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4600  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 4600, 1775, 1781, 1783, 1784, 1789, 1791}
4601  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'number'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4687, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4601, 4859}
4602  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'if'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4688, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4602, 4860}
4603  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'float'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4689, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4603, 4861}
4604  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '{'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4690, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4604, 4862}
4605  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '*'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4691, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4605, 4863}
4606  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'double'}
   {4864, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4692, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4606}
4607  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'identifier'}
   {4865, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4693, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4607}
4608  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '#'}
   {4608, 4866, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4694, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4609  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ','}
   {4609, 4867, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4695, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4610  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ')'}
   {4610, 4868, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4696, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4611  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '-='}
   {4611, 4869, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4697, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4612  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'for'}
   {4612, 4870, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4698, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4613  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '>='}
   {4613, 4871, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4699, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4614  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'break'}
   {4614, 4872, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4700, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4615  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '^='}
   {4615, 4873, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4701, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4616  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '='}
   {4616, 2058, 4874, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4702, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4617  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'char'}
   {4617, 2058, 4875, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4703, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4618  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '&='}
   {4618, 2058, 2316, 4876, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4704, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4619  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '!='}
   {2058, 4619, 2316, 4877, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4705, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4620  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '*='}
   {2058, 4620, 2316, 2574, 4878, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4706, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4621  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '=='}
   {2058, 2316, 4621, 2574, 4879, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4707, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4622  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '&'}
   {2058, 2316, 4622, 2574, 2832, 4880, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4708, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4623  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '}'}
   {2058, 2316, 2574, 4623, 2832, 4881, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 4709, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4624  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': ';'}
   {2058, 2316, 2574, 4624, 2832, 4882, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 4710, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4625  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'while'}
   {2058, 2316, 2574, 2832, 4625, 4883, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4711, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4626  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '|='}
   {2058, 2316, 2574, 2832, 4626, 4884, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4712, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4627  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '<'}
   {2058, 2316, 2574, 2832, 4627, 4885, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4713, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4628  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'int'}
   {2058, 2316, 2574, 2832, 4628, 4886, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4714, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4629  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '/'}
   {2058, 2316, 2574, 2832, 4629, 4887, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4715, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4630  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'continue'}
   {2058, 2316, 2574, 2832, 4630, 4888, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4716, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4631  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '^'}
   {2058, 2316, 2574, 2832, 4631, 4889, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4717, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4632  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'else'}
   {2058, 2316, 2574, 2832, 4632, 4890, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4718, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4633  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'void'}
   {2058, 2316, 2574, 2832, 4633, 4891, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4719, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4634  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '+'}
   {2058, 2316, 2574, 2832, 4634, 4892, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4720, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4635  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '%'}
   {2058, 2316, 2574, 2832, 4635, 4893, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4721, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4636  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '/='}
   {2058, 2316, 2574, 2832, 4636, 4894, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4722, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4637  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '-'}
   {2058, 2316, 2574, 2832, 4637, 4895, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4723, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4638  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '('}
   {2058, 2316, 2574, 2832, 4638, 4896, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4724, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4639  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '>'}
   {2058, 2316, 2574, 2832, 4639, 4897, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4725, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4640  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '+='}
   {2058, 2316, 2574, 2832, 4640, 4898, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4726, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4641  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': 'return'}
   {2058, 2316, 2574, 2832, 4641, 4899, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4727, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4642  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '%='}
   {2058, 2316, 2574, 2832, 4642, 4900, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4728, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4643  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 48, 'isTer': False, 'accept': '<='}
   {2058, 2316, 2574, 2832, 4643, 4901, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4729, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4644  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'number'}
   {4644}
4645  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'if'}
   {4645}
4646  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'float'}
   {4646}
4647  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '{'}
   {4647}
4648  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '*'}
   {4648}
4649  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'double'}
   {4649}
4650  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'identifier'}
   {4650}
4651  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '#'}
   {4651}
4652  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ','}
   {4652}
4653  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ')'}
   {4653}
4654  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '-='}
   {4654}
4655  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'for'}
   {4655}
4656  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '>='}
   {4656}
4657  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'break'}
   {4657}
4658  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '^='}
   {4658}
4659  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '='}
   {4659}
4660  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'char'}
   {4660}
4661  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '&='}
   {4661}
4662  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '!='}
   {4662}
4663  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '*='}
   {4663}
4664  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '=='}
   {4664}
4665  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '&'}
   {4665}
4666  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '}'}
   {4666}
4667  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': ';'}
   {4667}
4668  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'while'}
   {4668}
4669  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '|='}
   {4669}
4670  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '<'}
   {4670}
4671  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'int'}
   {4671}
4672  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '/'}
   {4672}
4673  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'continue'}
   {4673}
4674  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '^'}
   {4674}
4675  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'else'}
   {4675}
4676  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'void'}
   {4676}
4677  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '+'}
   {4677}
4678  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '%'}
   {4678}
4679  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '/='}
   {4679}
4680  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '-'}
   {4680}
4681  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '('}
   {4681}
4682  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '>'}
   {4682}
4683  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '+='}
   {4683}
4684  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': 'return'}
   {4684}
4685  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '%='}
   {4685}
4686  {'left': 'constant_expression', 'right': ['primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 48, 'isTer': True, 'accept': '<='}
   {4686}
4687  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'number'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4687, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4688  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'if'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4688, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4689  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'float'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4689, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4690  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '{'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4690, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4691  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '*'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4691, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4692  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'double'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4692, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4693  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'identifier'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4693, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4694  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '#'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4694, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4695  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': ','}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4695, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4696  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': ')'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4696, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4697  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '-='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4697, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4698  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'for'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4698, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4699  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '>='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4699, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4700  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'break'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4700, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4701  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '^='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4701, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4702  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4702, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4703  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'char'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4703, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4704  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '&='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4704, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4705  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '!='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4705, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4706  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '*='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4706, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4707  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '=='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4707, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4708  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '&'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 4708, 2537, 2795, 2027, 2285, 2543, 2801}
4709  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '}'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 4709, 2537, 2795, 2027, 2285, 2543, 2801}
4710  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': ';'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 4710, 2537, 2795, 2027, 2285, 2543, 2801}
4711  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'while'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 4711, 2537, 2795, 2027, 2285, 2543, 2801}
4712  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '|='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 4712, 2537, 2795, 2027, 2285, 2543, 2801}
4713  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '<'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 4713, 2795, 2027, 2285, 2543, 2801}
4714  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'int'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 4714, 2795, 2027, 2285, 2543, 2801}
4715  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '/'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 4715, 2543, 2801}
4716  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'continue'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 4716, 2543, 2801}
4717  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '^'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 4717, 2543, 2801}
4718  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'else'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 4718, 2543, 2801}
4719  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'void'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 4719, 2801}
4720  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '+'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 4720, 2801}
4721  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '%'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4721}
4722  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '/='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4722}
4723  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '-'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4723}
4724  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '('}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4724}
4725  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '>'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4725}
4726  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '+='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4726}
4727  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'return'}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4727}
4728  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '%='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4728}
4729  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 0, 'origin': 49, 'isTer': False, 'accept': '<='}
   {2058, 2316, 2574, 1935, 2832, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 2107, 3004, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2021, 2918, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4729}
4730  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1677, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1591, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1763, 1767, 1775, 1781, 1783, 1784, 4730, 1789, 1791}
4731  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1678, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1592, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1764, 1767, 1775, 1781, 1783, 1784, 4731, 1789, 1791}
4732  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1679, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1593, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1765, 1767, 1775, 1781, 1783, 1784, 4732, 1789, 1791}
4733  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '{'}
   {1793, 1796, 4733, 1797, 1799, 1801, 1805, 1680, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1594, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1766, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4734  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 4734, 1791}
4735  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4735, 1681, 1682, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1596, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1768, 1775, 1781, 1783, 1784, 1789, 1791}
4736  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'identifier'}
   {4736, 1793, 1796, 1797, 1799, 1801, 1805, 1681, 1683, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1597, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1769, 1775, 1781, 1783, 1784, 1789, 1791}
4737  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '#'}
   {4737, 1793, 1796, 1797, 1799, 1801, 1805, 1681, 1684, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1598, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1770, 1775, 1781, 1783, 1784, 1789, 1791}
4738  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': ','}
   {1793, 4738, 1796, 1797, 1799, 1801, 1805, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
4739  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': ')'}
   {1793, 4739, 1796, 1797, 1799, 1801, 1805, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4740  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '-='}
   {1793, 4740, 1796, 1797, 1799, 1801, 1805, 1681, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
4741  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 4741, 1797, 1799, 1801, 1805, 1681, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
4742  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 4742, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4743  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 4743, 1799, 1801, 1805, 1681, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
4744  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 4744, 1801, 1805, 1681, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
4745  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 4745, 1801, 1805, 1681, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
4746  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 4746, 1805, 1681, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
4747  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 4747, 1805, 1681, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
4748  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 4748, 1805, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4749  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 4749, 1805, 1681, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
4750  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4750, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4751  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4751, 1681, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4752  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4752, 1681, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
4753  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4753, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
4754  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4754, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
4755  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4755, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
4756  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4756, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4757  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4757, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
4758  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4758, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4759  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 1681, 4759, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4760  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 4760, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4761  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 4761, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4762  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 4762, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4763  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 4763, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4764  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 4764, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4765  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 1681, 1689, 4765, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4766  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 4766, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4767  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 1681, 1689, 1695, 4767, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4768  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 4768, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4769  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 1681, 1689, 1695, 4769, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4770  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 1681, 1689, 1695, 1697, 4770, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4771  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 1681, 1689, 1695, 1697, 1698, 4771, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4772  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 1, 'origin': 49, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 1681, 1689, 1695, 1697, 1698, 4772, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 1595, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 1767, 1775, 1781, 1783, 1784, 1789, 1791}
4773  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'number'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4687, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4773, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4859}
4774  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'if'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4688, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4774, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4860}
4775  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'float'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4689, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4775, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4861}
4776  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '{'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4690, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4776, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4862}
4777  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '*'}
   {2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4691, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4777, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801, 4863}
4778  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'double'}
   {4864, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4692, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4778, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4779  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'identifier'}
   {4865, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4693, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4779, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4780  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '#'}
   {4866, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4694, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4780, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4781  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': ','}
   {4867, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4695, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4781, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4782  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': ')'}
   {4868, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4696, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4782, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4783  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '-='}
   {4869, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4697, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4783, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4784  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'for'}
   {4870, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4698, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4784, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4785  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '>='}
   {4871, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4699, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4785, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4786  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'break'}
   {4872, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4700, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4786, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4787  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '^='}
   {4873, 2058, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4701, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4787, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4788  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '='}
   {2058, 4874, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4702, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 4788, 1972, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4789  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'char'}
   {2058, 4875, 2316, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4703, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 4789, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4790  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '&='}
   {2058, 2316, 4876, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 4704, 2144, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 4790, 2230, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4791  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '!='}
   {2058, 2316, 4877, 2574, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4705, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 4791, 2488, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4792  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '*='}
   {2058, 2316, 2574, 4878, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 4706, 2402, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 4792, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4793  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '=='}
   {2058, 2316, 2574, 4879, 2832, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4707, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 4793, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4794  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '&'}
   {2058, 2316, 2574, 2832, 4880, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 4708, 2660, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 4794, 2746, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4795  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '}'}
   {2058, 2316, 2574, 2832, 4881, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 4709, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 4795, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4796  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': ';'}
   {2058, 2316, 2574, 2832, 4882, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 4710, 2918, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 4796, 3004, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4797  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'while'}
   {2058, 2316, 2574, 2832, 4883, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4711, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4797, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4798  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '|='}
   {2058, 2316, 2574, 2832, 4884, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4712, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4798, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4799  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '<'}
   {2058, 2316, 2574, 2832, 4885, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4713, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4799, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4800  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'int'}
   {2058, 2316, 2574, 2832, 4886, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4714, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4800, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4801  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '/'}
   {2058, 2316, 2574, 2832, 4887, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4715, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4801, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4802  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'continue'}
   {2058, 2316, 2574, 2832, 4888, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4716, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4802, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4803  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '^'}
   {2058, 2316, 2574, 2832, 4889, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4717, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4803, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4804  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'else'}
   {2058, 2316, 2574, 2832, 4890, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4718, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4804, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4805  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'void'}
   {2058, 2316, 2574, 2832, 4891, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4719, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4805, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4806  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '+'}
   {2058, 2316, 2574, 2832, 4892, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4720, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4806, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4807  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '%'}
   {2058, 2316, 2574, 2832, 4893, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4721, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4807, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4808  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '/='}
   {2058, 2316, 2574, 2832, 4894, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4722, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4808, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4809  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '-'}
   {2058, 2316, 2574, 2832, 4895, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4723, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4809, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4810  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '('}
   {2058, 2316, 2574, 2832, 4896, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4724, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4810, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4811  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '>'}
   {2058, 2316, 2574, 2832, 4897, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4725, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4811, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4812  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '+='}
   {2058, 2316, 2574, 2832, 4898, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4726, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4812, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4813  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': 'return'}
   {2058, 2316, 2574, 2832, 4899, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4727, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4813, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4814  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '%='}
   {2058, 2316, 2574, 2832, 4900, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4728, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4814, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4815  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 2, 'origin': 49, 'isTer': False, 'accept': '<='}
   {2058, 2316, 2574, 2832, 4901, 2107, 2365, 2623, 2113, 2881, 2371, 2629, 2887, 2144, 2402, 2660, 2918, 4729, 1935, 2193, 2451, 2709, 1941, 2199, 2967, 2457, 2715, 2973, 1972, 2230, 2488, 2746, 3004, 4815, 2021, 2279, 2537, 2795, 2027, 2285, 2543, 2801}
4816  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'number'}
   {4816}
4817  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'if'}
   {4817}
4818  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'float'}
   {4818}
4819  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '{'}
   {4819}
4820  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '*'}
   {4820}
4821  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'double'}
   {4821}
4822  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'identifier'}
   {4822}
4823  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '#'}
   {4823}
4824  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': ','}
   {4824}
4825  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': ')'}
   {4825}
4826  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '-='}
   {4826}
4827  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'for'}
   {4827}
4828  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '>='}
   {4828}
4829  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'break'}
   {4829}
4830  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '^='}
   {4830}
4831  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '='}
   {4831}
4832  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'char'}
   {4832}
4833  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '&='}
   {4833}
4834  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '!='}
   {4834}
4835  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '*='}
   {4835}
4836  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '=='}
   {4836}
4837  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '&'}
   {4837}
4838  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '}'}
   {4838}
4839  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': ';'}
   {4839}
4840  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'while'}
   {4840}
4841  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '|='}
   {4841}
4842  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '<'}
   {4842}
4843  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'int'}
   {4843}
4844  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '/'}
   {4844}
4845  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'continue'}
   {4845}
4846  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '^'}
   {4846}
4847  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'else'}
   {4847}
4848  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'void'}
   {4848}
4849  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '+'}
   {4849}
4850  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '%'}
   {4850}
4851  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '/='}
   {4851}
4852  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '-'}
   {4852}
4853  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '('}
   {4853}
4854  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '>'}
   {4854}
4855  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '+='}
   {4855}
4856  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': 'return'}
   {4856}
4857  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '%='}
   {4857}
4858  {'left': 'arithmetic_expression', 'right': ['operator', 'primary_expression', 'arithmetic_expression'], 'point': 3, 'origin': 49, 'isTer': True, 'accept': '<='}
   {4858}
4859  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'number'}
   {4859}
4860  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'if'}
   {4860}
4861  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'float'}
   {4861}
4862  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '{'}
   {4862}
4863  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '*'}
   {4863}
4864  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'double'}
   {4864}
4865  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'identifier'}
   {4865}
4866  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '#'}
   {4866}
4867  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': ','}
   {4867}
4868  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': ')'}
   {4868}
4869  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '-='}
   {4869}
4870  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'for'}
   {4870}
4871  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '>='}
   {4871}
4872  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'break'}
   {4872}
4873  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '^='}
   {4873}
4874  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '='}
   {4874}
4875  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'char'}
   {4875}
4876  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '&='}
   {4876}
4877  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '!='}
   {4877}
4878  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '*='}
   {4878}
4879  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '=='}
   {4879}
4880  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '&'}
   {4880}
4881  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '}'}
   {4881}
4882  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': ';'}
   {4882}
4883  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'while'}
   {4883}
4884  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '|='}
   {4884}
4885  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '<'}
   {4885}
4886  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'int'}
   {4886}
4887  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '/'}
   {4887}
4888  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'continue'}
   {4888}
4889  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '^'}
   {4889}
4890  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'else'}
   {4890}
4891  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'void'}
   {4891}
4892  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '+'}
   {4892}
4893  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '%'}
   {4893}
4894  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '/='}
   {4894}
4895  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '-'}
   {4895}
4896  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '('}
   {4896}
4897  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '>'}
   {4897}
4898  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '+='}
   {4898}
4899  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': 'return'}
   {4899}
4900  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '%='}
   {4900}
4901  {'left': 'arithmetic_expression', 'right': [], 'point': 0, 'origin': 50, 'isTer': True, 'accept': '<='}
   {4901}
4902  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {4902}
4903  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {4903}
4904  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {4904}
4905  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '{'}
   {4905}
4906  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*'}
   {4906}
4907  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {4907}
4908  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {4908}
4909  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '#'}
   {4909}
4910  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ','}
   {4910}
4911  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ')'}
   {4911}
4912  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-='}
   {4912}
4913  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {4913}
4914  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>='}
   {4914}
4915  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {4915}
4916  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '^='}
   {4916}
4917  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '='}
   {4917}
4918  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {4918}
4919  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '&='}
   {4919}
4920  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '!='}
   {4920}
4921  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*='}
   {4921}
4922  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '=='}
   {4922}
4923  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '&'}
   {4923}
4924  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '}'}
   {4924}
4925  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': ';'}
   {4925}
4926  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {4926}
4927  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '|='}
   {4927}
4928  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<'}
   {4928}
4929  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {4929}
4930  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/'}
   {4930}
4931  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {4931}
4932  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '^'}
   {4932}
4933  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {4933}
4934  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {4934}
4935  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+'}
   {4935}
4936  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '%'}
   {4936}
4937  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/='}
   {4937}
4938  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-'}
   {4938}
4939  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '('}
   {4939}
4940  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>'}
   {4940}
4941  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+='}
   {4941}
4942  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {4942}
4943  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '%='}
   {4943}
4944  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<='}
   {4944}
4945  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {4945}
4946  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {4946}
4947  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {4947}
4948  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '{'}
   {4948}
4949  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '*'}
   {4949}
4950  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {4950}
4951  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {4951}
4952  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '#'}
   {4952}
4953  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ','}
   {4953}
4954  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ')'}
   {4954}
4955  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '-='}
   {4955}
4956  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {4956}
4957  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '>='}
   {4957}
4958  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {4958}
4959  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '^='}
   {4959}
4960  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '='}
   {4960}
4961  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {4961}
4962  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '&='}
   {4962}
4963  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '!='}
   {4963}
4964  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '*='}
   {4964}
4965  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '=='}
   {4965}
4966  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '&'}
   {4966}
4967  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '}'}
   {4967}
4968  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': ';'}
   {4968}
4969  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {4969}
4970  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '|='}
   {4970}
4971  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '<'}
   {4971}
4972  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {4972}
4973  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '/'}
   {4973}
4974  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {4974}
4975  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '^'}
   {4975}
4976  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {4976}
4977  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {4977}
4978  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '+'}
   {4978}
4979  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '%'}
   {4979}
4980  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '/='}
   {4980}
4981  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '-'}
   {4981}
4982  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '('}
   {4982}
4983  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '>'}
   {4983}
4984  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '+='}
   {4984}
4985  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {4985}
4986  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '%='}
   {4986}
4987  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 1, 'origin': 51, 'isTer': False, 'accept': '<='}
   {4987}
4988  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4988, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4989  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4989, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4990  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4990, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4991  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4991, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4992  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4992, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4993  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4993, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4994  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4994, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4995  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4995, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4996  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4996, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4997  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4997, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4998  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4998, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
4999  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 4999, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5000  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5000, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5001  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5001, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5002  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5002, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5003  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5003, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5004  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5004, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5005  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5005, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5006  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5006, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5007  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5007, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5008  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5008, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5009  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 5009, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5010  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 5010, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5011  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 5011, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5012  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 5012, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5013  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 5013, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5014  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 5014, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5015  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 5015, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5016  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 5016, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5017  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 5017, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5018  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5018, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5019  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5019, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5020  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5020, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5021  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5021, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5022  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5022, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5023  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 5023, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5024  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 5024, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5025  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 5025, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5026  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 5026, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5027  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 5027, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5028  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 5028, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5029  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 5029, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5030  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 2, 'origin': 51, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 5470, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 5030, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5031  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'number'}
   {5031}
5032  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'if'}
   {5032}
5033  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'float'}
   {5033}
5034  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '{'}
   {5034}
5035  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '*'}
   {5035}
5036  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'double'}
   {5036}
5037  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'identifier'}
   {5037}
5038  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '#'}
   {5038}
5039  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': ','}
   {5039}
5040  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': ')'}
   {5040}
5041  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '-='}
   {5041}
5042  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'for'}
   {5042}
5043  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '>='}
   {5043}
5044  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'break'}
   {5044}
5045  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '^='}
   {5045}
5046  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '='}
   {5046}
5047  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'char'}
   {5047}
5048  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '&='}
   {5048}
5049  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '!='}
   {5049}
5050  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '*='}
   {5050}
5051  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '=='}
   {5051}
5052  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '&'}
   {5052}
5053  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '}'}
   {5053}
5054  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': ';'}
   {5054}
5055  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'while'}
   {5055}
5056  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '|='}
   {5056}
5057  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '<'}
   {5057}
5058  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'int'}
   {5058}
5059  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '/'}
   {5059}
5060  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'continue'}
   {5060}
5061  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '^'}
   {5061}
5062  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'else'}
   {5062}
5063  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'void'}
   {5063}
5064  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '+'}
   {5064}
5065  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '%'}
   {5065}
5066  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '/='}
   {5066}
5067  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '-'}
   {5067}
5068  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '('}
   {5068}
5069  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '>'}
   {5069}
5070  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '+='}
   {5070}
5071  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': 'return'}
   {5071}
5072  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '%='}
   {5072}
5073  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 3, 'origin': 51, 'isTer': False, 'accept': '<='}
   {5073}
5074  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'number'}
   {5074}
5075  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'if'}
   {5075}
5076  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'float'}
   {5076}
5077  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '{'}
   {5077}
5078  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '*'}
   {5078}
5079  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'double'}
   {5079}
5080  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'identifier'}
   {5080}
5081  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '#'}
   {5081}
5082  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': ','}
   {5082}
5083  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': ')'}
   {5083}
5084  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '-='}
   {5084}
5085  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'for'}
   {5085}
5086  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '>='}
   {5086}
5087  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'break'}
   {5087}
5088  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '^='}
   {5088}
5089  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '='}
   {5089}
5090  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'char'}
   {5090}
5091  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '&='}
   {5091}
5092  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '!='}
   {5092}
5093  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '*='}
   {5093}
5094  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '=='}
   {5094}
5095  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '&'}
   {5095}
5096  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '}'}
   {5096}
5097  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': ';'}
   {5097}
5098  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'while'}
   {5098}
5099  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '|='}
   {5099}
5100  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '<'}
   {5100}
5101  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'int'}
   {5101}
5102  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '/'}
   {5102}
5103  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'continue'}
   {5103}
5104  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '^'}
   {5104}
5105  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'else'}
   {5105}
5106  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'void'}
   {5106}
5107  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '+'}
   {5107}
5108  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '%'}
   {5108}
5109  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '/='}
   {5109}
5110  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '-'}
   {5110}
5111  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '('}
   {5111}
5112  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '>'}
   {5112}
5113  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '+='}
   {5113}
5114  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': 'return'}
   {5114}
5115  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '%='}
   {5115}
5116  {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'point': 4, 'origin': 51, 'isTer': True, 'accept': '<='}
   {5116}
5117  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'number'}
   {5117}
5118  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'if'}
   {5118}
5119  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'float'}
   {5119}
5120  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '{'}
   {5120}
5121  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '*'}
   {5121}
5122  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'double'}
   {5122}
5123  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'identifier'}
   {5123}
5124  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '#'}
   {5124}
5125  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': ','}
   {5125}
5126  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': ')'}
   {5126}
5127  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '-='}
   {5127}
5128  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'for'}
   {5128}
5129  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '>='}
   {5129}
5130  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'break'}
   {5130}
5131  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '^='}
   {5131}
5132  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '='}
   {5132}
5133  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'char'}
   {5133}
5134  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '&='}
   {5134}
5135  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '!='}
   {5135}
5136  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '*='}
   {5136}
5137  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '=='}
   {5137}
5138  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '&'}
   {5138}
5139  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '}'}
   {5139}
5140  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': ';'}
   {5140}
5141  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'while'}
   {5141}
5142  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '|='}
   {5142}
5143  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '<'}
   {5143}
5144  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'int'}
   {5144}
5145  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '/'}
   {5145}
5146  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'continue'}
   {5146}
5147  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '^'}
   {5147}
5148  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'else'}
   {5148}
5149  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'void'}
   {5149}
5150  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '+'}
   {5150}
5151  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '%'}
   {5151}
5152  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '/='}
   {5152}
5153  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '-'}
   {5153}
5154  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '('}
   {5154}
5155  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '>'}
   {5155}
5156  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '+='}
   {5156}
5157  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'return'}
   {5157}
5158  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '%='}
   {5158}
5159  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 0, 'origin': 52, 'isTer': False, 'accept': '<='}
   {5159}
5160  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4386, 4902, 5160, 4394, 4910, 1591, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4472, 4480, 1677, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4558, 4566, 1763, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5161  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4387, 4903, 5161, 4394, 4910, 1592, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4473, 4480, 1678, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4559, 4566, 1764, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5162  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4388, 4904, 5162, 4394, 4910, 1593, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4474, 4480, 1679, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4560, 4566, 1765, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5163  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4389, 4905, 4394, 5163, 4910, 1594, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4475, 4480, 1680, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4561, 4566, 1766, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5164  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4390, 4394, 4906, 5164, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4476, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4562, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5165  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4391, 4394, 4907, 5165, 4910, 1595, 1596, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4477, 4480, 1681, 1682, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4563, 4566, 1767, 1768, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5166  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4392, 4394, 4908, 5166, 4910, 1595, 1597, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4478, 4480, 1681, 1683, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4564, 4566, 1767, 1769, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5167  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4393, 4394, 4909, 4910, 5167, 1595, 1598, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4479, 4480, 1681, 1684, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4565, 4566, 1767, 1770, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5168  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 5168, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5169  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 5169, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5170  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4396, 4910, 4912, 5170, 1595, 1599, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4482, 1681, 1685, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4568, 1767, 1771, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
5171  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4397, 4910, 4913, 5171, 1595, 1599, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4483, 1681, 1685, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4569, 1767, 1771, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
5172  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4398, 4910, 4914, 5172, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4484, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4570, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5173  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4399, 4915, 5173, 1595, 1599, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4485, 1681, 1685, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4571, 1767, 1771, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
5174  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4400, 4916, 5174, 1595, 1599, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4486, 1681, 1685, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4572, 1767, 1771, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
5175  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4401, 4917, 5175, 1595, 1599, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4487, 1681, 1685, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4573, 1767, 1771, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
5176  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4402, 4918, 5176, 1595, 1599, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4488, 1681, 1685, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4574, 1767, 1771, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
5177  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4403, 4919, 5177, 1595, 1599, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4489, 1681, 1685, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4575, 1767, 1771, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
5178  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4404, 4920, 5178, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4490, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4576, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5179  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4405, 4921, 5179, 1595, 1599, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4491, 1681, 1685, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4577, 1767, 1771, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
5180  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4406, 4922, 1595, 5180, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4492, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4578, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5181  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4407, 1595, 4923, 5181, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4493, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4579, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5182  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4408, 1595, 4924, 5182, 1599, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4494, 1681, 1685, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4580, 1767, 1771, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
5183  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4409, 1595, 4925, 5183, 1599, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4495, 1681, 1685, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4581, 1767, 1771, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
5184  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4410, 1595, 4926, 1599, 5184, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4496, 1681, 1685, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4582, 1767, 1771, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
5185  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4411, 1599, 4927, 5185, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4497, 1685, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4583, 1771, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
5186  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4412, 1599, 4928, 5186, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4498, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4584, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5187  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4413, 1599, 4929, 5187, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4499, 1685, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4585, 1771, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
5188  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4414, 1599, 4930, 1603, 5188, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4500, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4586, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5189  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4415, 1603, 4931, 5189, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4501, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4587, 1775, 1781, 1783, 1784, 1789, 1791}
5190  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4416, 1603, 4932, 5190, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4502, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4588, 1775, 1781, 1783, 1784, 1789, 1791}
5191  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4417, 1603, 4933, 5191, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4503, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4589, 1775, 1781, 1783, 1784, 1789, 1791}
5192  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4418, 1603, 4934, 5192, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4504, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4590, 1775, 1781, 1783, 1784, 1789, 1791}
5193  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4419, 4935, 5193, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4505, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4591, 1781, 1783, 1784, 1789, 1791}
5194  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4420, 4936, 1609, 5194, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4506, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4592, 1781, 1783, 1784, 1789, 1791}
5195  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4421, 1609, 4937, 5195, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4507, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
5196  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4422, 1609, 4938, 1611, 5196, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4508, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
5197  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4423, 1609, 1611, 1612, 5197, 4939, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 4480, 1681, 1685, 1689, 4509, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 4566, 1767, 1771, 1775, 4595, 1781, 1783, 1784, 1789, 1791}
5198  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4424, 1609, 1611, 1612, 4940, 5198, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4510, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4596, 1781, 1783, 1784, 1789, 1791}
5199  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 4425, 1611, 1612, 4941, 5199, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 4480, 1681, 1685, 1689, 1695, 4511, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 4566, 1767, 1771, 1775, 1781, 4597, 1783, 1784, 1789, 1791}
5200  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 4426, 1611, 1612, 4942, 5200, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 4480, 1681, 1685, 1689, 1695, 4512, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 4566, 1767, 1771, 1775, 1781, 4598, 1783, 1784, 1789, 1791}
5201  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 4427, 4943, 5201, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 4513, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5202  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 1, 'origin': 52, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 4428, 4944, 1617, 5202, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4600, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 4514, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5203  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'number'}
   {5289, 5203, 5117}
5204  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'if'}
   {5290, 5204, 5118}
5205  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'float'}
   {5291, 5205, 5119}
5206  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '{'}
   {5120, 5292, 5206}
5207  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '*'}
   {5121, 5293, 5207}
5208  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'double'}
   {5208, 5122, 5294}
5209  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'identifier'}
   {5209, 5123, 5295}
5210  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '#'}
   {5296, 5210, 5124}
5211  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': ','}
   {5297, 5211, 5125}
5212  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': ')'}
   {5298, 5212, 5126}
5213  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '-='}
   {5299, 5213, 5127}
5214  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'for'}
   {5128, 5300, 5214}
5215  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '>='}
   {5129, 5301, 5215}
5216  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'break'}
   {5216, 5130, 5302}
5217  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '^='}
   {5217, 5131, 5303}
5218  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '='}
   {5304, 5218, 5132}
5219  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'char'}
   {5305, 5219, 5133}
5220  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '&='}
   {5306, 5220, 5134}
5221  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '!='}
   {5307, 5221, 5135}
5222  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '*='}
   {5136, 5308, 5222}
5223  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '=='}
   {5137, 5309, 5223}
5224  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '&'}
   {5224, 5138, 5310}
5225  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '}'}
   {5225, 5139, 5311}
5226  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': ';'}
   {5312, 5226, 5140}
5227  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'while'}
   {5313, 5227, 5141}
5228  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '|='}
   {5314, 5228, 5142}
5229  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '<'}
   {5315, 5229, 5143}
5230  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'int'}
   {5144, 5316, 5230}
5231  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '/'}
   {5145, 5317, 5231}
5232  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'continue'}
   {5232, 5146, 5318}
5233  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '^'}
   {5233, 5147, 5319}
5234  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'else'}
   {5320, 5234, 5148}
5235  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'void'}
   {5321, 5235, 5149}
5236  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '+'}
   {5322, 5236, 5150}
5237  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '%'}
   {5323, 5237, 5151}
5238  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '/='}
   {5152, 5324, 5238}
5239  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '-'}
   {5153, 5325, 5239}
5240  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '('}
   {5240, 5154, 5326}
5241  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '>'}
   {5241, 5155, 5327}
5242  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '+='}
   {5328, 5242, 5156}
5243  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': 'return'}
   {5329, 5243, 5157}
5244  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '%='}
   {5330, 5244, 5158}
5245  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 2, 'origin': 52, 'isTer': False, 'accept': '<='}
   {5331, 5245, 5159}
5246  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'number'}
   {5246}
5247  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'if'}
   {5247}
5248  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'float'}
   {5248}
5249  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '{'}
   {5249}
5250  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '*'}
   {5250}
5251  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'double'}
   {5251}
5252  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'identifier'}
   {5252}
5253  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '#'}
   {5253}
5254  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': ','}
   {5254}
5255  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': ')'}
   {5255}
5256  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '-='}
   {5256}
5257  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'for'}
   {5257}
5258  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '>='}
   {5258}
5259  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'break'}
   {5259}
5260  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '^='}
   {5260}
5261  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '='}
   {5261}
5262  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'char'}
   {5262}
5263  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '&='}
   {5263}
5264  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '!='}
   {5264}
5265  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '*='}
   {5265}
5266  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '=='}
   {5266}
5267  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '&'}
   {5267}
5268  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '}'}
   {5268}
5269  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': ';'}
   {5269}
5270  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'while'}
   {5270}
5271  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '|='}
   {5271}
5272  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '<'}
   {5272}
5273  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'int'}
   {5273}
5274  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '/'}
   {5274}
5275  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'continue'}
   {5275}
5276  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '^'}
   {5276}
5277  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'else'}
   {5277}
5278  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'void'}
   {5278}
5279  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '+'}
   {5279}
5280  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '%'}
   {5280}
5281  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '/='}
   {5281}
5282  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '-'}
   {5282}
5283  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '('}
   {5283}
5284  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '>'}
   {5284}
5285  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '+='}
   {5285}
5286  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': 'return'}
   {5286}
5287  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '%='}
   {5287}
5288  {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'point': 3, 'origin': 52, 'isTer': True, 'accept': '<='}
   {5288}
5289  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'number'}
   {5289}
5290  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'if'}
   {5290}
5291  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'float'}
   {5291}
5292  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '{'}
   {5292}
5293  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '*'}
   {5293}
5294  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'double'}
   {5294}
5295  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'identifier'}
   {5295}
5296  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '#'}
   {5296}
5297  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': ','}
   {5297}
5298  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': ')'}
   {5298}
5299  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '-='}
   {5299}
5300  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'for'}
   {5300}
5301  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '>='}
   {5301}
5302  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'break'}
   {5302}
5303  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '^='}
   {5303}
5304  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '='}
   {5304}
5305  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'char'}
   {5305}
5306  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '&='}
   {5306}
5307  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '!='}
   {5307}
5308  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '*='}
   {5308}
5309  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '=='}
   {5309}
5310  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '&'}
   {5310}
5311  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '}'}
   {5311}
5312  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': ';'}
   {5312}
5313  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'while'}
   {5313}
5314  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '|='}
   {5314}
5315  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '<'}
   {5315}
5316  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'int'}
   {5316}
5317  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '/'}
   {5317}
5318  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'continue'}
   {5318}
5319  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '^'}
   {5319}
5320  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'else'}
   {5320}
5321  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'void'}
   {5321}
5322  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '+'}
   {5322}
5323  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '%'}
   {5323}
5324  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '/='}
   {5324}
5325  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '-'}
   {5325}
5326  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '('}
   {5326}
5327  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '>'}
   {5327}
5328  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '+='}
   {5328}
5329  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': 'return'}
   {5329}
5330  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '%='}
   {5330}
5331  {'left': 'expression_list_suffix', 'right': [], 'point': 0, 'origin': 53, 'isTer': True, 'accept': '<='}
   {5331}
5332  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4386, 4902, 4394, 4910, 1591, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4472, 4480, 1677, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4558, 5332, 4566, 1763, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5333  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4387, 4903, 4394, 4910, 1592, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4473, 4480, 1678, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4559, 5333, 4566, 1764, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5334  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4388, 4904, 4394, 4910, 1593, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4474, 4480, 1679, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4560, 5334, 4566, 1765, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5335  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4389, 4905, 4394, 4910, 1594, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4475, 4480, 1680, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4561, 4566, 5335, 1766, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5336  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4390, 4394, 4906, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4476, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4562, 4566, 5336, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5337  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4391, 4394, 4907, 4910, 1595, 1596, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4477, 4480, 1681, 1682, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4563, 4566, 5337, 1767, 1768, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5338  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4392, 4394, 4908, 4910, 1595, 1597, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4478, 4480, 1681, 1683, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4564, 4566, 5338, 1767, 1769, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5339  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4393, 4394, 4909, 4910, 1595, 1598, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4479, 4480, 1681, 1684, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4565, 4566, 5339, 1767, 1770, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5340  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 5340, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5341  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4395, 4910, 4911, 1595, 1599, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4481, 1681, 1685, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4567, 5341, 1767, 1771, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
5342  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4396, 4910, 4912, 1595, 1599, 1601, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4482, 1681, 1685, 1687, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4568, 5342, 1767, 1771, 1773, 1775, 1781, 1783, 1784, 1789, 1791}
5343  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4397, 4910, 4913, 1595, 1599, 1602, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4483, 1681, 1685, 1688, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4569, 5343, 1767, 1771, 1774, 1775, 1781, 1783, 1784, 1789, 1791}
5344  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4398, 4910, 4914, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4484, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4570, 5344, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5345  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4399, 4915, 1595, 1599, 1603, 1604, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4485, 1681, 1685, 1689, 1690, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4571, 5345, 1767, 1771, 1775, 1776, 1781, 1783, 1784, 1789, 1791}
5346  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4400, 4916, 1595, 1599, 1603, 1605, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4486, 1681, 1685, 1689, 1691, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4572, 5346, 1767, 1771, 1775, 1777, 1781, 1783, 1784, 1789, 1791}
5347  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4401, 4917, 1595, 1599, 1603, 1606, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4487, 1681, 1685, 1689, 1692, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4573, 5347, 1767, 1771, 1775, 1778, 1781, 1783, 1784, 1789, 1791}
5348  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4402, 4918, 1595, 1599, 1603, 1607, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4488, 1681, 1685, 1689, 1693, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4574, 5348, 1767, 1771, 1775, 1779, 1781, 1783, 1784, 1789, 1791}
5349  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4403, 4919, 1595, 1599, 1603, 1608, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4489, 1681, 1685, 1689, 1694, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4575, 5349, 1767, 1771, 1775, 1780, 1781, 1783, 1784, 1789, 1791}
5350  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4404, 4920, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4490, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4576, 5350, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5351  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4405, 4921, 1595, 1599, 1603, 1609, 1610, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4491, 1681, 1685, 1689, 1695, 1696, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4577, 5351, 1767, 1771, 1775, 1781, 1782, 1783, 1784, 1789, 1791}
5352  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4406, 4922, 1595, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4492, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4578, 1767, 5352, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5353  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4407, 1595, 4923, 1599, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4493, 1681, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4579, 1767, 5353, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5354  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4408, 1595, 4924, 1599, 1603, 1609, 1611, 1612, 1613, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4494, 1681, 1685, 1689, 1695, 1697, 1698, 1699, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4580, 1767, 5354, 1771, 1775, 1781, 1783, 1784, 1785, 1789, 1791}
5355  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4409, 1595, 4925, 1599, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4495, 1681, 1685, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4581, 1767, 5355, 1771, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
5356  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 4410, 1595, 4926, 1599, 1603, 1609, 1611, 1612, 1615, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 4496, 1681, 1685, 1689, 1695, 1697, 1698, 1701, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 4582, 1767, 1771, 5356, 1775, 1781, 1783, 1784, 1787, 1789, 1791}
5357  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4411, 1599, 4927, 1603, 1609, 1611, 1612, 1616, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4497, 1685, 1689, 1695, 1697, 1698, 1702, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4583, 1771, 5357, 1775, 1781, 1783, 1784, 1788, 1789, 1791}
5358  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4412, 1599, 4928, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4498, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4584, 1771, 5358, 1775, 1781, 1783, 1784, 1789, 1791}
5359  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4413, 1599, 4929, 1603, 1609, 1611, 1612, 1617, 1618, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4499, 1685, 1689, 1695, 1697, 1698, 1703, 1704, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4585, 1771, 5359, 1775, 1781, 1783, 1784, 1789, 1790, 1791}
5360  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 4414, 1599, 4930, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 4500, 1685, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 4586, 1771, 1775, 5360, 1781, 1783, 1784, 1789, 1791}
5361  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'continue'}
   {1792, 1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4415, 1603, 4931, 1609, 1611, 1612, 1617, 1619, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4501, 1689, 1695, 1697, 1698, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4587, 1775, 5361, 1781, 1783, 1784, 1789, 1791}
5362  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4416, 1603, 4932, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4502, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4588, 1775, 5362, 1781, 1783, 1784, 1789, 1791}
5363  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'else'}
   {1793, 1794, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4417, 1603, 4933, 1609, 1611, 1612, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4503, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1708, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4589, 1775, 5363, 1781, 1783, 1784, 1789, 1791}
5364  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'void'}
   {1793, 1795, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 4418, 1603, 4934, 1609, 1611, 1612, 1617, 1619, 1621, 1623, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 4504, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1709, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 4590, 1775, 5364, 1781, 1783, 1784, 1789, 1791}
5365  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4419, 4935, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4505, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4591, 5365, 1781, 1783, 1784, 1789, 1791}
5366  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4420, 4936, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4506, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4592, 1781, 5366, 1783, 1784, 1789, 1791}
5367  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1798, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4421, 1609, 4937, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1626, 1627, 1629, 1633, 5367, 4480, 1681, 1685, 1689, 4507, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4593, 1781, 1783, 1784, 1789, 1791}
5368  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4422, 1609, 4938, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 5368, 4480, 1681, 1685, 1689, 4508, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4594, 1781, 1783, 1784, 1789, 1791}
5369  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1800, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4423, 1609, 1611, 1612, 4939, 1617, 1619, 1621, 1624, 1625, 1627, 1628, 1629, 1633, 4480, 1681, 1685, 1689, 4509, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1714, 1715, 1719, 4566, 1767, 1771, 1775, 4595, 1781, 1783, 1784, 5369, 1789, 1791}
5370  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 4424, 1609, 1611, 1612, 4940, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4480, 1681, 1685, 1689, 4510, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 4596, 1781, 1783, 1784, 5370, 1789, 1791}
5371  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1802, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 4425, 1611, 1612, 4941, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1630, 1633, 4480, 1681, 1685, 1689, 1695, 4511, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1716, 1719, 4566, 1767, 1771, 1775, 1781, 4597, 1783, 1784, 5371, 1789, 1791}
5372  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1803, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 4426, 1611, 1612, 4942, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1631, 1633, 4480, 1681, 1685, 1689, 1695, 4512, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1717, 1719, 4566, 1767, 1771, 1775, 1781, 4598, 1783, 1784, 5372, 1789, 1791}
5373  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1804, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 4427, 4943, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1632, 1633, 4599, 4480, 1681, 1685, 1689, 5373, 1695, 1697, 1698, 4513, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1718, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 1791}
5374  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4394, 4910, 1595, 1599, 1603, 1609, 1611, 1612, 4428, 4944, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4600, 4480, 1681, 1685, 1689, 1695, 1697, 1698, 4514, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4566, 1767, 1771, 1775, 1781, 1783, 1784, 1789, 5374, 1791}
5375  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'number'}
   {5289, 5117, 5375}
5376  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'if'}
   {5376, 5290, 5118}
5377  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'float'}
   {5377, 5291, 5119}
5378  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '{'}
   {5120, 5378, 5292}
5379  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '*'}
   {5121, 5379, 5293}
5380  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'double'}
   {5122, 5380, 5294}
5381  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'identifier'}
   {5123, 5381, 5295}
5382  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '#'}
   {5296, 5124, 5382}
5383  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ','}
   {5297, 5125, 5383}
5384  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ')'}
   {5384, 5298, 5126}
5385  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '-='}
   {5385, 5299, 5127}
5386  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'for'}
   {5128, 5386, 5300}
5387  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '>='}
   {5129, 5387, 5301}
5388  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'break'}
   {5130, 5388, 5302}
5389  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '^='}
   {5131, 5389, 5303}
5390  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '='}
   {5304, 5132, 5390}
5391  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'char'}
   {5305, 5133, 5391}
5392  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '&='}
   {5392, 5306, 5134}
5393  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '!='}
   {5393, 5307, 5135}
5394  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '*='}
   {5136, 5394, 5308}
5395  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '=='}
   {5137, 5395, 5309}
5396  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '&'}
   {5138, 5396, 5310}
5397  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '}'}
   {5139, 5397, 5311}
5398  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': ';'}
   {5312, 5140, 5398}
5399  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'while'}
   {5313, 5141, 5399}
5400  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '|='}
   {5400, 5314, 5142}
5401  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '<'}
   {5401, 5315, 5143}
5402  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'int'}
   {5144, 5402, 5316}
5403  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '/'}
   {5145, 5403, 5317}
5404  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'continue'}
   {5146, 5404, 5318}
5405  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '^'}
   {5147, 5405, 5319}
5406  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'else'}
   {5320, 5148, 5406}
5407  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'void'}
   {5321, 5149, 5407}
5408  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '+'}
   {5408, 5322, 5150}
5409  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '%'}
   {5409, 5323, 5151}
5410  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '/='}
   {5152, 5410, 5324}
5411  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '-'}
   {5153, 5411, 5325}
5412  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '('}
   {5154, 5412, 5326}
5413  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '>'}
   {5155, 5413, 5327}
5414  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '+='}
   {5328, 5156, 5414}
5415  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': 'return'}
   {5329, 5157, 5415}
5416  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '%='}
   {5416, 5330, 5158}
5417  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 1, 'origin': 54, 'isTer': False, 'accept': '<='}
   {5417, 5331, 5159}
5418  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'number'}
   {5418}
5419  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'if'}
   {5419}
5420  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'float'}
   {5420}
5421  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '{'}
   {5421}
5422  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '*'}
   {5422}
5423  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'double'}
   {5423}
5424  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'identifier'}
   {5424}
5425  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '#'}
   {5425}
5426  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': ','}
   {5426}
5427  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': ')'}
   {5427}
5428  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '-='}
   {5428}
5429  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'for'}
   {5429}
5430  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '>='}
   {5430}
5431  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'break'}
   {5431}
5432  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '^='}
   {5432}
5433  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '='}
   {5433}
5434  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'char'}
   {5434}
5435  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '&='}
   {5435}
5436  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '!='}
   {5436}
5437  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '*='}
   {5437}
5438  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '=='}
   {5438}
5439  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '&'}
   {5439}
5440  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '}'}
   {5440}
5441  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': ';'}
   {5441}
5442  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'while'}
   {5442}
5443  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '|='}
   {5443}
5444  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '<'}
   {5444}
5445  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'int'}
   {5445}
5446  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '/'}
   {5446}
5447  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'continue'}
   {5447}
5448  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '^'}
   {5448}
5449  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'else'}
   {5449}
5450  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'void'}
   {5450}
5451  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '+'}
   {5451}
5452  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '%'}
   {5452}
5453  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '/='}
   {5453}
5454  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '-'}
   {5454}
5455  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '('}
   {5455}
5456  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '>'}
   {5456}
5457  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '+='}
   {5457}
5458  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': 'return'}
   {5458}
5459  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '%='}
   {5459}
5460  {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'point': 2, 'origin': 54, 'isTer': True, 'accept': '<='}
   {5460}
5461  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'number'}
   {5461}
5462  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'if'}
   {5462}
5463  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'float'}
   {5463}
5464  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '{'}
   {5464}
5465  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '*'}
   {5465}
5466  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'double'}
   {5466}
5467  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'identifier'}
   {5467}
5468  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '#'}
   {5468}
5469  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ','}
   {5469}
5470  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ')'}
   {5470}
5471  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '-='}
   {5471}
5472  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'for'}
   {5472}
5473  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '>='}
   {5473}
5474  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'break'}
   {5474}
5475  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '^='}
   {5475}
5476  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '='}
   {5476}
5477  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'char'}
   {5477}
5478  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '&='}
   {5478}
5479  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '!='}
   {5479}
5480  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '*='}
   {5480}
5481  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '=='}
   {5481}
5482  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '&'}
   {5482}
5483  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '}'}
   {5483}
5484  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': ';'}
   {5484}
5485  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'while'}
   {5485}
5486  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '|='}
   {5486}
5487  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '<'}
   {5487}
5488  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'int'}
   {5488}
5489  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '/'}
   {5489}
5490  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'continue'}
   {5490}
5491  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '^'}
   {5491}
5492  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'else'}
   {5492}
5493  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'void'}
   {5493}
5494  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '+'}
   {5494}
5495  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '%'}
   {5495}
5496  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '/='}
   {5496}
5497  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '-'}
   {5497}
5498  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '('}
   {5498}
5499  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '>'}
   {5499}
5500  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '+='}
   {5500}
5501  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': 'return'}
   {5501}
5502  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '%='}
   {5502}
5503  {'left': 'expression_list', 'right': [], 'point': 0, 'origin': 55, 'isTer': True, 'accept': '<='}
   {5503}
5504  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {5504, 608, 436, 694, 522, 780}
5505  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {608, 5505, 436, 694, 522, 780}
5506  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {608, 5506, 436, 694, 522, 780}
5507  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '{'}
   {608, 5507, 436, 694, 522, 780}
5508  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*'}
   {608, 5508, 436, 694, 522, 780}
5509  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {608, 436, 5509, 694, 522, 780}
5510  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {608, 436, 694, 5510, 522, 780}
5511  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '#'}
   {608, 436, 694, 5511, 522, 780}
5512  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ','}
   {608, 436, 694, 5512, 522, 780}
5513  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ')'}
   {608, 436, 694, 5513, 522, 780}
5514  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-='}
   {608, 522, 436, 694, 5514, 780}
5515  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {608, 436, 694, 522, 5515, 780}
5516  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>='}
   {608, 436, 780, 694, 522, 5516}
5517  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {608, 436, 694, 522, 780, 5517}
5518  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '^='}
   {608, 436, 694, 522, 780, 5518}
5519  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '='}
   {608, 436, 694, 522, 780, 5519}
5520  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {5520, 608, 436, 694, 522, 780}
5521  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '&='}
   {608, 5521, 436, 694, 522, 780}
5522  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '!='}
   {608, 5522, 436, 694, 522, 780}
5523  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*='}
   {608, 5523, 436, 694, 522, 780}
5524  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '=='}
   {608, 5524, 436, 694, 522, 780}
5525  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '&'}
   {608, 436, 5525, 694, 522, 780}
5526  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '}'}
   {608, 436, 694, 5526, 522, 780}
5527  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': ';'}
   {608, 436, 694, 5527, 522, 780}
5528  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {608, 436, 694, 5528, 522, 780}
5529  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '|='}
   {608, 436, 694, 5529, 522, 780}
5530  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<'}
   {608, 522, 436, 694, 5530, 780}
5531  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {608, 436, 694, 522, 5531, 780}
5532  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/'}
   {608, 436, 780, 694, 522, 5532}
5533  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {608, 436, 694, 522, 780, 5533}
5534  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '^'}
   {608, 436, 694, 522, 780, 5534}
5535  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {608, 436, 694, 522, 780, 5535}
5536  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {5536, 608, 436, 694, 522, 780}
5537  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+'}
   {608, 5537, 436, 694, 522, 780}
5538  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '%'}
   {608, 5538, 436, 694, 522, 780}
5539  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/='}
   {608, 5539, 436, 694, 522, 780}
5540  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-'}
   {608, 5540, 436, 694, 522, 780}
5541  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '('}
   {608, 436, 5541, 694, 522, 780}
5542  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>'}
   {608, 436, 694, 5542, 522, 780}
5543  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+='}
   {608, 436, 694, 5543, 522, 780}
5544  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {608, 436, 694, 5544, 522, 780}
5545  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '%='}
   {608, 436, 694, 5545, 522, 780}
5546  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<='}
   {608, 522, 436, 694, 5546, 780}
5547  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {5547}
5548  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {5548}
5549  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {5549}
5550  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '{'}
   {5550}
5551  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '*'}
   {5551}
5552  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {5552}
5553  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {5553}
5554  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '#'}
   {5554}
5555  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': ','}
   {5555}
5556  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': ')'}
   {5556}
5557  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '-='}
   {5557}
5558  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {5558}
5559  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '>='}
   {5559}
5560  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {5560}
5561  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '^='}
   {5561}
5562  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '='}
   {5562}
5563  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {5563}
5564  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '&='}
   {5564}
5565  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '!='}
   {5565}
5566  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '*='}
   {5566}
5567  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '=='}
   {5567}
5568  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '&'}
   {5568}
5569  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '}'}
   {5569}
5570  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': ';'}
   {5570}
5571  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {5571}
5572  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '|='}
   {5572}
5573  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '<'}
   {5573}
5574  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {5574}
5575  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '/'}
   {5575}
5576  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {5576}
5577  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '^'}
   {5577}
5578  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {5578}
5579  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {5579}
5580  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '+'}
   {5580}
5581  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '%'}
   {5581}
5582  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '/='}
   {5582}
5583  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '-'}
   {5583}
5584  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '('}
   {5584}
5585  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '>'}
   {5585}
5586  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '+='}
   {5586}
5587  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {5587}
5588  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '%='}
   {5588}
5589  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 1, 'origin': 56, 'isTer': False, 'accept': '<='}
   {5589}
5590  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {5590}
5591  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {5591}
5592  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {5592}
5593  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '{'}
   {5593}
5594  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '*'}
   {5594}
5595  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {5595}
5596  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {5596}
5597  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '#'}
   {5597}
5598  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': ','}
   {5598}
5599  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': ')'}
   {5599}
5600  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '-='}
   {5600}
5601  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {5601}
5602  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '>='}
   {5602}
5603  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {5603}
5604  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '^='}
   {5604}
5605  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '='}
   {5605}
5606  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {5606}
5607  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '&='}
   {5607}
5608  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '!='}
   {5608}
5609  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '*='}
   {5609}
5610  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '=='}
   {5610}
5611  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '&'}
   {5611}
5612  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '}'}
   {5612}
5613  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': ';'}
   {5613}
5614  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {5614}
5615  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '|='}
   {5615}
5616  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '<'}
   {5616}
5617  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {5617}
5618  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '/'}
   {5618}
5619  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {5619}
5620  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '^'}
   {5620}
5621  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {5621}
5622  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {5622}
5623  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '+'}
   {5623}
5624  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '%'}
   {5624}
5625  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '/='}
   {5625}
5626  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '-'}
   {5626}
5627  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '('}
   {5627}
5628  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '>'}
   {5628}
5629  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '+='}
   {5629}
5630  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {5630}
5631  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '%='}
   {5631}
5632  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 2, 'origin': 56, 'isTer': False, 'accept': '<='}
   {5632}
5633  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {608, 5633, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5634  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {608, 5634, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5635  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {608, 5986, 5635, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5636  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '{'}
   {608, 5986, 6372, 5636, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5637  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '*'}
   {608, 5986, 6372, 5637, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5638  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {608, 5986, 6372, 6373, 5638, 522, 780, 5943, 436, 5814, 694, 6396}
5639  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {608, 5986, 6372, 6373, 5639, 522, 780, 5943, 436, 5814, 694, 6396}
5640  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '#'}
   {608, 5986, 6372, 6373, 5640, 522, 780, 5943, 436, 5814, 694, 6396}
5641  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': ','}
   {608, 5986, 6372, 6373, 5641, 522, 780, 5943, 436, 5814, 694, 6396}
5642  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': ')'}
   {608, 5986, 6372, 6373, 5642, 522, 780, 5943, 436, 5814, 694, 6396}
5643  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '-='}
   {608, 5986, 6372, 6373, 522, 5643, 780, 5943, 436, 5814, 694, 6396}
5644  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {608, 5986, 6372, 6373, 522, 5644, 780, 5943, 436, 5814, 694, 6396}
5645  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '>='}
   {608, 5986, 6372, 6373, 522, 780, 5645, 5943, 436, 5814, 694, 6396}
5646  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5646, 436, 5814, 694, 6396}
5647  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '^='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5647, 436, 5814, 694, 6396}
5648  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5648, 436, 5814, 694, 6396}
5649  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5649, 436, 5814, 694, 6396}
5650  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '&='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5650, 436, 5814, 694, 6396}
5651  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '!='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5651, 436, 5814, 694, 6396}
5652  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '*='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 5652, 436, 5814, 694, 6396}
5653  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '=='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5653, 5814, 694, 6396}
5654  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '&'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 5654, 694, 6396}
5655  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '}'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 5655, 694, 6396}
5656  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': ';'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 5656, 6396}
5657  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 5657, 6396}
5658  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '|='}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 5658, 6396}
5659  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '<'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 5659, 6396}
5660  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 6396, 5814, 694, 5660}
5661  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '/'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396, 5661}
5662  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396, 5662}
5663  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '^'}
   {608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396, 5663}
5664  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {5664, 608, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5665  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {608, 5665, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5666  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '+'}
   {608, 5666, 5986, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5667  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '%'}
   {608, 5986, 5667, 6372, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5668  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '/='}
   {608, 5986, 6372, 5668, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5669  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '-'}
   {608, 5986, 6372, 5669, 6373, 522, 780, 5943, 436, 5814, 694, 6396}
5670  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '('}
   {608, 5986, 6372, 6373, 5670, 522, 780, 5943, 436, 5814, 694, 6396}
5671  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '>'}
   {608, 5986, 6372, 6373, 5671, 522, 780, 5943, 436, 5814, 694, 6396}
5672  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '+='}
   {608, 5986, 6372, 6373, 5672, 522, 780, 5943, 436, 5814, 694, 6396}
5673  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {608, 5986, 6372, 6373, 5673, 522, 780, 5943, 436, 5814, 694, 6396}
5674  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '%='}
   {608, 5986, 6372, 6373, 5674, 522, 780, 5943, 436, 5814, 694, 6396}
5675  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 3, 'origin': 56, 'isTer': False, 'accept': '<='}
   {608, 5986, 6372, 6373, 522, 5675, 780, 5943, 436, 5814, 694, 6396}
5676  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {5676}
5677  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {5677}
5678  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {5678}
5679  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '{'}
   {5679}
5680  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '*'}
   {5680}
5681  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {5681}
5682  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {5682}
5683  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '#'}
   {5683}
5684  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': ','}
   {5684}
5685  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': ')'}
   {5685}
5686  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '-='}
   {5686}
5687  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {5687}
5688  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '>='}
   {5688}
5689  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {5689}
5690  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '^='}
   {5690}
5691  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '='}
   {5691}
5692  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {5692}
5693  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '&='}
   {5693}
5694  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '!='}
   {5694}
5695  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '*='}
   {5695}
5696  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '=='}
   {5696}
5697  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '&'}
   {5697}
5698  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '}'}
   {5698}
5699  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': ';'}
   {5699}
5700  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {5700}
5701  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '|='}
   {5701}
5702  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '<'}
   {5702}
5703  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {5703}
5704  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '/'}
   {5704}
5705  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {5705}
5706  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '^'}
   {5706}
5707  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {5707}
5708  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {5708}
5709  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '+'}
   {5709}
5710  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '%'}
   {5710}
5711  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '/='}
   {5711}
5712  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '-'}
   {5712}
5713  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '('}
   {5713}
5714  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '>'}
   {5714}
5715  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '+='}
   {5715}
5716  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {5716}
5717  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '%='}
   {5717}
5718  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 4, 'origin': 56, 'isTer': False, 'accept': '<='}
   {5718}
5719  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'number'}
   {6493, 5719}
5720  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'if'}
   {5720, 6494}
5721  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'float'}
   {5721, 6495}
5722  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '{'}
   {6496, 5722}
5723  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '*'}
   {6497, 5723}
5724  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'double'}
   {6498, 5724}
5725  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'identifier'}
   {6499, 5725}
5726  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '#'}
   {6500, 5726}
5727  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': ','}
   {6501, 5727}
5728  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': ')'}
   {5728, 6502}
5729  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '-='}
   {5729, 6503}
5730  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'for'}
   {6504, 5730}
5731  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '>='}
   {6505, 5731}
5732  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'break'}
   {6506, 5732}
5733  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '^='}
   {6507, 5733}
5734  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '='}
   {6508, 5734}
5735  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'char'}
   {6509, 5735}
5736  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '&='}
   {5736, 6510}
5737  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '!='}
   {5737, 6511}
5738  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '*='}
   {6512, 5738}
5739  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '=='}
   {6513, 5739}
5740  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '&'}
   {6514, 5740}
5741  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '}'}
   {6515, 5741}
5742  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': ';'}
   {6516, 5742}
5743  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'while'}
   {6517, 5743}
5744  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '|='}
   {5744, 6518}
5745  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '<'}
   {5745, 6519}
5746  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'int'}
   {6520, 5746}
5747  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '/'}
   {6521, 5747}
5748  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'continue'}
   {6522, 5748}
5749  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '^'}
   {6523, 5749}
5750  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'else'}
   {6524, 5750}
5751  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'void'}
   {6525, 5751}
5752  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '+'}
   {5752, 6526}
5753  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '%'}
   {5753, 6527}
5754  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '/='}
   {6528, 5754}
5755  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '-'}
   {6529, 5755}
5756  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '('}
   {6530, 5756}
5757  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '>'}
   {6531, 5757}
5758  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '+='}
   {6532, 5758}
5759  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': 'return'}
   {6533, 5759}
5760  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '%='}
   {5760, 6534}
5761  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 5, 'origin': 56, 'isTer': False, 'accept': '<='}
   {5761, 6535}
5762  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'number'}
   {5762}
5763  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'if'}
   {5763}
5764  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'float'}
   {5764}
5765  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '{'}
   {5765}
5766  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '*'}
   {5766}
5767  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'double'}
   {5767}
5768  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'identifier'}
   {5768}
5769  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '#'}
   {5769}
5770  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': ','}
   {5770}
5771  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': ')'}
   {5771}
5772  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '-='}
   {5772}
5773  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'for'}
   {5773}
5774  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '>='}
   {5774}
5775  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'break'}
   {5775}
5776  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '^='}
   {5776}
5777  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '='}
   {5777}
5778  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'char'}
   {5778}
5779  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '&='}
   {5779}
5780  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '!='}
   {5780}
5781  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '*='}
   {5781}
5782  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '=='}
   {5782}
5783  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '&'}
   {5783}
5784  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '}'}
   {5784}
5785  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': ';'}
   {5785}
5786  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'while'}
   {5786}
5787  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '|='}
   {5787}
5788  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '<'}
   {5788}
5789  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'int'}
   {5789}
5790  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '/'}
   {5790}
5791  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'continue'}
   {5791}
5792  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '^'}
   {5792}
5793  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'else'}
   {5793}
5794  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'void'}
   {5794}
5795  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '+'}
   {5795}
5796  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '%'}
   {5796}
5797  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '/='}
   {5797}
5798  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '-'}
   {5798}
5799  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '('}
   {5799}
5800  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '>'}
   {5800}
5801  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '+='}
   {5801}
5802  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': 'return'}
   {5802}
5803  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '%='}
   {5803}
5804  {'left': 'function_definition', 'right': ['type_specifier', 'identifier', '(', 'function_parameter_list', ')', 'compound_statement'], 'point': 6, 'origin': 56, 'isTer': True, 'accept': '<='}
   {5804}
5805  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'number'}
   {608, 6372, 522, 780, 5805, 436, 6396, 694, 6364}
5806  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'if'}
   {608, 6372, 522, 780, 5806, 436, 694, 6396, 6365}
5807  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'float'}
   {608, 6372, 522, 780, 5807, 436, 694, 6396, 6366}
5808  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '{'}
   {608, 6372, 522, 780, 5808, 436, 694, 6396, 6367}
5809  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*'}
   {6368, 608, 6372, 522, 780, 5809, 436, 694, 6396}
5810  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'double'}
   {608, 6369, 6372, 522, 780, 5810, 436, 694, 6396}
5811  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'identifier'}
   {608, 6370, 6372, 522, 780, 5811, 436, 694, 6396}
5812  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '#'}
   {608, 6371, 6372, 522, 780, 5812, 436, 694, 6396}
5813  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ','}
   {608, 6372, 522, 780, 436, 5813, 694, 6396}
5814  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ')'}
   {608, 6372, 6373, 522, 780, 436, 694, 5814, 6396}
5815  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-='}
   {608, 6372, 6374, 522, 780, 436, 694, 5815, 6396}
5816  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'for'}
   {608, 6372, 6375, 522, 780, 436, 694, 5816, 6396}
5817  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>='}
   {608, 6372, 6376, 522, 780, 436, 694, 5817, 6396}
5818  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'break'}
   {608, 6372, 6377, 522, 780, 436, 694, 5818, 6396}
5819  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '^='}
   {608, 6372, 522, 6378, 780, 436, 694, 5819, 6396}
5820  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '='}
   {608, 6372, 522, 6379, 780, 436, 6396, 694, 5820}
5821  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'char'}
   {608, 6372, 522, 780, 6380, 436, 694, 6396, 5821}
5822  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '&='}
   {608, 6372, 522, 780, 6381, 436, 694, 6396, 5822}
5823  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '!='}
   {608, 6372, 522, 780, 6382, 436, 694, 6396, 5823}
5824  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*='}
   {5824, 608, 6372, 522, 780, 6383, 436, 694, 6396}
5825  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '=='}
   {608, 5825, 6372, 522, 780, 6384, 436, 694, 6396}
5826  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '&'}
   {608, 5826, 6372, 522, 780, 6385, 436, 694, 6396}
5827  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '}'}
   {608, 5827, 6372, 522, 780, 6386, 436, 694, 6396}
5828  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': ';'}
   {608, 6372, 5828, 522, 780, 6387, 436, 694, 6396}
5829  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'while'}
   {608, 6372, 5829, 522, 780, 436, 6388, 694, 6396}
5830  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '|='}
   {608, 6372, 5830, 522, 780, 436, 6389, 694, 6396}
5831  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<'}
   {608, 6372, 5831, 522, 780, 436, 694, 6390, 6396}
5832  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'int'}
   {608, 6372, 5832, 522, 780, 436, 694, 6391, 6396}
5833  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/'}
   {608, 6372, 5833, 522, 780, 436, 694, 6392, 6396}
5834  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'continue'}
   {608, 6372, 5834, 522, 780, 436, 694, 6393, 6396}
5835  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '^'}
   {608, 6372, 522, 5835, 780, 436, 694, 6394, 6396}
5836  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'else'}
   {608, 6372, 522, 5836, 780, 436, 694, 6395, 6396}
5837  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'void'}
   {608, 6372, 522, 780, 5837, 436, 694, 6396}
5838  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+'}
   {608, 6372, 522, 780, 5838, 436, 694, 6396, 6397}
5839  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '%'}
   {608, 6372, 522, 780, 5839, 436, 694, 6396, 6398}
5840  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/='}
   {608, 6372, 522, 780, 5840, 436, 694, 6396, 6399}
5841  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-'}
   {6400, 608, 6372, 522, 780, 5841, 436, 694, 6396}
5842  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '('}
   {608, 6401, 6372, 522, 780, 5842, 436, 694, 6396}
5843  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>'}
   {608, 6402, 6372, 522, 780, 5843, 436, 694, 6396}
5844  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+='}
   {608, 6403, 6372, 522, 780, 5844, 436, 694, 6396}
5845  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'return'}
   {608, 6404, 6372, 522, 780, 436, 5845, 694, 6396}
5846  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '%='}
   {608, 6372, 6405, 522, 780, 436, 694, 5846, 6396}
5847  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<='}
   {608, 6372, 6406, 522, 780, 436, 694, 5847, 6396}
5848  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'number'}
   {5848, 6235, 6278, 6063}
5849  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'if'}
   {6064, 5849, 6236, 6279}
5850  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'float'}
   {6280, 6065, 5850, 6237}
5851  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '{'}
   {6281, 6066, 5851, 6238}
5852  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '*'}
   {6282, 6067, 5852, 6239}
5853  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'double'}
   {6240, 6283, 6068, 5853}
5854  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'identifier'}
   {6241, 6284, 6069, 5854}
5855  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '#'}
   {6242, 6285, 6070, 5855}
5856  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ','}
   {5856, 6243, 6286, 6071}
5857  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ')'}
   {6072, 5857, 6244, 6287}
5858  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '-='}
   {6288, 6073, 5858, 6245}
5859  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'for'}
   {6289, 6074, 5859, 6246}
5860  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '>='}
   {6290, 6075, 5860, 6247}
5861  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'break'}
   {6248, 6291, 6076, 5861}
5862  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '^='}
   {6249, 6292, 6077, 5862}
5863  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '='}
   {6250, 6293, 6078, 5863}
5864  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'char'}
   {5864, 6251, 6294, 6079}
5865  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '&='}
   {6080, 5865, 6252, 6295}
5866  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '!='}
   {6296, 6081, 5866, 6253}
5867  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '*='}
   {6297, 6082, 5867, 6254}
5868  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '=='}
   {6298, 6083, 5868, 6255}
5869  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '&'}
   {6256, 6299, 6084, 5869}
5870  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '}'}
   {6257, 6300, 6085, 5870}
5871  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': ';'}
   {6258, 6301, 6086, 5871}
5872  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'while'}
   {5872, 6259, 6302, 6087}
5873  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '|='}
   {6088, 5873, 6260, 6303}
5874  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '<'}
   {6304, 6089, 5874, 6261}
5875  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'int'}
   {6305, 6090, 5875, 6262}
5876  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '/'}
   {6306, 6091, 5876, 6263}
5877  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'continue'}
   {6264, 6307, 6092, 5877}
5878  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '^'}
   {6265, 6308, 6093, 5878}
5879  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'else'}
   {6266, 6309, 6094, 5879}
5880  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'void'}
   {5880, 6267, 6310, 6095}
5881  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '+'}
   {6096, 5881, 6268, 6311}
5882  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '%'}
   {6312, 6097, 5882, 6269}
5883  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '/='}
   {6313, 6098, 5883, 6270}
5884  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '-'}
   {6314, 6099, 5884, 6271}
5885  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '('}
   {6272, 6315, 6100, 5885}
5886  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '>'}
   {6273, 6316, 6101, 5886}
5887  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '+='}
   {6274, 6317, 6102, 5887}
5888  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': 'return'}
   {5888, 6275, 6318, 6103}
5889  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '%='}
   {6104, 5889, 6276, 6319}
5890  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 57, 'isTer': False, 'accept': '<='}
   {6320, 6105, 5890, 6277}
5891  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'number'}
   {5891}
5892  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'if'}
   {5892}
5893  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'float'}
   {5893}
5894  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '{'}
   {5894}
5895  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '*'}
   {5895}
5896  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'double'}
   {5896}
5897  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'identifier'}
   {5897}
5898  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '#'}
   {5898}
5899  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ','}
   {5899}
5900  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ')'}
   {5900}
5901  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '-='}
   {5901}
5902  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'for'}
   {5902}
5903  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '>='}
   {5903}
5904  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'break'}
   {5904}
5905  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '^='}
   {5905}
5906  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '='}
   {5906}
5907  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'char'}
   {5907}
5908  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '&='}
   {5908}
5909  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '!='}
   {5909}
5910  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '*='}
   {5910}
5911  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '=='}
   {5911}
5912  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '&'}
   {5912}
5913  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '}'}
   {5913}
5914  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': ';'}
   {5914}
5915  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'while'}
   {5915}
5916  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '|='}
   {5916}
5917  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '<'}
   {5917}
5918  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'int'}
   {5918}
5919  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '/'}
   {5919}
5920  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'continue'}
   {5920}
5921  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '^'}
   {5921}
5922  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'else'}
   {5922}
5923  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'void'}
   {5923}
5924  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '+'}
   {5924}
5925  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '%'}
   {5925}
5926  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '/='}
   {5926}
5927  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '-'}
   {5927}
5928  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '('}
   {5928}
5929  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '>'}
   {5929}
5930  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '+='}
   {5930}
5931  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': 'return'}
   {5931}
5932  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '%='}
   {5932}
5933  {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 57, 'isTer': True, 'accept': '<='}
   {5933}
5934  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'number'}
   {5934}
5935  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'if'}
   {5935}
5936  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'float'}
   {5936}
5937  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '{'}
   {5937}
5938  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '*'}
   {5938}
5939  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'double'}
   {5939}
5940  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'identifier'}
   {5940}
5941  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '#'}
   {5941}
5942  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': ','}
   {5942}
5943  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': ')'}
   {5943}
5944  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '-='}
   {5944}
5945  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'for'}
   {5945}
5946  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '>='}
   {5946}
5947  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'break'}
   {5947}
5948  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '^='}
   {5948}
5949  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '='}
   {5949}
5950  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'char'}
   {5950}
5951  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '&='}
   {5951}
5952  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '!='}
   {5952}
5953  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '*='}
   {5953}
5954  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '=='}
   {5954}
5955  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '&'}
   {5955}
5956  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '}'}
   {5956}
5957  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': ';'}
   {5957}
5958  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'while'}
   {5958}
5959  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '|='}
   {5959}
5960  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '<'}
   {5960}
5961  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'int'}
   {5961}
5962  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '/'}
   {5962}
5963  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'continue'}
   {5963}
5964  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '^'}
   {5964}
5965  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'else'}
   {5965}
5966  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'void'}
   {5966}
5967  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '+'}
   {5967}
5968  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '%'}
   {5968}
5969  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '/='}
   {5969}
5970  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '-'}
   {5970}
5971  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '('}
   {5971}
5972  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '>'}
   {5972}
5973  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '+='}
   {5973}
5974  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': 'return'}
   {5974}
5975  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '%='}
   {5975}
5976  {'left': 'function_parameter_list', 'right': [], 'point': 0, 'origin': 58, 'isTer': True, 'accept': '<='}
   {5976}
5977  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'number'}
   {5977}
5978  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'if'}
   {5978}
5979  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'float'}
   {5979}
5980  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '{'}
   {5980}
5981  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*'}
   {5981}
5982  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'double'}
   {5982}
5983  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'identifier'}
   {5983}
5984  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '#'}
   {5984}
5985  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ','}
   {5985}
5986  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ')'}
   {5986}
5987  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-='}
   {5987}
5988  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'for'}
   {5988}
5989  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>='}
   {5989}
5990  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'break'}
   {5990}
5991  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '^='}
   {5991}
5992  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '='}
   {5992}
5993  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'char'}
   {5993}
5994  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '&='}
   {5994}
5995  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '!='}
   {5995}
5996  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*='}
   {5996}
5997  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '=='}
   {5997}
5998  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '&'}
   {5998}
5999  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '}'}
   {5999}
6000  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': ';'}
   {6000}
6001  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'while'}
   {6001}
6002  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '|='}
   {6002}
6003  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<'}
   {6003}
6004  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'int'}
   {6004}
6005  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/'}
   {6005}
6006  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'continue'}
   {6006}
6007  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '^'}
   {6007}
6008  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'else'}
   {6008}
6009  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'void'}
   {6009}
6010  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+'}
   {6010}
6011  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '%'}
   {6011}
6012  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/='}
   {6012}
6013  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-'}
   {6013}
6014  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '('}
   {6014}
6015  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>'}
   {6015}
6016  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+='}
   {6016}
6017  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'return'}
   {6017}
6018  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '%='}
   {6018}
6019  {'left': 'function_parameter_list', 'right': ['void'], 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<='}
   {6019}
6020  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'number'}
   {6020}
6021  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'if'}
   {6021}
6022  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'float'}
   {6022}
6023  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '{'}
   {6023}
6024  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '*'}
   {6024}
6025  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'double'}
   {6025}
6026  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'identifier'}
   {6026}
6027  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '#'}
   {6027}
6028  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': ','}
   {6028}
6029  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': ')'}
   {6029}
6030  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '-='}
   {6030}
6031  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'for'}
   {6031}
6032  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '>='}
   {6032}
6033  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'break'}
   {6033}
6034  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '^='}
   {6034}
6035  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '='}
   {6035}
6036  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'char'}
   {6036}
6037  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '&='}
   {6037}
6038  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '!='}
   {6038}
6039  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '*='}
   {6039}
6040  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '=='}
   {6040}
6041  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '&'}
   {6041}
6042  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '}'}
   {6042}
6043  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': ';'}
   {6043}
6044  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'while'}
   {6044}
6045  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '|='}
   {6045}
6046  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '<'}
   {6046}
6047  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'int'}
   {6047}
6048  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '/'}
   {6048}
6049  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'continue'}
   {6049}
6050  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '^'}
   {6050}
6051  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'else'}
   {6051}
6052  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'void'}
   {6052}
6053  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '+'}
   {6053}
6054  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '%'}
   {6054}
6055  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '/='}
   {6055}
6056  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '-'}
   {6056}
6057  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '('}
   {6057}
6058  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '>'}
   {6058}
6059  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '+='}
   {6059}
6060  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'return'}
   {6060}
6061  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '%='}
   {6061}
6062  {'left': 'function_parameter_list', 'right': ['void'], 'point': 1, 'origin': 59, 'isTer': True, 'accept': '<='}
   {6062}
6063  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'number'}
   {6063}
6064  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'if'}
   {6064}
6065  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'float'}
   {6065}
6066  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '{'}
   {6066}
6067  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '*'}
   {6067}
6068  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'double'}
   {6068}
6069  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'identifier'}
   {6069}
6070  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '#'}
   {6070}
6071  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': ','}
   {6071}
6072  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': ')'}
   {6072}
6073  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '-='}
   {6073}
6074  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'for'}
   {6074}
6075  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '>='}
   {6075}
6076  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'break'}
   {6076}
6077  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '^='}
   {6077}
6078  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '='}
   {6078}
6079  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'char'}
   {6079}
6080  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '&='}
   {6080}
6081  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '!='}
   {6081}
6082  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '*='}
   {6082}
6083  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '=='}
   {6083}
6084  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '&'}
   {6084}
6085  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '}'}
   {6085}
6086  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': ';'}
   {6086}
6087  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'while'}
   {6087}
6088  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '|='}
   {6088}
6089  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '<'}
   {6089}
6090  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'int'}
   {6090}
6091  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '/'}
   {6091}
6092  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'continue'}
   {6092}
6093  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '^'}
   {6093}
6094  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'else'}
   {6094}
6095  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'void'}
   {6095}
6096  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '+'}
   {6096}
6097  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '%'}
   {6097}
6098  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '/='}
   {6098}
6099  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '-'}
   {6099}
6100  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '('}
   {6100}
6101  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '>'}
   {6101}
6102  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '+='}
   {6102}
6103  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'return'}
   {6103}
6104  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '%='}
   {6104}
6105  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 0, 'origin': 60, 'isTer': False, 'accept': '<='}
   {6105}
6106  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'number'}
   {608, 6372, 522, 780, 436, 6396, 694, 6106, 6364}
6107  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'if'}
   {608, 6372, 522, 780, 436, 694, 6107, 6396, 6365}
6108  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'float'}
   {608, 6372, 522, 780, 436, 6396, 694, 6108, 6366}
6109  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '{'}
   {608, 6372, 522, 780, 436, 694, 6396, 6109, 6367}
6110  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '*'}
   {6368, 608, 6372, 522, 780, 436, 694, 6396, 6110}
6111  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'double'}
   {608, 6369, 6372, 522, 780, 436, 694, 6396, 6111}
6112  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'identifier'}
   {6112, 608, 6370, 6372, 522, 780, 436, 694, 6396}
6113  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '#'}
   {608, 6113, 6371, 6372, 522, 780, 436, 694, 6396}
6114  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': ','}
   {608, 6114, 6372, 522, 780, 436, 694, 6396}
6115  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': ')'}
   {608, 6115, 6372, 6373, 522, 780, 436, 694, 6396}
6116  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '-='}
   {608, 6372, 6116, 6374, 522, 780, 436, 694, 6396}
6117  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'for'}
   {608, 6372, 6117, 6375, 522, 780, 436, 694, 6396}
6118  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '>='}
   {608, 6372, 6118, 6376, 522, 780, 436, 694, 6396}
6119  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'break'}
   {608, 6372, 6119, 6377, 522, 780, 436, 694, 6396}
6120  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '^='}
   {608, 6372, 6120, 522, 6378, 780, 436, 694, 6396}
6121  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '='}
   {608, 6372, 6121, 522, 6379, 780, 436, 694, 6396}
6122  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'char'}
   {608, 6372, 6122, 522, 780, 6380, 436, 694, 6396}
6123  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '&='}
   {608, 6372, 522, 6123, 780, 6381, 436, 694, 6396}
6124  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '!='}
   {608, 6372, 522, 6124, 780, 6382, 436, 694, 6396}
6125  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '*='}
   {608, 6372, 522, 780, 6125, 6383, 436, 694, 6396}
6126  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '=='}
   {608, 6372, 522, 780, 6126, 6384, 436, 694, 6396}
6127  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '&'}
   {608, 6372, 522, 780, 6127, 6385, 436, 694, 6396}
6128  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '}'}
   {608, 6372, 522, 780, 6128, 6386, 436, 694, 6396}
6129  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': ';'}
   {608, 6372, 522, 780, 6129, 6387, 436, 694, 6396}
6130  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'while'}
   {608, 6372, 522, 780, 6130, 436, 6388, 694, 6396}
6131  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '|='}
   {608, 6372, 522, 780, 6131, 436, 6389, 694, 6396}
6132  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '<'}
   {608, 6372, 522, 780, 6132, 436, 694, 6390, 6396}
6133  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'int'}
   {608, 6372, 522, 780, 436, 6133, 694, 6391, 6396}
6134  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '/'}
   {608, 6372, 522, 780, 436, 694, 6134, 6392, 6396}
6135  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'continue'}
   {608, 6372, 522, 780, 436, 694, 6135, 6393, 6396}
6136  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '^'}
   {608, 6372, 522, 780, 436, 694, 6136, 6394, 6396}
6137  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'else'}
   {608, 6372, 522, 780, 436, 694, 6137, 6395, 6396}
6138  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'void'}
   {608, 6372, 522, 780, 436, 694, 6138, 6396}
6139  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '+'}
   {608, 6372, 522, 780, 436, 694, 6139, 6396, 6397}
6140  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '%'}
   {608, 6372, 522, 780, 436, 6396, 694, 6140, 6398}
6141  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '/='}
   {608, 6372, 522, 780, 436, 694, 6396, 6141, 6399}
6142  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '-'}
   {6400, 608, 6372, 522, 780, 436, 694, 6396, 6142}
6143  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '('}
   {608, 6401, 6372, 522, 780, 436, 694, 6396, 6143}
6144  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '>'}
   {6144, 608, 6402, 6372, 522, 780, 436, 694, 6396}
6145  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '+='}
   {608, 6145, 6403, 6372, 522, 780, 436, 694, 6396}
6146  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'return'}
   {608, 6146, 6404, 6372, 522, 780, 436, 694, 6396}
6147  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '%='}
   {608, 6147, 6372, 6405, 522, 780, 436, 694, 6396}
6148  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 1, 'origin': 60, 'isTer': False, 'accept': '<='}
   {608, 6148, 6372, 6406, 522, 780, 436, 694, 6396}
6149  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'number'}
   {6149, 6278, 6235, 6063}
6150  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'if'}
   {6064, 6150, 6279, 6236}
6151  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'float'}
   {6065, 6151, 6280, 6237}
6152  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '{'}
   {6066, 6152, 6281, 6238}
6153  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '*'}
   {6067, 6153, 6282, 6239}
6154  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'double'}
   {6240, 6068, 6154, 6283}
6155  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'identifier'}
   {6241, 6069, 6155, 6284}
6156  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '#'}
   {6242, 6070, 6156, 6285}
6157  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': ','}
   {6243, 6071, 6157, 6286}
6158  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': ')'}
   {6244, 6072, 6158, 6287}
6159  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '-='}
   {6288, 6245, 6073, 6159}
6160  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'for'}
   {6160, 6289, 6246, 6074}
6161  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '>='}
   {6161, 6290, 6247, 6075}
6162  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'break'}
   {6162, 6291, 6248, 6076}
6163  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '^='}
   {6163, 6292, 6249, 6077}
6164  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '='}
   {6164, 6293, 6250, 6078}
6165  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'char'}
   {6165, 6294, 6251, 6079}
6166  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '&='}
   {6080, 6166, 6295, 6252}
6167  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '!='}
   {6081, 6167, 6296, 6253}
6168  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '*='}
   {6082, 6168, 6297, 6254}
6169  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '=='}
   {6083, 6169, 6298, 6255}
6170  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '&'}
   {6256, 6084, 6170, 6299}
6171  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '}'}
   {6257, 6085, 6171, 6300}
6172  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': ';'}
   {6258, 6086, 6172, 6301}
6173  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'while'}
   {6259, 6087, 6173, 6302}
6174  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '|='}
   {6260, 6088, 6174, 6303}
6175  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '<'}
   {6304, 6261, 6089, 6175}
6176  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'int'}
   {6176, 6305, 6262, 6090}
6177  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '/'}
   {6177, 6306, 6263, 6091}
6178  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'continue'}
   {6178, 6307, 6264, 6092}
6179  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '^'}
   {6179, 6308, 6265, 6093}
6180  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'else'}
   {6180, 6309, 6266, 6094}
6181  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'void'}
   {6181, 6310, 6267, 6095}
6182  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '+'}
   {6096, 6182, 6311, 6268}
6183  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '%'}
   {6097, 6183, 6312, 6269}
6184  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '/='}
   {6098, 6184, 6313, 6270}
6185  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '-'}
   {6099, 6185, 6314, 6271}
6186  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '('}
   {6272, 6100, 6186, 6315}
6187  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '>'}
   {6273, 6101, 6187, 6316}
6188  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '+='}
   {6274, 6102, 6188, 6317}
6189  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'return'}
   {6275, 6103, 6189, 6318}
6190  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '%='}
   {6276, 6104, 6190, 6319}
6191  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 2, 'origin': 60, 'isTer': False, 'accept': '<='}
   {6320, 6277, 6105, 6191}
6192  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'number'}
   {6192}
6193  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'if'}
   {6193}
6194  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'float'}
   {6194}
6195  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '{'}
   {6195}
6196  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '*'}
   {6196}
6197  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'double'}
   {6197}
6198  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'identifier'}
   {6198}
6199  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '#'}
   {6199}
6200  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': ','}
   {6200}
6201  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': ')'}
   {6201}
6202  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '-='}
   {6202}
6203  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'for'}
   {6203}
6204  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '>='}
   {6204}
6205  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'break'}
   {6205}
6206  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '^='}
   {6206}
6207  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '='}
   {6207}
6208  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'char'}
   {6208}
6209  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '&='}
   {6209}
6210  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '!='}
   {6210}
6211  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '*='}
   {6211}
6212  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '=='}
   {6212}
6213  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '&'}
   {6213}
6214  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '}'}
   {6214}
6215  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': ';'}
   {6215}
6216  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'while'}
   {6216}
6217  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '|='}
   {6217}
6218  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '<'}
   {6218}
6219  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'int'}
   {6219}
6220  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '/'}
   {6220}
6221  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'continue'}
   {6221}
6222  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '^'}
   {6222}
6223  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'else'}
   {6223}
6224  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'void'}
   {6224}
6225  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '+'}
   {6225}
6226  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '%'}
   {6226}
6227  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '/='}
   {6227}
6228  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '-'}
   {6228}
6229  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '('}
   {6229}
6230  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '>'}
   {6230}
6231  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '+='}
   {6231}
6232  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': 'return'}
   {6232}
6233  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '%='}
   {6233}
6234  {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'point': 3, 'origin': 60, 'isTer': True, 'accept': '<='}
   {6234}
6235  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'number'}
   {6235}
6236  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'if'}
   {6236}
6237  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'float'}
   {6237}
6238  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '{'}
   {6238}
6239  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '*'}
   {6239}
6240  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'double'}
   {6240}
6241  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'identifier'}
   {6241}
6242  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '#'}
   {6242}
6243  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': ','}
   {6243}
6244  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': ')'}
   {6244}
6245  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '-='}
   {6245}
6246  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'for'}
   {6246}
6247  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '>='}
   {6247}
6248  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'break'}
   {6248}
6249  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '^='}
   {6249}
6250  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '='}
   {6250}
6251  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'char'}
   {6251}
6252  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '&='}
   {6252}
6253  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '!='}
   {6253}
6254  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '*='}
   {6254}
6255  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '=='}
   {6255}
6256  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '&'}
   {6256}
6257  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '}'}
   {6257}
6258  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': ';'}
   {6258}
6259  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'while'}
   {6259}
6260  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '|='}
   {6260}
6261  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '<'}
   {6261}
6262  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'int'}
   {6262}
6263  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '/'}
   {6263}
6264  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'continue'}
   {6264}
6265  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '^'}
   {6265}
6266  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'else'}
   {6266}
6267  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'void'}
   {6267}
6268  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '+'}
   {6268}
6269  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '%'}
   {6269}
6270  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '/='}
   {6270}
6271  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '-'}
   {6271}
6272  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '('}
   {6272}
6273  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '>'}
   {6273}
6274  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '+='}
   {6274}
6275  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'return'}
   {6275}
6276  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '%='}
   {6276}
6277  {'left': 'function_parameter_list_suffix', 'right': [], 'point': 0, 'origin': 61, 'isTer': True, 'accept': '<='}
   {6277}
6278  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'number'}
   {6278}
6279  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'if'}
   {6279}
6280  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'float'}
   {6280}
6281  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '{'}
   {6281}
6282  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*'}
   {6282}
6283  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'double'}
   {6283}
6284  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'identifier'}
   {6284}
6285  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '#'}
   {6285}
6286  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ','}
   {6286}
6287  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ')'}
   {6287}
6288  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-='}
   {6288}
6289  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'for'}
   {6289}
6290  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>='}
   {6290}
6291  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'break'}
   {6291}
6292  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '^='}
   {6292}
6293  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '='}
   {6293}
6294  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'char'}
   {6294}
6295  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '&='}
   {6295}
6296  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '!='}
   {6296}
6297  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*='}
   {6297}
6298  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '=='}
   {6298}
6299  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '&'}
   {6299}
6300  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '}'}
   {6300}
6301  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': ';'}
   {6301}
6302  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'while'}
   {6302}
6303  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '|='}
   {6303}
6304  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<'}
   {6304}
6305  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'int'}
   {6305}
6306  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/'}
   {6306}
6307  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'continue'}
   {6307}
6308  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '^'}
   {6308}
6309  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'else'}
   {6309}
6310  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'void'}
   {6310}
6311  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+'}
   {6311}
6312  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '%'}
   {6312}
6313  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/='}
   {6313}
6314  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-'}
   {6314}
6315  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '('}
   {6315}
6316  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>'}
   {6316}
6317  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+='}
   {6317}
6318  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'return'}
   {6318}
6319  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '%='}
   {6319}
6320  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<='}
   {6320}
6321  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'number'}
   {6321}
6322  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'if'}
   {6322}
6323  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'float'}
   {6323}
6324  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '{'}
   {6324}
6325  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '*'}
   {6325}
6326  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'double'}
   {6326}
6327  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'identifier'}
   {6327}
6328  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '#'}
   {6328}
6329  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ','}
   {6329}
6330  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ')'}
   {6330}
6331  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '-='}
   {6331}
6332  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'for'}
   {6332}
6333  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '>='}
   {6333}
6334  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'break'}
   {6334}
6335  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '^='}
   {6335}
6336  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '='}
   {6336}
6337  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'char'}
   {6337}
6338  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '&='}
   {6338}
6339  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '!='}
   {6339}
6340  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '*='}
   {6340}
6341  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '=='}
   {6341}
6342  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '&'}
   {6342}
6343  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '}'}
   {6343}
6344  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': ';'}
   {6344}
6345  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'while'}
   {6345}
6346  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '|='}
   {6346}
6347  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '<'}
   {6347}
6348  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'int'}
   {6348}
6349  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '/'}
   {6349}
6350  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'continue'}
   {6350}
6351  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '^'}
   {6351}
6352  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'else'}
   {6352}
6353  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'void'}
   {6353}
6354  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '+'}
   {6354}
6355  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '%'}
   {6355}
6356  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '/='}
   {6356}
6357  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '-'}
   {6357}
6358  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '('}
   {6358}
6359  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '>'}
   {6359}
6360  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '+='}
   {6360}
6361  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': 'return'}
   {6361}
6362  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '%='}
   {6362}
6363  {'left': 'function_parameter_list_suffix', 'right': ['void'], 'point': 1, 'origin': 62, 'isTer': True, 'accept': '<='}
   {6363}
6364  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'number'}
   {608, 6364, 436, 694, 522, 780}
6365  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'if'}
   {608, 436, 694, 522, 780, 6365}
6366  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'float'}
   {608, 436, 694, 522, 780, 6366}
6367  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '{'}
   {608, 436, 694, 522, 780, 6367}
6368  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '*'}
   {608, 6368, 436, 694, 522, 780}
6369  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'double'}
   {608, 6369, 436, 694, 522, 780}
6370  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'identifier'}
   {608, 6370, 436, 694, 522, 780}
6371  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '#'}
   {608, 6371, 436, 694, 522, 780}
6372  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ','}
   {608, 436, 6372, 694, 522, 780}
6373  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ')'}
   {608, 436, 6373, 694, 522, 780}
6374  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '-='}
   {608, 436, 694, 6374, 522, 780}
6375  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'for'}
   {608, 436, 694, 6375, 522, 780}
6376  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '>='}
   {608, 436, 694, 6376, 522, 780}
6377  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'break'}
   {608, 436, 694, 6377, 522, 780}
6378  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '^='}
   {608, 522, 436, 694, 6378, 780}
6379  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '='}
   {608, 436, 694, 522, 6379, 780}
6380  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'char'}
   {608, 436, 780, 694, 522, 6380}
6381  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '&='}
   {608, 436, 694, 522, 780, 6381}
6382  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '!='}
   {608, 436, 694, 522, 780, 6382}
6383  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '*='}
   {608, 436, 694, 522, 780, 6383}
6384  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '=='}
   {6384, 608, 436, 694, 522, 780}
6385  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '&'}
   {608, 6385, 436, 694, 522, 780}
6386  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '}'}
   {608, 6386, 436, 694, 522, 780}
6387  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': ';'}
   {608, 6387, 436, 694, 522, 780}
6388  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'while'}
   {608, 6388, 436, 694, 522, 780}
6389  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '|='}
   {608, 436, 6389, 694, 522, 780}
6390  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '<'}
   {608, 436, 694, 6390, 522, 780}
6391  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'int'}
   {608, 436, 694, 6391, 522, 780}
6392  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '/'}
   {608, 436, 694, 6392, 522, 780}
6393  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'continue'}
   {608, 436, 694, 6393, 522, 780}
6394  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '^'}
   {608, 522, 436, 694, 6394, 780}
6395  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'else'}
   {608, 436, 694, 522, 6395, 780}
6396  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'void'}
   {608, 436, 780, 694, 522, 6396}
6397  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '+'}
   {608, 436, 694, 522, 780, 6397}
6398  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '%'}
   {608, 436, 694, 522, 780, 6398}
6399  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '/='}
   {608, 436, 694, 522, 780, 6399}
6400  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '-'}
   {608, 6400, 436, 694, 522, 780}
6401  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '('}
   {608, 6401, 436, 694, 522, 780}
6402  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '>'}
   {608, 6402, 436, 694, 522, 780}
6403  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '+='}
   {608, 6403, 436, 694, 522, 780}
6404  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': 'return'}
   {608, 436, 6404, 694, 522, 780}
6405  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '%='}
   {608, 436, 6405, 694, 522, 780}
6406  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 0, 'origin': 63, 'isTer': False, 'accept': '<='}
   {608, 436, 694, 6406, 522, 780}
6407  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'number'}
   {6407}
6408  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'if'}
   {6408}
6409  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'float'}
   {6409}
6410  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '{'}
   {6410}
6411  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '*'}
   {6411}
6412  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'double'}
   {6412}
6413  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'identifier'}
   {6413}
6414  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '#'}
   {6414}
6415  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': ','}
   {6415}
6416  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': ')'}
   {6416}
6417  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '-='}
   {6417}
6418  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'for'}
   {6418}
6419  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '>='}
   {6419}
6420  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'break'}
   {6420}
6421  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '^='}
   {6421}
6422  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '='}
   {6422}
6423  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'char'}
   {6423}
6424  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '&='}
   {6424}
6425  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '!='}
   {6425}
6426  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '*='}
   {6426}
6427  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '=='}
   {6427}
6428  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '&'}
   {6428}
6429  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '}'}
   {6429}
6430  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': ';'}
   {6430}
6431  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'while'}
   {6431}
6432  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '|='}
   {6432}
6433  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '<'}
   {6433}
6434  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'int'}
   {6434}
6435  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '/'}
   {6435}
6436  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'continue'}
   {6436}
6437  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '^'}
   {6437}
6438  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'else'}
   {6438}
6439  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'void'}
   {6439}
6440  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '+'}
   {6440}
6441  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '%'}
   {6441}
6442  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '/='}
   {6442}
6443  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '-'}
   {6443}
6444  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '('}
   {6444}
6445  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '>'}
   {6445}
6446  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '+='}
   {6446}
6447  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': 'return'}
   {6447}
6448  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '%='}
   {6448}
6449  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 1, 'origin': 63, 'isTer': False, 'accept': '<='}
   {6449}
6450  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'number'}
   {6450}
6451  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'if'}
   {6451}
6452  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'float'}
   {6452}
6453  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '{'}
   {6453}
6454  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '*'}
   {6454}
6455  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'double'}
   {6455}
6456  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'identifier'}
   {6456}
6457  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '#'}
   {6457}
6458  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': ','}
   {6458}
6459  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': ')'}
   {6459}
6460  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '-='}
   {6460}
6461  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'for'}
   {6461}
6462  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '>='}
   {6462}
6463  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'break'}
   {6463}
6464  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '^='}
   {6464}
6465  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '='}
   {6465}
6466  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'char'}
   {6466}
6467  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '&='}
   {6467}
6468  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '!='}
   {6468}
6469  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '*='}
   {6469}
6470  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '=='}
   {6470}
6471  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '&'}
   {6471}
6472  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '}'}
   {6472}
6473  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': ';'}
   {6473}
6474  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'while'}
   {6474}
6475  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '|='}
   {6475}
6476  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '<'}
   {6476}
6477  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'int'}
   {6477}
6478  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '/'}
   {6478}
6479  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'continue'}
   {6479}
6480  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '^'}
   {6480}
6481  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'else'}
   {6481}
6482  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'void'}
   {6482}
6483  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '+'}
   {6483}
6484  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '%'}
   {6484}
6485  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '/='}
   {6485}
6486  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '-'}
   {6486}
6487  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '('}
   {6487}
6488  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '>'}
   {6488}
6489  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '+='}
   {6489}
6490  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': 'return'}
   {6490}
6491  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '%='}
   {6491}
6492  {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'point': 2, 'origin': 63, 'isTer': True, 'accept': '<='}
   {6492}
6493  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'number'}
   {6493}
6494  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'if'}
   {6494}
6495  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'float'}
   {6495}
6496  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '{'}
   {6496}
6497  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*'}
   {6497}
6498  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'double'}
   {6498}
6499  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'identifier'}
   {6499}
6500  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '#'}
   {6500}
6501  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ','}
   {6501}
6502  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ')'}
   {6502}
6503  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-='}
   {6503}
6504  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'for'}
   {6504}
6505  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>='}
   {6505}
6506  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'break'}
   {6506}
6507  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '^='}
   {6507}
6508  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '='}
   {6508}
6509  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'char'}
   {6509}
6510  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '&='}
   {6510}
6511  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '!='}
   {6511}
6512  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*='}
   {6512}
6513  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '=='}
   {6513}
6514  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '&'}
   {6514}
6515  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '}'}
   {6515}
6516  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': ';'}
   {6516}
6517  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'while'}
   {6517}
6518  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '|='}
   {6518}
6519  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<'}
   {6519}
6520  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'int'}
   {6520}
6521  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/'}
   {6521}
6522  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'continue'}
   {6522}
6523  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '^'}
   {6523}
6524  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'else'}
   {6524}
6525  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'void'}
   {6525}
6526  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+'}
   {6526}
6527  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '%'}
   {6527}
6528  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/='}
   {6528}
6529  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-'}
   {6529}
6530  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '('}
   {6530}
6531  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>'}
   {6531}
6532  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+='}
   {6532}
6533  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'return'}
   {6533}
6534  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '%='}
   {6534}
6535  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<='}
   {6535}
6536  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'number'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6536, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6537  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'if'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6537, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6538  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'float'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6538, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6539  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '{'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6539, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6540  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '*'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6540, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6541  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'double'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6541, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6542  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'identifier'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6542, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6543  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '#'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6543, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6544  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': ','}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6544, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6545  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': ')'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6545, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6546  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '-='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6546, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6547  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'for'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6547, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6548  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '>='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6548, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6549  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'break'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6549, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6550  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '^='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6550, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6551  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6551, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6552  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'char'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6552, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6553  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '&='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6553, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6554  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '!='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6554, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6555  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '*='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6555, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6556  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '=='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6556, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6557  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '&'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6557, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6558  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '}'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6558, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6559  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': ';'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6559, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6560  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'while'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6560, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6561  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '|='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6561, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6562  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '<'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6562, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6563  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'int'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6563, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6564  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '/'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6564, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6565  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'continue'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6565, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6566  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '^'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6566, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6567  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'else'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6567, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6568  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'void'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6568, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6569  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '+'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6569, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6570  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '%'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6570, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6571  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '/='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6571, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6572  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '-'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6572, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6573  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '('}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6573, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6574  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '>'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6574, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6575  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '+='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6575, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6576  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': 'return'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6576, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6577  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '%='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6577, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6578  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 1, 'origin': 64, 'isTer': False, 'accept': '<='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 6578, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6579  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'number'}
   {6579}
6580  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'if'}
   {6580}
6581  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'float'}
   {6581}
6582  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '{'}
   {6582}
6583  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '*'}
   {6583}
6584  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'double'}
   {6584}
6585  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'identifier'}
   {6585}
6586  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '#'}
   {6586}
6587  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': ','}
   {6587}
6588  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': ')'}
   {6588}
6589  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '-='}
   {6589}
6590  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'for'}
   {6590}
6591  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '>='}
   {6591}
6592  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'break'}
   {6592}
6593  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '^='}
   {6593}
6594  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '='}
   {6594}
6595  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'char'}
   {6595}
6596  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '&='}
   {6596}
6597  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '!='}
   {6597}
6598  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '*='}
   {6598}
6599  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '=='}
   {6599}
6600  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '&'}
   {6600}
6601  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '}'}
   {6601}
6602  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': ';'}
   {6602}
6603  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'while'}
   {6603}
6604  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '|='}
   {6604}
6605  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '<'}
   {6605}
6606  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'int'}
   {6606}
6607  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '/'}
   {6607}
6608  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'continue'}
   {6608}
6609  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '^'}
   {6609}
6610  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'else'}
   {6610}
6611  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'void'}
   {6611}
6612  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '+'}
   {6612}
6613  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '%'}
   {6613}
6614  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '/='}
   {6614}
6615  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '-'}
   {6615}
6616  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '('}
   {6616}
6617  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '>'}
   {6617}
6618  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '+='}
   {6618}
6619  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': 'return'}
   {6619}
6620  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '%='}
   {6620}
6621  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 2, 'origin': 64, 'isTer': False, 'accept': '<='}
   {6621}
6622  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'number'}
   {6622}
6623  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'if'}
   {6623}
6624  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'float'}
   {6624}
6625  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '{'}
   {6625}
6626  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '*'}
   {6626}
6627  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'double'}
   {6627}
6628  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'identifier'}
   {6628}
6629  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '#'}
   {6629}
6630  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': ','}
   {6630}
6631  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': ')'}
   {6631}
6632  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '-='}
   {6632}
6633  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'for'}
   {6633}
6634  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '>='}
   {6634}
6635  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'break'}
   {6635}
6636  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '^='}
   {6636}
6637  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '='}
   {6637}
6638  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'char'}
   {6638}
6639  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '&='}
   {6639}
6640  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '!='}
   {6640}
6641  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '*='}
   {6641}
6642  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '=='}
   {6642}
6643  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '&'}
   {6643}
6644  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '}'}
   {6644}
6645  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': ';'}
   {6645}
6646  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'while'}
   {6646}
6647  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '|='}
   {6647}
6648  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '<'}
   {6648}
6649  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'int'}
   {6649}
6650  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '/'}
   {6650}
6651  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'continue'}
   {6651}
6652  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '^'}
   {6652}
6653  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'else'}
   {6653}
6654  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'void'}
   {6654}
6655  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '+'}
   {6655}
6656  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '%'}
   {6656}
6657  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '/='}
   {6657}
6658  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '-'}
   {6658}
6659  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '('}
   {6659}
6660  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '>'}
   {6660}
6661  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '+='}
   {6661}
6662  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': 'return'}
   {6662}
6663  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '%='}
   {6663}
6664  {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'point': 3, 'origin': 64, 'isTer': True, 'accept': '<='}
   {6664}
6665  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'number'}
   {7022, 7124, 6665, 522, 7181, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7740, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7267, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 6837, 694, 6838, 6839, 7353, 7354, 7355, 6840, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 7364, 6853, 7366, 8385, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 8401, 7385, 8408, 8409, 8412, 6877, 8414, 7393, 8417, 7912, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 863, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 6923, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7482, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 860, 6493, 6494, 6495, 6496, 865, 866, 6498, 6499, 861, 862, 871, 6504, 873, 6506, 7522, 876, 6509, 8041, 8042, 8043, 8044, 8046, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 7101, 8081, 7106, 7108, 436, 7095, 7096, 7097, 7098, 7611, 7612, 7613, 7614, 7100, 7616, 7617, 7009, 8643, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6666  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'if'}
   {7022, 7124, 6666, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6667  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'float'}
   {7022, 7124, 522, 6667, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6668  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '{'}
   {7022, 7124, 522, 6668, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6669  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*'}
   {7022, 7124, 522, 6669, 7182, 7183, 7184, 7185, 7186, 7187, 7025, 7127, 7192, 7194, 7197, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7744, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7271, 7272, 7273, 7780, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6841, 7357, 6842, 7358, 6843, 7359, 6848, 7364, 6850, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8389, 8390, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 7916, 7917, 7918, 8391, 8425, 7923, 7925, 863, 7928, 3835, 864, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6927, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7486, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6497, 6498, 6499, 862, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8045, 8046, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7106, 7108, 436, 7096, 7097, 7098, 7099, 7612, 7613, 7614, 7615, 7616, 7617, 7100, 7101, 8644, 8645, 7622, 7010, 7624, 8646, 8647, 7627, 7011, 8648, 8649, 8654, 7012, 8656, 7634, 7635, 8659, 7013, 7638, 7118, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7119, 8683, 7020}
6670  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'double'}
   {7022, 7124, 522, 6670, 7183, 7182, 7184, 7186, 7187, 7025, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6671  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'identifier'}
   {7022, 7124, 522, 7182, 7183, 6671, 7184, 7186, 7187, 7025, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6672  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '#'}
   {7022, 7124, 522, 7182, 7183, 6672, 7184, 7186, 7187, 7188, 7025, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 8048, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7747, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7274, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6844, 7360, 6848, 7364, 6850, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7919, 8392, 862, 7923, 7925, 863, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6930, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7489, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 867, 6498, 6499, 6500, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7102, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7618, 7101, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8650, 8654, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 7016, 8675, 8683, 7020}
6673  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ','}
   {7022, 7124, 522, 7182, 7183, 7184, 6673, 7186, 7187, 7025, 7189, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 8049, 7221, 7741, 7742, 7743, 7745, 7746, 7748, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7275, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6845, 7361, 6848, 7364, 6850, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7920, 862, 7923, 8393, 7925, 863, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 6931, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7490, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 868, 6499, 6501, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7103, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7619, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8651, 8654, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7017, 8683, 7020}
6674  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ')'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 6674, 7186, 7187, 7127, 7190, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 8052, 7745, 7746, 7749, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7276, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6846, 7362, 6848, 7364, 6850, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 862, 7921, 7923, 7925, 863, 7928, 8394, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6932, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7491, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 869, 6502, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8050, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7104, 7620, 8644, 7622, 7010, 7624, 8645, 8646, 7627, 7011, 8648, 8649, 8652, 7012, 8654, 7634, 7635, 8656, 8659, 7638, 7118, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7119, 8683, 7018, 7020}
6675  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 6675, 7187, 7127, 7191, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 8052, 7745, 7746, 7750, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7277, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6847, 6848, 7363, 7364, 6850, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7922, 7923, 7925, 863, 7928, 3835, 8395, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6933, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7492, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 870, 871, 6503, 873, 6504, 6506, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8051, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7105, 8644, 7621, 7622, 7010, 7624, 8645, 8646, 7627, 7011, 8648, 8649, 8653, 7012, 8654, 7634, 7635, 8656, 8659, 7638, 7522, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7019, 7020}
6676  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'for'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 6676, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6677  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 6677, 7192, 7193, 7194, 7197, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7752, 7753, 7036, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7279, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6849, 6850, 7364, 7365, 7366, 6853, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7924, 7925, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 8397, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6935, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7494, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 872, 873, 6504, 6505, 876, 6506, 6509, 8042, 8043, 8044, 8046, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8053, 8054, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7107, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7623, 7624, 7010, 8646, 7627, 7011, 8648, 8649, 8654, 7012, 8655, 7634, 7635, 8656, 8659, 7638, 7522, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7020, 7021}
6678  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'break'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 6678, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6679  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '^='}
   {7022, 7124, 7023, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 6679, 7192, 7194, 7195, 7197, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7754, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7281, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 6851, 7364, 6853, 7366, 7367, 8386, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 8399, 7385, 7111, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7926, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6937, 6939, 8401, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7496, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 874, 6506, 876, 6507, 6509, 8042, 8043, 8044, 8046, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8055, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7109, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 7625, 8646, 7627, 7011, 8648, 8649, 8654, 7012, 8656, 7634, 7635, 8657, 8659, 7638, 7522, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7020}
6680  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '='}
   {7022, 7124, 522, 7024, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 6680, 7192, 7194, 7196, 7197, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7755, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7282, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6852, 7366, 6853, 7368, 7369, 8387, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 8400, 7385, 7111, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7927, 7928, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6938, 6939, 8401, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7497, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 875, 876, 6508, 6509, 8042, 8043, 8044, 8046, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8056, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7110, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 7626, 7627, 7011, 8648, 8649, 8654, 7012, 8656, 7634, 7635, 8658, 8659, 7638, 7522, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7020}
6681  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'char'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 6681, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6682  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '&='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7026, 7192, 7194, 6682, 7197, 7198, 8046, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7757, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7284, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 6854, 8387, 7369, 7370, 8388, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8402, 8408, 6877, 8409, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 7112, 7917, 7918, 8425, 7923, 7925, 7928, 7929, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6940, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7499, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 877, 6509, 6510, 8042, 8043, 8044, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 8058, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7628, 7011, 8649, 8654, 7012, 8656, 7634, 7635, 8659, 8660, 7638, 7118, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7119, 8683, 7020}
6683  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '!='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 6683, 7027, 7197, 7199, 8046, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7758, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7285, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 6855, 8387, 7369, 8388, 7371, 6860, 6861, 8390, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8403, 8408, 6877, 8409, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 7930, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6941, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7500, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 878, 6511, 8042, 8043, 8044, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 8059, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 7629, 8649, 8654, 7012, 8656, 7634, 7635, 8659, 7113, 7638, 8661, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7020}
6684  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 6684, 7197, 7200, 7028, 8046, 7204, 7205, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7759, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7286, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 6856, 7369, 8388, 8390, 7372, 6860, 6861, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8404, 8408, 6877, 8409, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 7931, 3835, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6942, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7501, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 879, 6512, 8043, 8044, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 8060, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 7630, 8654, 7012, 8656, 7634, 7635, 8659, 7114, 7638, 8662, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7118, 7119, 8683, 7020}
6685  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '=='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6685, 7201, 8046, 7204, 7205, 7029, 8047, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7760, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7287, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 6857, 8390, 6860, 7373, 6861, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 7111, 7385, 8401, 8405, 8408, 6877, 8409, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7932, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6943, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7502, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 880, 6513, 8044, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 8061, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7631, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7115, 7640, 8663, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7122}
6686  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '&'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6686, 7202, 8046, 7204, 7205, 8047, 7208, 7210, 7030, 7213, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7761, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7288, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 6858, 8390, 6860, 6861, 7374, 8391, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 8401, 7385, 8406, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7933, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6944, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7503, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 881, 6514, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 8062, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7632, 7012, 7634, 7635, 8656, 8659, 7638, 7118, 7640, 8664, 7014, 7643, 7116, 8666, 8667, 7015, 8670, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7122}
6687  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '}'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6687, 7203, 7204, 7205, 8047, 7208, 7210, 7213, 7032, 7221, 7033, 7741, 7742, 7743, 8052, 7745, 7746, 7751, 7036, 7753, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 6859, 6860, 6861, 8391, 7375, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8398, 8401, 7385, 8407, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 8396, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 882, 883, 6515, 6516, 6517, 887, 6520, 889, 6522, 884, 892, 6525, 8054, 8057, 7031, 8063, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 7633, 7634, 7635, 8656, 8659, 7638, 7118, 7640, 8665, 7014, 7643, 8666, 8667, 8670, 7015, 7117, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7122}
6688  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': ';'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6688, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6689  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'while'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6689, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6690  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '|='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6690, 7204, 7205, 7206, 7208, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 8052, 7745, 7746, 7034, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7765, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7292, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 6862, 8396, 7376, 7377, 7378, 6864, 7380, 6866, 7382, 6869, 8401, 7385, 8408, 8409, 8410, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7937, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 8398, 6934, 6936, 6939, 6946, 6947, 6948, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7507, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 6518, 887, 6520, 889, 6522, 884, 892, 6525, 885, 8054, 8057, 7032, 8064, 8065, 900, 6533, 8066, 8068, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 7636, 8659, 7638, 7118, 7640, 7120, 7014, 7643, 8666, 8667, 8668, 7015, 8670, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7122}
6691  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6691, 7204, 7205, 7207, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 8052, 7745, 7746, 7035, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7766, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7293, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 6863, 7376, 7377, 6864, 7379, 7380, 6866, 7382, 6869, 8401, 7385, 8408, 8409, 8411, 6877, 8412, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 863, 7928, 3835, 7935, 7936, 7938, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 8398, 6934, 6936, 6939, 6946, 6947, 6949, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7508, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 884, 862, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 886, 887, 6519, 889, 6520, 6522, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8067, 8068, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7637, 7638, 7118, 7640, 7121, 7014, 7643, 8666, 8667, 8669, 7015, 8670, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7122}
6692  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'int'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 6692, 7204, 7205, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6693  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 6693, 7205, 7208, 7209, 7210, 7213, 7221, 7033, 7741, 7742, 7743, 8052, 7745, 7746, 7751, 7036, 7753, 7756, 7037, 7038, 7763, 7764, 7767, 7768, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7295, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6865, 7380, 7381, 6866, 7382, 6869, 7385, 8401, 8408, 8409, 6877, 8412, 8413, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7940, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6951, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7510, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 888, 889, 6520, 6521, 892, 6522, 6525, 8054, 8057, 7032, 8064, 8065, 900, 6533, 8068, 8069, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7639, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8671, 8672, 7135, 7651, 8675, 7119, 8683, 7020, 7123}
6694  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'continue'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 6694, 7208, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6695  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '^'}
   {7022, 7124, 7125, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 6695, 7208, 7210, 7211, 7213, 7221, 7033, 7741, 7742, 7743, 8052, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7039, 7769, 7770, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7297, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6867, 7382, 7383, 6869, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 8415, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7942, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6953, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7512, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 890, 6522, 6523, 892, 6525, 8054, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 8071, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7641, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 8673, 7135, 7651, 8675, 8683, 7020, 7122}
6696  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'else'}
   {7022, 7124, 522, 7126, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 6696, 7208, 7210, 7212, 7213, 7221, 7033, 7741, 7742, 7743, 8052, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7771, 7772, 608, 7041, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7298, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6868, 7382, 6869, 7384, 7385, 8401, 8408, 8409, 6877, 8412, 8414, 8416, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7943, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6954, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7513, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 891, 892, 6524, 6525, 8054, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7040, 8072, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7642, 7643, 7014, 8666, 8667, 7015, 8670, 8672, 8674, 7651, 8675, 7135, 8683, 7020}
6697  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'void'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 6697, 7210, 7213, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6698  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7128, 7192, 7194, 7197, 7204, 7205, 7208, 6698, 7210, 7213, 7214, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 8054, 7756, 7763, 7764, 7767, 7769, 7772, 7773, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7300, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 6870, 8401, 7385, 7386, 8408, 8409, 6877, 8412, 8414, 7393, 8417, 8418, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 7945, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6956, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 7515, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 893, 6525, 6526, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7042, 8074, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 7644, 8666, 8667, 7015, 8670, 8672, 7135, 7651, 8675, 8676, 8683, 7020}
6699  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '%'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 6699, 7213, 7215, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 8054, 7756, 7763, 7764, 7767, 7769, 7772, 7774, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7301, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 6871, 8401, 7385, 8408, 7387, 8409, 6877, 8412, 8414, 7393, 8417, 8419, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 7946, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6957, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 7516, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 894, 6527, 8057, 7032, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7043, 8075, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 7645, 8667, 7015, 8670, 8672, 7129, 7651, 8675, 8677, 7135, 8683, 7020}
6700  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 6700, 7213, 7216, 7032, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 7775, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7302, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 6872, 7385, 8408, 8409, 7388, 6877, 8412, 8414, 7393, 8417, 8420, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 7947, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6958, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 895, 6528, 8057, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7044, 8076, 7049, 8081, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7517, 7616, 7617, 7100, 7101, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 7646, 7015, 8670, 8672, 7130, 7651, 8675, 7135, 8678, 8683, 7020}
6701  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 6701, 7213, 7217, 7032, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7776, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7303, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 6873, 8409, 8412, 7389, 6877, 8414, 7393, 8417, 8421, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7948, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6959, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 896, 6529, 8064, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7045, 7049, 8077, 8081, 7106, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7518, 7101, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7647, 7015, 8672, 7131, 7651, 8675, 7135, 8679, 8683, 7020}
6702  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '('}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6702, 7218, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7767, 7769, 7772, 608, 7777, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7304, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 7111, 8401, 7385, 6874, 8408, 8409, 6877, 7390, 8412, 8414, 7393, 8417, 8422, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7949, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6960, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 897, 6530, 8064, 900, 6533, 8065, 8068, 8070, 7041, 8073, 7046, 7049, 8078, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7519, 7624, 7010, 8646, 7627, 7011, 8648, 8649, 8654, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 7648, 8672, 7132, 7651, 8675, 7135, 8680, 8683, 7020}
6703  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6703, 7219, 7221, 7033, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7767, 7769, 7772, 608, 7778, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7305, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 7111, 8401, 7385, 8408, 6875, 8409, 6877, 8412, 7391, 8414, 7393, 8417, 8423, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7950, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6961, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 898, 6531, 900, 6533, 8065, 8068, 8070, 7041, 8073, 7047, 7049, 8079, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7520, 7011, 8649, 8654, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7649, 7133, 7651, 8675, 7135, 8681, 8683, 7020}
6704  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6704, 7220, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7767, 7769, 7772, 608, 7779, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7306, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 6876, 6877, 8412, 8414, 7392, 7393, 8417, 8424, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7951, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6962, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 899, 6532, 6533, 900, 8065, 8068, 8070, 7041, 8073, 7048, 7049, 8080, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 7521, 7634, 7635, 8656, 8659, 7638, 7118, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7134, 7650, 7651, 8675, 7135, 7119, 8682, 8683, 7020}
6705  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'return'}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6705, 7221, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 7393, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 8068, 7038, 8070, 7041, 8073, 7049, 8081, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 8672, 7135, 7651, 8675, 8683, 7020}
6706  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '%='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6706, 7221, 7222, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7781, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 7308, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 6878, 8414, 7393, 7394, 8417, 7913, 7914, 7915, 8425, 7917, 7918, 8426, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 7953, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 6964, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 6534, 901, 8068, 8070, 7041, 8073, 7049, 7050, 8081, 8082, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 7523, 8666, 8667, 7015, 8670, 8672, 7135, 7651, 7652, 8675, 7136, 8683, 8684, 7020}
6707  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<='}
   {7022, 7124, 522, 7182, 7183, 7184, 7025, 7186, 7187, 7127, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 6707, 7221, 7223, 7741, 7742, 7743, 7745, 7746, 7751, 7036, 7753, 7756, 7038, 7763, 7764, 7767, 7769, 7772, 608, 7268, 7269, 7270, 7780, 7272, 7273, 7782, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 7309, 4237, 694, 6838, 6839, 6840, 7354, 7355, 7356, 6842, 7358, 6843, 7359, 6848, 6850, 8386, 7364, 6853, 7366, 8387, 8388, 7369, 8390, 8391, 6860, 6861, 8396, 8398, 7376, 7377, 6864, 6866, 7380, 6869, 7382, 8401, 8408, 7385, 8409, 8412, 6877, 8414, 6879, 7393, 8417, 7395, 7913, 7914, 7915, 8425, 7917, 7918, 8427, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 4366, 6925, 6926, 6928, 6929, 7952, 7954, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 6965, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 861, 6494, 6495, 6496, 865, 866, 6498, 6499, 862, 863, 871, 6504, 873, 6506, 7522, 876, 6509, 8042, 8043, 8044, 8046, 8047, 883, 6516, 6517, 884, 887, 6520, 889, 6522, 8052, 892, 6525, 8054, 8057, 7032, 8064, 7033, 8065, 900, 6533, 902, 6535, 8068, 8070, 7041, 8073, 7049, 7051, 8081, 8083, 7108, 436, 7096, 7097, 7098, 7612, 7613, 7614, 7100, 7616, 7617, 7101, 7106, 8644, 8645, 7622, 7010, 7624, 8646, 8648, 7627, 7011, 8649, 8654, 7111, 7012, 8656, 7634, 7635, 8659, 7118, 7638, 7119, 7640, 7122, 7014, 7643, 8666, 8667, 8670, 7015, 7524, 8672, 7135, 7651, 8675, 7653, 7137, 8683, 8685, 7020}
6708  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'number'}
   {7181, 7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7267, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7353, 7354, 7355, 7356, 7358, 7359, 8385, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7482, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6493, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7611, 7612, 7613, 7614, 7616, 7617, 8643, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 8683, 7020, 6665, 522, 6708, 7740, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6794, 6837, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7912, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 6923, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 860, 861, 862, 863, 865, 866, 7009, 7010, 7011, 7012, 871, 7014, 873, 8041, 8042, 876, 8043, 7022, 8047, 8044, 7025, 8046, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7095, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6709  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'if'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 6666, 522, 6709, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6795, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6710  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'float'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6667, 6710, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6796, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6711  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '{'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6668, 6711, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6797, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6712  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '*'}
   {7182, 7183, 7184, 7185, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7271, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7357, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8389, 8390, 7369, 8391, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7486, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6497, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7615, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8647, 8648, 7627, 8649, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 8683, 7020, 522, 6669, 6712, 7741, 7742, 7743, 7744, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6798, 694, 6838, 6839, 6840, 6841, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7916, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6927, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 864, 865, 866, 7010, 7011, 7012, 7013, 871, 7014, 873, 8042, 8043, 876, 8044, 7022, 8047, 8045, 7025, 8046, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7099, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6713  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'double'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6670, 6713, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6799, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6714  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'identifier'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6671, 6714, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6800, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6715  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '#'}
   {7182, 7183, 7184, 7186, 7187, 7188, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7274, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 7360, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8392, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7489, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 6500, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 7618, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8650, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 7016, 8675, 8683, 7020, 522, 6672, 6715, 7741, 7742, 7743, 7745, 7746, 7747, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6801, 694, 6838, 6839, 6840, 6842, 6843, 6844, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7919, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 6930, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 867, 7010, 7011, 7012, 871, 7014, 873, 8042, 8043, 876, 8044, 7022, 8046, 8048, 7025, 8047, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7102, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6716  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': ','}
   {7182, 7183, 7184, 7186, 7187, 7189, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7275, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 7361, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8393, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7490, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6501, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 7619, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8651, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 7017, 8683, 7020, 522, 6673, 6716, 7741, 7742, 7743, 7745, 7746, 7748, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6802, 694, 6838, 6839, 6840, 6842, 6843, 6845, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7920, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6931, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 868, 7011, 7012, 871, 7014, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 8049, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7103, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6717  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': ')'}
   {7182, 7183, 7184, 7186, 7187, 7190, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7276, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 7362, 8386, 7364, 8387, 7366, 8388, 8390, 7369, 8391, 8394, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7491, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6502, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 7620, 8644, 7622, 8645, 7624, 8646, 8648, 7627, 8649, 8652, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 8683, 7018, 7020, 522, 6674, 6717, 7741, 7742, 7743, 7745, 7746, 7749, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6803, 694, 6838, 6839, 6840, 6842, 6843, 6846, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7921, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6932, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 869, 7012, 871, 7014, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 8050, 883, 8052, 884, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7104, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6718  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '-='}
   {7182, 7183, 7184, 7186, 7187, 7191, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7277, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 7363, 7364, 8387, 7366, 8388, 8390, 7369, 8391, 8395, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7492, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6503, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 7621, 7622, 8645, 7624, 8646, 8648, 7627, 8649, 8653, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 8683, 7020, 522, 6675, 7741, 6718, 7742, 7743, 7745, 7746, 7750, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6804, 694, 6838, 6839, 6840, 6842, 6843, 6847, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7922, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6933, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 870, 871, 7014, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7019, 883, 8052, 884, 8051, 887, 8054, 889, 8057, 7032, 7036, 892, 7033, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7105, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6719  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'for'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6676, 7741, 7742, 6719, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6805, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6720  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '>='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7193, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7279, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 7365, 7366, 8388, 8390, 7369, 8391, 8396, 8397, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7494, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6505, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 7623, 7624, 8646, 8648, 7627, 8649, 8654, 8655, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7015, 8672, 7651, 8675, 8683, 7021, 522, 6677, 7741, 7742, 7743, 6720, 7745, 7746, 7751, 7752, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6806, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6849, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7924, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6935, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 872, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 7020, 883, 884, 8052, 8053, 887, 8054, 7033, 889, 8057, 7036, 892, 7032, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7107, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6721  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'break'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6678, 7741, 7742, 7743, 6721, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6807, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6722  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '^='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7195, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7281, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 7367, 8390, 7369, 8391, 8396, 8398, 8399, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7496, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6507, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 7625, 8648, 7627, 8649, 8654, 8656, 8657, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6679, 7741, 7742, 7743, 7745, 6722, 7746, 7751, 7753, 7754, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6808, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6851, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7926, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6937, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 874, 8042, 876, 8043, 7022, 7023, 8047, 7025, 8044, 8046, 883, 884, 8052, 887, 8054, 7033, 889, 8055, 7036, 892, 8057, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7109, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6723  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7196, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7282, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 7368, 7369, 8391, 8396, 8398, 7376, 7377, 8400, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7497, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6508, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 7626, 7627, 8649, 8654, 8656, 7634, 7635, 8658, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6680, 7741, 7742, 7743, 7745, 7746, 6723, 7751, 7753, 7755, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6809, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6852, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7927, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6938, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 875, 876, 8043, 7022, 8047, 7024, 7025, 8044, 8046, 883, 884, 8052, 887, 8054, 7033, 889, 8056, 7036, 892, 8057, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7110, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6724  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'char'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6681, 7741, 7742, 7743, 7745, 7746, 6724, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6810, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6725  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '&='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7198, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7284, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 7370, 8396, 8398, 7376, 7377, 8401, 8402, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7499, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6510, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 7628, 8654, 8656, 7634, 7635, 8659, 8660, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6682, 7741, 7742, 7743, 7745, 7746, 6725, 7751, 7753, 7756, 7757, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6811, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6854, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 7929, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6940, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 877, 7022, 8046, 8047, 7025, 7026, 8044, 883, 884, 8052, 887, 8054, 7033, 889, 8057, 7036, 892, 8058, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7112, 7118, 7119, 7122, 7124, 7127, 7135}
6726  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '!='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7199, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7285, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 7371, 8396, 8398, 7376, 7377, 8401, 8403, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7500, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6511, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 7629, 8654, 8656, 7634, 7635, 8659, 8661, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6683, 7741, 7742, 7743, 7745, 7746, 6726, 7751, 7753, 7756, 7758, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6812, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6855, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 7930, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6941, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 878, 7027, 883, 884, 8052, 887, 8054, 7033, 889, 8057, 7036, 892, 8059, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7113, 7118, 7119, 7122, 7124, 7127, 7135}
6727  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '*='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7200, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7286, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 7372, 8396, 8398, 7376, 7377, 8401, 7380, 8404, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7501, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6512, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 7630, 8654, 8656, 7634, 7635, 8659, 7638, 8662, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6684, 7741, 7742, 7743, 7745, 7746, 6727, 7751, 7753, 7756, 7759, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6813, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6856, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7931, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6942, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 879, 883, 7028, 884, 8052, 887, 8054, 7033, 889, 8057, 7036, 892, 8060, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7114, 7118, 7119, 7122, 7124, 7127, 7135}
6728  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '=='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7201, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7287, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 7373, 8398, 7376, 7377, 8401, 7380, 8405, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7502, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6513, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 7631, 8656, 7634, 7635, 8659, 7638, 8663, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6685, 7741, 7742, 7743, 7745, 7746, 7751, 6728, 7753, 7756, 7760, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6814, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6857, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7932, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6943, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 880, 883, 884, 7029, 8052, 887, 8054, 7033, 889, 8057, 7036, 892, 8061, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7115, 7118, 7119, 7122, 7124, 7127, 7135}
6729  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '&'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7202, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7288, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 7374, 8398, 7376, 7377, 8401, 7380, 7382, 8406, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7503, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6514, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 7632, 8656, 7634, 7635, 8659, 7638, 7640, 8664, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6686, 7741, 7742, 7743, 7745, 7746, 7751, 6729, 7753, 7756, 7761, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6815, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6858, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7933, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6944, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 881, 883, 884, 8052, 7030, 887, 8054, 7033, 889, 8057, 7036, 892, 8062, 7032, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7116, 7118, 7119, 7122, 7124, 7127, 7135}
6730  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '}'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7203, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7289, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7375, 7376, 7377, 8401, 7380, 7382, 8407, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7504, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6515, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7633, 7634, 7635, 8659, 7638, 7640, 8665, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 7020, 522, 6687, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 6730, 7756, 7762, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6816, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6859, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7934, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6945, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8047, 8046, 7025, 882, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7031, 8063, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7117, 7118, 7119, 7122, 7124, 7127, 7135}
6731  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': ';'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6688, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 6731, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6817, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6732  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'while'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6689, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 6732, 7756, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6818, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6733  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '|='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7206, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7292, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 7378, 8401, 7380, 7382, 8408, 7385, 8409, 8410, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7507, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6518, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 7636, 8659, 7638, 7640, 8666, 7643, 8667, 8668, 8670, 8672, 7651, 8675, 8683, 522, 6690, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6733, 7763, 7764, 7765, 7767, 7769, 7772, 608, 7780, 6819, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6862, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7937, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6948, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 8052, 884, 885, 887, 8054, 7033, 7034, 889, 7036, 892, 7038, 8057, 7032, 8064, 8065, 8066, 900, 8068, 8070, 7041, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7120, 7122, 7124, 7127, 7135}
6734  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '<'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7207, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7293, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7379, 7380, 7382, 8408, 7385, 8409, 8411, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7508, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6519, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7637, 7638, 7640, 8666, 7643, 8667, 8669, 8670, 8672, 7651, 8675, 8683, 522, 6691, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6734, 7763, 7764, 7766, 7767, 7769, 7772, 608, 7780, 6820, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6863, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7938, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6949, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 8052, 884, 886, 887, 8054, 7033, 889, 7035, 7036, 892, 7038, 8057, 7032, 8064, 8065, 8067, 900, 8068, 8070, 7041, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7121, 7122, 7124, 7127, 7135}
6735  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'int'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6692, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6735, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6821, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6736  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '/'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7209, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7295, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7381, 7382, 8408, 7385, 8409, 8412, 8413, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7510, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6521, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7639, 7640, 8666, 7643, 8667, 8670, 8671, 8672, 7651, 8675, 8683, 522, 6693, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6736, 7763, 7764, 7767, 7768, 7769, 7772, 608, 7780, 6822, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6865, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7940, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6951, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 8052, 884, 8054, 887, 888, 7033, 889, 8057, 7036, 7037, 7038, 892, 7032, 8064, 8065, 7041, 900, 8068, 8069, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7123, 7124, 7127, 7135}
6737  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'continue'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6694, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6737, 7763, 7764, 7767, 7769, 7772, 608, 7780, 6823, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6738  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '^'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7211, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7297, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 7383, 8408, 7385, 8409, 8412, 8414, 8415, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7512, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6523, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 7641, 8666, 7643, 8667, 8670, 8672, 8673, 7651, 8675, 8683, 522, 6695, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6738, 7763, 7764, 7767, 7769, 7770, 7772, 608, 7780, 6824, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6867, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7942, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6953, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 890, 7036, 892, 8057, 7039, 8064, 8065, 7038, 7041, 900, 8068, 8070, 8071, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7125, 7127, 7135}
6739  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'else'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7212, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7298, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 7384, 7385, 8408, 8409, 8412, 8414, 8416, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7513, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6524, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 7642, 7643, 8666, 8667, 8670, 8672, 8674, 7651, 8675, 8683, 522, 6696, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 6739, 7763, 7764, 7767, 7769, 7771, 7772, 608, 7780, 6825, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6868, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7943, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6954, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 8052, 884, 8054, 887, 7032, 7033, 889, 891, 7036, 892, 8057, 7038, 8064, 7041, 8065, 7040, 900, 8068, 8070, 8072, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7126, 7127, 7135}
6740  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'void'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6697, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 6740, 7764, 7767, 7769, 7772, 608, 7780, 6826, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6741  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '+'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7214, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7300, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 7386, 8409, 8412, 8414, 7393, 8417, 8418, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 7515, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6526, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 7644, 8667, 8670, 8672, 7651, 8675, 8676, 8683, 522, 6698, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 6741, 7767, 7769, 7772, 7773, 608, 7780, 6827, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6870, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 7945, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6956, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 893, 7038, 8064, 8065, 7041, 7042, 900, 8068, 8070, 8073, 8074, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7128, 7135}
6742  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '%'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7215, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7301, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 7387, 8412, 8414, 7393, 8417, 8419, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 7516, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6527, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 7645, 8670, 8672, 7651, 8675, 8677, 8683, 522, 6699, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 6742, 7767, 7769, 7772, 7774, 608, 7780, 6828, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6871, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 7946, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6957, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 894, 7038, 8064, 8065, 7041, 7043, 900, 8068, 8070, 8073, 7049, 8075, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7129, 7135}
6743  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '/='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7216, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7302, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 7388, 8412, 8414, 7393, 8417, 8420, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 7517, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6528, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 7646, 8670, 8672, 7651, 8675, 8678, 8683, 522, 6700, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 6743, 7767, 7769, 7772, 7775, 608, 7780, 6829, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6872, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 7947, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6958, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7038, 895, 8064, 8065, 7041, 900, 8068, 8070, 7044, 8073, 7049, 8076, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7130, 7135}
6744  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '-'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7217, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7303, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 7389, 8414, 7393, 8417, 8421, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 7518, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6529, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7647, 8672, 7651, 8675, 8679, 8683, 522, 6701, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 6744, 7769, 7772, 608, 7776, 7780, 6830, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6873, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7948, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6959, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7038, 896, 8064, 8065, 7041, 900, 8068, 8070, 7045, 8073, 7049, 8077, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7131, 7135}
6745  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '('}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7218, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7304, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 7390, 8414, 7393, 8417, 8422, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 7519, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6530, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 7648, 8672, 7651, 8675, 8680, 8683, 522, 6702, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 6745, 7769, 7772, 608, 7777, 7780, 6831, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6874, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7949, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6960, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7038, 8064, 897, 8065, 7041, 900, 8068, 8070, 7046, 8073, 7049, 8078, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7132, 7135}
6746  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '>'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7219, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7305, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7391, 7393, 8417, 8423, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 7520, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6531, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7649, 7651, 8675, 8681, 8683, 522, 6703, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 6746, 7772, 608, 7778, 7780, 6832, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6875, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7950, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6961, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 7033, 889, 8057, 7036, 892, 7038, 8064, 8065, 898, 7041, 900, 8068, 8070, 7047, 8073, 7049, 8079, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7133, 7135}
6747  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '+='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7220, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7306, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7392, 7393, 8417, 8424, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 7521, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6532, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7650, 7651, 8675, 8682, 8683, 522, 6704, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 6747, 7772, 608, 7779, 7780, 6833, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6876, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7951, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6962, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 899, 900, 8068, 8070, 7048, 8073, 7049, 8080, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7134, 7135}
6748  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'return'}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 8425, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 8683, 522, 6705, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 6748, 7772, 608, 7780, 6834, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 8070, 8073, 7049, 8081, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135}
6749  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '%='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7222, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 7308, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 7394, 8417, 8425, 8426, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 7523, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 6534, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 7652, 8675, 8683, 8684, 522, 6706, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 6749, 608, 7780, 7781, 6835, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 6878, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 7953, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 6964, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 901, 8068, 8070, 8073, 7049, 7050, 8081, 8082, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135, 7136}
6750  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 1, 'origin': 65, 'isTer': False, 'accept': '<='}
   {7182, 7183, 7184, 7186, 7187, 7192, 7194, 7197, 7204, 7205, 7208, 7210, 7213, 7221, 7223, 7268, 7269, 7270, 7272, 7273, 7278, 7280, 7283, 7290, 7291, 7294, 7296, 7299, 7307, 7309, 4237, 7354, 7355, 7356, 7358, 7359, 8386, 8387, 7364, 8388, 7366, 8390, 8391, 7369, 8396, 8398, 7376, 7377, 8401, 7380, 7382, 8408, 7385, 8409, 8412, 8414, 7393, 8417, 7395, 8425, 8427, 4366, 7483, 7484, 7485, 7487, 7488, 7493, 7495, 7498, 7505, 7506, 7509, 7511, 7514, 6494, 6495, 6496, 6498, 6499, 7522, 7524, 6504, 6506, 6509, 6516, 6517, 6520, 6522, 6525, 6533, 6535, 436, 7612, 7613, 7614, 7616, 7617, 8644, 8645, 7622, 8646, 7624, 8648, 8649, 7627, 8654, 8656, 7634, 7635, 8659, 7638, 7640, 8666, 7643, 8667, 8670, 8672, 7651, 8675, 7653, 8683, 8685, 522, 6707, 7741, 7742, 7743, 7745, 7746, 7751, 7753, 7756, 7763, 7764, 7767, 7769, 7772, 6750, 608, 7780, 7782, 6836, 694, 6838, 6839, 6840, 6842, 6843, 6848, 6850, 6853, 6860, 6861, 6864, 6866, 6869, 6877, 6879, 7913, 7914, 7915, 7917, 7918, 7923, 7925, 7928, 3835, 7935, 7936, 7939, 7941, 7944, 3850, 780, 6924, 6925, 6926, 6928, 6929, 7952, 7954, 6934, 6936, 6939, 6946, 6947, 6950, 6952, 6955, 6963, 6965, 861, 862, 863, 865, 866, 7010, 7011, 7012, 7014, 871, 7015, 873, 8042, 8043, 876, 8044, 7022, 8046, 8047, 7025, 7020, 883, 884, 8052, 8054, 887, 7032, 889, 8057, 7033, 7036, 892, 7038, 8064, 8065, 7041, 900, 8068, 902, 8070, 8073, 7049, 7051, 8081, 8083, 7096, 7097, 7098, 7100, 7101, 7106, 7108, 7111, 7118, 7119, 7122, 7124, 7127, 7135, 7137}
6751  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'number'}
   {6751}
6752  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'if'}
   {6752}
6753  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'float'}
   {6753}
6754  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '{'}
   {6754}
6755  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '*'}
   {6755}
6756  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'double'}
   {6756}
6757  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'identifier'}
   {6757}
6758  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '#'}
   {6758}
6759  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': ','}
   {6759}
6760  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': ')'}
   {6760}
6761  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '-='}
   {6761}
6762  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'for'}
   {6762}
6763  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '>='}
   {6763}
6764  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'break'}
   {6764}
6765  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '^='}
   {6765}
6766  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '='}
   {6766}
6767  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'char'}
   {6767}
6768  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '&='}
   {6768}
6769  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '!='}
   {6769}
6770  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '*='}
   {6770}
6771  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '=='}
   {6771}
6772  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '&'}
   {6772}
6773  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '}'}
   {6773}
6774  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': ';'}
   {6774}
6775  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'while'}
   {6775}
6776  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '|='}
   {6776}
6777  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '<'}
   {6777}
6778  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'int'}
   {6778}
6779  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '/'}
   {6779}
6780  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'continue'}
   {6780}
6781  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '^'}
   {6781}
6782  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'else'}
   {6782}
6783  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'void'}
   {6783}
6784  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '+'}
   {6784}
6785  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '%'}
   {6785}
6786  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '/='}
   {6786}
6787  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '-'}
   {6787}
6788  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '('}
   {6788}
6789  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '>'}
   {6789}
6790  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '+='}
   {6790}
6791  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': 'return'}
   {6791}
6792  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '%='}
   {6792}
6793  {'left': 'statement_list', 'right': ['statement', 'statement_list'], 'point': 2, 'origin': 65, 'isTer': True, 'accept': '<='}
   {6793}
6794  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'number'}
   {6794}
6795  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'if'}
   {6795}
6796  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'float'}
   {6796}
6797  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '{'}
   {6797}
6798  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '*'}
   {6798}
6799  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'double'}
   {6799}
6800  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'identifier'}
   {6800}
6801  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '#'}
   {6801}
6802  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': ','}
   {6802}
6803  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': ')'}
   {6803}
6804  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '-='}
   {6804}
6805  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'for'}
   {6805}
6806  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '>='}
   {6806}
6807  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'break'}
   {6807}
6808  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '^='}
   {6808}
6809  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '='}
   {6809}
6810  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'char'}
   {6810}
6811  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '&='}
   {6811}
6812  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '!='}
   {6812}
6813  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '*='}
   {6813}
6814  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '=='}
   {6814}
6815  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '&'}
   {6815}
6816  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '}'}
   {6816}
6817  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': ';'}
   {6817}
6818  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'while'}
   {6818}
6819  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '|='}
   {6819}
6820  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '<'}
   {6820}
6821  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'int'}
   {6821}
6822  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '/'}
   {6822}
6823  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'continue'}
   {6823}
6824  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '^'}
   {6824}
6825  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'else'}
   {6825}
6826  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'void'}
   {6826}
6827  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '+'}
   {6827}
6828  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '%'}
   {6828}
6829  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '/='}
   {6829}
6830  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '-'}
   {6830}
6831  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '('}
   {6831}
6832  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '>'}
   {6832}
6833  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '+='}
   {6833}
6834  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'return'}
   {6834}
6835  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '%='}
   {6835}
6836  {'left': 'statement_list', 'right': [], 'point': 0, 'origin': 66, 'isTer': True, 'accept': '<='}
   {6836}
6837  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'number'}
   {3850, 4237, 4366, 6837, 7353, 3835}
6838  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'if'}
   {3850, 4237, 4366, 6838, 7354, 3835}
6839  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'float'}
   {7355, 6839}
6840  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '{'}
   {6840, 7356}
6841  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*'}
   {6841, 7357}
6842  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'double'}
   {6842, 7358}
6843  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'identifier'}
   {6843, 7359}
6844  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '#'}
   {7360, 6844}
6845  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ','}
   {7361, 6845}
6846  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ')'}
   {7362, 6846}
6847  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-='}
   {7363, 6847}
6848  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'for'}
   {6848, 7364}
6849  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>='}
   {6849, 7365}
6850  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'break'}
   {6850, 7366}
6851  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '^='}
   {6851, 7367}
6852  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '='}
   {7368, 6852}
6853  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'char'}
   {7369, 6853}
6854  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '&='}
   {7370, 6854}
6855  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '!='}
   {7371, 6855}
6856  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*='}
   {6856, 7372}
6857  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '=='}
   {6857, 7373}
6858  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '&'}
   {6858, 7374}
6859  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '}'}
   {6859, 7375}
6860  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': ';'}
   {7376, 6860}
6861  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'while'}
   {7377, 6861}
6862  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '|='}
   {7378, 6862}
6863  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<'}
   {7379, 6863}
6864  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'int'}
   {6864, 7380}
6865  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/'}
   {6865, 7381}
6866  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'continue'}
   {6866, 7382}
6867  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '^'}
   {6867, 7383}
6868  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'else'}
   {7384, 6868}
6869  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'void'}
   {7385, 6869}
6870  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+'}
   {7386, 6870}
6871  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '%'}
   {7387, 6871}
6872  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/='}
   {6872, 7388}
6873  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-'}
   {6873, 7389}
6874  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '('}
   {6874, 7390}
6875  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>'}
   {6875, 7391}
6876  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+='}
   {7392, 6876}
6877  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'return'}
   {7393, 6877}
6878  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '%='}
   {7394, 6878}
6879  {'left': 'statement', 'right': ['expression_statement'], 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<='}
   {7395, 6879}
6880  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'number'}
   {6880}
6881  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'if'}
   {6881}
6882  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'float'}
   {6882}
6883  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '{'}
   {6883}
6884  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '*'}
   {6884}
6885  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'double'}
   {6885}
6886  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'identifier'}
   {6886}
6887  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '#'}
   {6887}
6888  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': ','}
   {6888}
6889  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': ')'}
   {6889}
6890  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '-='}
   {6890}
6891  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'for'}
   {6891}
6892  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '>='}
   {6892}
6893  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'break'}
   {6893}
6894  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '^='}
   {6894}
6895  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '='}
   {6895}
6896  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'char'}
   {6896}
6897  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '&='}
   {6897}
6898  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '!='}
   {6898}
6899  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '*='}
   {6899}
6900  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '=='}
   {6900}
6901  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '&'}
   {6901}
6902  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '}'}
   {6902}
6903  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': ';'}
   {6903}
6904  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'while'}
   {6904}
6905  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '|='}
   {6905}
6906  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '<'}
   {6906}
6907  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'int'}
   {6907}
6908  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '/'}
   {6908}
6909  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'continue'}
   {6909}
6910  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '^'}
   {6910}
6911  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'else'}
   {6911}
6912  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'void'}
   {6912}
6913  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '+'}
   {6913}
6914  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '%'}
   {6914}
6915  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '/='}
   {6915}
6916  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '-'}
   {6916}
6917  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '('}
   {6917}
6918  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '>'}
   {6918}
6919  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '+='}
   {6919}
6920  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'return'}
   {6920}
6921  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '%='}
   {6921}
6922  {'left': 'statement', 'right': ['expression_statement'], 'point': 1, 'origin': 67, 'isTer': True, 'accept': '<='}
   {6922}
6923  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'number'}
   {7912, 6923, 7482, 7611, 7740}
6924  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'if'}
   {7913, 6924, 7483, 7612, 7741}
6925  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'float'}
   {7914, 6925, 7484, 7613, 7742}
6926  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '{'}
   {7915, 6926, 7485, 7614, 7743}
6927  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*'}
   {7744, 7916, 6927, 7486, 7615}
6928  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'double'}
   {7616, 7745, 7917, 6928, 7487}
6929  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'identifier'}
   {7488, 7617, 7746, 7918, 6929}
6930  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '#'}
   {7489, 7618, 7747, 7919, 6930}
6931  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ','}
   {7490, 7619, 7748, 7920, 6931}
6932  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ')'}
   {7491, 7620, 7749, 7921, 6932}
6933  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-='}
   {7492, 7621, 7750, 7922, 6933}
6934  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'for'}
   {7493, 7622, 7751, 7923, 6934}
6935  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>='}
   {7494, 7623, 7752, 7924, 6935}
6936  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'break'}
   {7495, 7624, 7753, 7925, 6936}
6937  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '^='}
   {7496, 7625, 7754, 7926, 6937}
6938  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '='}
   {7497, 7626, 7755, 7927, 6938}
6939  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'char'}
   {7498, 7627, 7756, 7928, 6939}
6940  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '&='}
   {7499, 7628, 7757, 7929, 6940}
6941  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '!='}
   {7500, 7629, 7758, 7930, 6941}
6942  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*='}
   {7501, 7630, 7759, 7931, 6942}
6943  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '=='}
   {7502, 7631, 7760, 7932, 6943}
6944  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '&'}
   {6944, 7503, 7632, 7761, 7933}
6945  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '}'}
   {6945, 7504, 7633, 7762, 7934}
6946  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': ';'}
   {6946, 7505, 7634, 7763, 7935}
6947  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'while'}
   {7936, 6947, 7506, 7635, 7764}
6948  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '|='}
   {7937, 6948, 7507, 7636, 7765}
6949  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<'}
   {7938, 6949, 7508, 7637, 7766}
6950  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'int'}
   {7939, 6950, 7509, 7638, 7767}
6951  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/'}
   {7940, 6951, 7510, 7639, 7768}
6952  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'continue'}
   {7941, 6952, 7511, 7640, 7769}
6953  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '^'}
   {7942, 6953, 7512, 7641, 7770}
6954  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'else'}
   {7943, 6954, 7513, 7642, 7771}
6955  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'void'}
   {7944, 6955, 7514, 7643, 7772}
6956  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+'}
   {7945, 6956, 7515, 7644, 7773}
6957  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '%'}
   {7946, 6957, 7516, 7645, 7774}
6958  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/='}
   {7947, 6958, 7517, 7646, 7775}
6959  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-'}
   {7776, 7948, 6959, 7518, 7647}
6960  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '('}
   {7648, 7777, 7949, 6960, 7519}
6961  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>'}
   {7520, 7649, 7778, 7950, 6961}
6962  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+='}
   {7521, 7650, 7779, 7951, 6962}
6963  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'return'}
   {7522, 7651, 7780, 7952, 6963}
6964  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '%='}
   {7523, 7652, 7781, 7953, 6964}
6965  {'left': 'statement', 'right': ['jump_statement'], 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<='}
   {7524, 7653, 7782, 7954, 6965}
6966  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'number'}
   {6966}
6967  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'if'}
   {6967}
6968  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'float'}
   {6968}
6969  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '{'}
   {6969}
6970  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '*'}
   {6970}
6971  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'double'}
   {6971}
6972  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'identifier'}
   {6972}
6973  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '#'}
   {6973}
6974  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': ','}
   {6974}
6975  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': ')'}
   {6975}
6976  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '-='}
   {6976}
6977  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'for'}
   {6977}
6978  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '>='}
   {6978}
6979  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'break'}
   {6979}
6980  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '^='}
   {6980}
6981  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '='}
   {6981}
6982  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'char'}
   {6982}
6983  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '&='}
   {6983}
6984  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '!='}
   {6984}
6985  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '*='}
   {6985}
6986  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '=='}
   {6986}
6987  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '&'}
   {6987}
6988  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '}'}
   {6988}
6989  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': ';'}
   {6989}
6990  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'while'}
   {6990}
6991  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '|='}
   {6991}
6992  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '<'}
   {6992}
6993  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'int'}
   {6993}
6994  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '/'}
   {6994}
6995  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'continue'}
   {6995}
6996  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '^'}
   {6996}
6997  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'else'}
   {6997}
6998  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'void'}
   {6998}
6999  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '+'}
   {6999}
7000  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '%'}
   {7000}
7001  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '/='}
   {7001}
7002  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '-'}
   {7002}
7003  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '('}
   {7003}
7004  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '>'}
   {7004}
7005  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '+='}
   {7005}
7006  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': 'return'}
   {7006}
7007  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '%='}
   {7007}
7008  {'left': 'statement', 'right': ['jump_statement'], 'point': 1, 'origin': 68, 'isTer': True, 'accept': '<='}
   {7008}
7009  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'number'}
   {8041, 7009}
7010  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'if'}
   {8042, 7010}
7011  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'float'}
   {8043, 7011}
7012  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '{'}
   {7012, 8044}
7013  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*'}
   {7013, 8045}
7014  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'double'}
   {7014, 8046}
7015  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'identifier'}
   {7015, 8047}
7016  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '#'}
   {8048, 7016}
7017  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ','}
   {8049, 7017}
7018  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ')'}
   {8050, 7018}
7019  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-='}
   {8051, 7019}
7020  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'for'}
   {7020, 8052}
7021  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>='}
   {7021, 8053}
7022  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'break'}
   {7022, 8054}
7023  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '^='}
   {7023, 8055}
7024  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '='}
   {8056, 7024}
7025  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'char'}
   {8057, 7025}
7026  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '&='}
   {8058, 7026}
7027  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '!='}
   {8059, 7027}
7028  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*='}
   {7028, 8060}
7029  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '=='}
   {7029, 8061}
7030  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '&'}
   {7030, 8062}
7031  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '}'}
   {7031, 8063}
7032  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': ';'}
   {8064, 7032}
7033  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'while'}
   {8065, 7033}
7034  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '|='}
   {8066, 7034}
7035  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<'}
   {8067, 7035}
7036  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'int'}
   {7036, 8068}
7037  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/'}
   {7037, 8069}
7038  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'continue'}
   {7038, 8070}
7039  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '^'}
   {7039, 8071}
7040  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'else'}
   {8072, 7040}
7041  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'void'}
   {8073, 7041}
7042  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+'}
   {8074, 7042}
7043  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '%'}
   {8075, 7043}
7044  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/='}
   {7044, 8076}
7045  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-'}
   {8077, 7045}
7046  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '('}
   {7046, 8078}
7047  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>'}
   {7047, 8079}
7048  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+='}
   {8080, 7048}
7049  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'return'}
   {8081, 7049}
7050  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '%='}
   {8082, 7050}
7051  {'left': 'statement', 'right': ['selection_statement'], 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<='}
   {8083, 7051}
7052  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'number'}
   {7052}
7053  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'if'}
   {7053}
7054  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'float'}
   {7054}
7055  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '{'}
   {7055}
7056  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '*'}
   {7056}
7057  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'double'}
   {7057}
7058  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'identifier'}
   {7058}
7059  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '#'}
   {7059}
7060  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': ','}
   {7060}
7061  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': ')'}
   {7061}
7062  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '-='}
   {7062}
7063  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'for'}
   {7063}
7064  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '>='}
   {7064}
7065  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'break'}
   {7065}
7066  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '^='}
   {7066}
7067  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '='}
   {7067}
7068  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'char'}
   {7068}
7069  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '&='}
   {7069}
7070  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '!='}
   {7070}
7071  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '*='}
   {7071}
7072  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '=='}
   {7072}
7073  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '&'}
   {7073}
7074  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '}'}
   {7074}
7075  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': ';'}
   {7075}
7076  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'while'}
   {7076}
7077  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '|='}
   {7077}
7078  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '<'}
   {7078}
7079  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'int'}
   {7079}
7080  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '/'}
   {7080}
7081  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'continue'}
   {7081}
7082  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '^'}
   {7082}
7083  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'else'}
   {7083}
7084  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'void'}
   {7084}
7085  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '+'}
   {7085}
7086  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '%'}
   {7086}
7087  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '/='}
   {7087}
7088  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '-'}
   {7088}
7089  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '('}
   {7089}
7090  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '>'}
   {7090}
7091  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '+='}
   {7091}
7092  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': 'return'}
   {7092}
7093  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '%='}
   {7093}
7094  {'left': 'statement', 'right': ['selection_statement'], 'point': 1, 'origin': 69, 'isTer': True, 'accept': '<='}
   {7094}
7095  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'number'}
   {8385, 8643, 7095}
7096  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'if'}
   {7096, 8386, 8644}
7097  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'float'}
   {7097, 8387, 8645}
7098  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '{'}
   {7098, 8388, 8646}
7099  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*'}
   {7099, 8389, 8647}
7100  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'double'}
   {8648, 7100, 8390}
7101  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'identifier'}
   {8649, 7101, 8391}
7102  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '#'}
   {8392, 8650, 7102}
7103  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ','}
   {8393, 8651, 7103}
7104  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ')'}
   {7104, 8394, 8652}
7105  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-='}
   {7105, 8395, 8653}
7106  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'for'}
   {7106, 8396, 8654}
7107  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>='}
   {7107, 8397, 8655}
7108  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'break'}
   {8656, 7108, 8398}
7109  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '^='}
   {8657, 7109, 8399}
7110  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '='}
   {8400, 8658, 7110}
7111  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'char'}
   {8401, 8659, 7111}
7112  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '&='}
   {7112, 8402, 8660}
7113  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '!='}
   {7113, 8403, 8661}
7114  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*='}
   {7114, 8404, 8662}
7115  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '=='}
   {7115, 8405, 8663}
7116  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '&'}
   {8664, 7116, 8406}
7117  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '}'}
   {8665, 7117, 8407}
7118  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': ';'}
   {8408, 8666, 7118}
7119  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'while'}
   {8409, 8667, 7119}
7120  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '|='}
   {7120, 8410, 8668}
7121  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<'}
   {7121, 8411, 8669}
7122  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'int'}
   {7122, 8412, 8670}
7123  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/'}
   {7123, 8413, 8671}
7124  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'continue'}
   {8672, 7124, 8414}
7125  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '^'}
   {8673, 7125, 8415}
7126  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'else'}
   {8416, 8674, 7126}
7127  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'void'}
   {8417, 8675, 7127}
7128  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+'}
   {7128, 8418, 8676}
7129  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '%'}
   {7129, 8419, 8677}
7130  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/='}
   {7130, 8420, 8678}
7131  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-'}
   {7131, 8421, 8679}
7132  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '('}
   {8680, 7132, 8422}
7133  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>'}
   {8681, 7133, 8423}
7134  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+='}
   {8424, 8682, 7134}
7135  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'return'}
   {8425, 8683, 7135}
7136  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '%='}
   {7136, 8426, 8684}
7137  {'left': 'statement', 'right': ['iteration_statement'], 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<='}
   {7137, 8427, 8685}
7138  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'number'}
   {7138}
7139  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'if'}
   {7139}
7140  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'float'}
   {7140}
7141  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '{'}
   {7141}
7142  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '*'}
   {7142}
7143  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'double'}
   {7143}
7144  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'identifier'}
   {7144}
7145  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '#'}
   {7145}
7146  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': ','}
   {7146}
7147  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': ')'}
   {7147}
7148  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '-='}
   {7148}
7149  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'for'}
   {7149}
7150  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '>='}
   {7150}
7151  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'break'}
   {7151}
7152  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '^='}
   {7152}
7153  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '='}
   {7153}
7154  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'char'}
   {7154}
7155  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '&='}
   {7155}
7156  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '!='}
   {7156}
7157  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '*='}
   {7157}
7158  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '=='}
   {7158}
7159  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '&'}
   {7159}
7160  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '}'}
   {7160}
7161  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': ';'}
   {7161}
7162  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'while'}
   {7162}
7163  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '|='}
   {7163}
7164  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '<'}
   {7164}
7165  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'int'}
   {7165}
7166  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '/'}
   {7166}
7167  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'continue'}
   {7167}
7168  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '^'}
   {7168}
7169  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'else'}
   {7169}
7170  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'void'}
   {7170}
7171  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '+'}
   {7171}
7172  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '%'}
   {7172}
7173  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '/='}
   {7173}
7174  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '-'}
   {7174}
7175  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '('}
   {7175}
7176  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '>'}
   {7176}
7177  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '+='}
   {7177}
7178  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': 'return'}
   {7178}
7179  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '%='}
   {7179}
7180  {'left': 'statement', 'right': ['iteration_statement'], 'point': 1, 'origin': 70, 'isTer': True, 'accept': '<='}
   {7180}
7181  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'number'}
   {7181, 6493}
7182  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'if'}
   {6494, 7182}
7183  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'float'}
   {7183, 6495}
7184  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '{'}
   {6496, 7184}
7185  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '*'}
   {6497, 7185}
7186  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'double'}
   {6498, 7186}
7187  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'identifier'}
   {7187, 6499}
7188  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '#'}
   {6500, 7188}
7189  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ','}
   {7189, 6501}
7190  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ')'}
   {6502, 7190}
7191  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '-='}
   {7191, 6503}
7192  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'for'}
   {6504, 7192}
7193  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '>='}
   {6505, 7193}
7194  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'break'}
   {6506, 7194}
7195  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '^='}
   {7195, 6507}
7196  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '='}
   {6508, 7196}
7197  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'char'}
   {7197, 6509}
7198  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '&='}
   {6510, 7198}
7199  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '!='}
   {7199, 6511}
7200  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '*='}
   {6512, 7200}
7201  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '=='}
   {6513, 7201}
7202  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '&'}
   {6514, 7202}
7203  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '}'}
   {7203, 6515}
7204  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': ';'}
   {6516, 7204}
7205  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'while'}
   {7205, 6517}
7206  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '|='}
   {7206, 6518}
7207  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '<'}
   {7207, 6519}
7208  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'int'}
   {6520, 7208}
7209  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '/'}
   {6521, 7209}
7210  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'continue'}
   {6522, 7210}
7211  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '^'}
   {7211, 6523}
7212  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'else'}
   {6524, 7212}
7213  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'void'}
   {7213, 6525}
7214  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '+'}
   {7214, 6526}
7215  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '%'}
   {7215, 6527}
7216  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '/='}
   {6528, 7216}
7217  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '-'}
   {6529, 7217}
7218  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '('}
   {6530, 7218}
7219  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '>'}
   {7219, 6531}
7220  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '+='}
   {6532, 7220}
7221  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': 'return'}
   {7221, 6533}
7222  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '%='}
   {7222, 6534}
7223  {'left': 'statement', 'right': ['compound_statement'], 'point': 0, 'origin': 71, 'isTer': False, 'accept': '<='}
   {7223, 6535}
7224  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'number'}
   {7224}
7225  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'if'}
   {7225}
7226  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'float'}
   {7226}
7227  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '{'}
   {7227}
7228  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '*'}
   {7228}
7229  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'double'}
   {7229}
7230  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'identifier'}
   {7230}
7231  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '#'}
   {7231}
7232  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': ','}
   {7232}
7233  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': ')'}
   {7233}
7234  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '-='}
   {7234}
7235  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'for'}
   {7235}
7236  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '>='}
   {7236}
7237  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'break'}
   {7237}
7238  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '^='}
   {7238}
7239  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '='}
   {7239}
7240  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'char'}
   {7240}
7241  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '&='}
   {7241}
7242  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '!='}
   {7242}
7243  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '*='}
   {7243}
7244  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '=='}
   {7244}
7245  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '&'}
   {7245}
7246  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '}'}
   {7246}
7247  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': ';'}
   {7247}
7248  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'while'}
   {7248}
7249  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '|='}
   {7249}
7250  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '<'}
   {7250}
7251  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'int'}
   {7251}
7252  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '/'}
   {7252}
7253  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'continue'}
   {7253}
7254  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '^'}
   {7254}
7255  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'else'}
   {7255}
7256  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'void'}
   {7256}
7257  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '+'}
   {7257}
7258  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '%'}
   {7258}
7259  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '/='}
   {7259}
7260  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '-'}
   {7260}
7261  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '('}
   {7261}
7262  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '>'}
   {7262}
7263  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '+='}
   {7263}
7264  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': 'return'}
   {7264}
7265  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '%='}
   {7265}
7266  {'left': 'statement', 'right': ['compound_statement'], 'point': 1, 'origin': 71, 'isTer': True, 'accept': '<='}
   {7266}
7267  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'number'}
   {608, 7267, 522, 780, 436, 694, 860}
7268  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'if'}
   {608, 7268, 522, 780, 436, 694, 861}
7269  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'float'}
   {608, 7269, 522, 780, 436, 694, 862}
7270  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '{'}
   {608, 7270, 522, 780, 436, 694, 863}
7271  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*'}
   {864, 608, 7271, 522, 780, 436, 694}
7272  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'double'}
   {608, 865, 7272, 522, 780, 436, 694}
7273  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'identifier'}
   {608, 866, 7273, 522, 780, 436, 694}
7274  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '#'}
   {608, 867, 522, 7274, 780, 436, 694}
7275  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ','}
   {608, 868, 522, 7275, 780, 436, 694}
7276  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ')'}
   {608, 869, 522, 780, 7276, 436, 694}
7277  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-='}
   {608, 870, 522, 780, 7277, 436, 694}
7278  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'for'}
   {608, 871, 522, 780, 7278, 436, 694}
7279  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>='}
   {608, 872, 522, 780, 7279, 436, 694}
7280  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'break'}
   {608, 873, 522, 780, 7280, 436, 694}
7281  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '^='}
   {608, 522, 874, 780, 7281, 436, 694}
7282  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '='}
   {608, 522, 875, 780, 7282, 436, 694}
7283  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'char'}
   {608, 522, 780, 876, 7283, 436, 694}
7284  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '&='}
   {608, 522, 780, 877, 436, 7284, 694}
7285  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '!='}
   {608, 522, 780, 878, 436, 7285, 694}
7286  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*='}
   {608, 522, 780, 879, 436, 694, 7286}
7287  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '=='}
   {608, 522, 780, 880, 436, 694, 7287}
7288  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '&'}
   {608, 522, 780, 881, 436, 694, 7288}
7289  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '}'}
   {608, 522, 780, 882, 436, 694, 7289}
7290  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': ';'}
   {608, 522, 780, 883, 436, 694, 7290}
7291  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'while'}
   {608, 522, 780, 884, 436, 694, 7291}
7292  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '|='}
   {608, 522, 780, 436, 885, 694, 7292}
7293  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<'}
   {608, 522, 780, 436, 886, 694, 7293}
7294  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'int'}
   {608, 522, 780, 436, 694, 887, 7294}
7295  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/'}
   {608, 522, 780, 436, 694, 888, 7295}
7296  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'continue'}
   {608, 7296, 522, 780, 436, 694, 889}
7297  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '^'}
   {608, 7297, 522, 780, 436, 694, 890}
7298  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'else'}
   {608, 7298, 522, 780, 436, 694, 891}
7299  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'void'}
   {608, 7299, 522, 780, 436, 694, 892}
7300  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+'}
   {608, 7300, 522, 780, 436, 694, 893}
7301  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '%'}
   {608, 7301, 522, 780, 436, 694, 894}
7302  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/='}
   {608, 7302, 522, 780, 436, 694, 895}
7303  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-'}
   {896, 608, 7303, 522, 780, 436, 694}
7304  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '('}
   {608, 897, 7304, 522, 780, 436, 694}
7305  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>'}
   {608, 898, 7305, 522, 780, 436, 694}
7306  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+='}
   {608, 899, 522, 7306, 780, 436, 694}
7307  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'return'}
   {608, 900, 522, 7307, 780, 436, 694}
7308  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '%='}
   {608, 901, 522, 780, 7308, 436, 694}
7309  {'left': 'statement', 'right': ['declaration'], 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<='}
   {608, 902, 522, 780, 7309, 436, 694}
7310  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'number'}
   {7310}
7311  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'if'}
   {7311}
7312  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'float'}
   {7312}
7313  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '{'}
   {7313}
7314  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '*'}
   {7314}
7315  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'double'}
   {7315}
7316  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'identifier'}
   {7316}
7317  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '#'}
   {7317}
7318  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': ','}
   {7318}
7319  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': ')'}
   {7319}
7320  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '-='}
   {7320}
7321  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'for'}
   {7321}
7322  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '>='}
   {7322}
7323  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'break'}
   {7323}
7324  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '^='}
   {7324}
7325  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '='}
   {7325}
7326  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'char'}
   {7326}
7327  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '&='}
   {7327}
7328  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '!='}
   {7328}
7329  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '*='}
   {7329}
7330  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '=='}
   {7330}
7331  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '&'}
   {7331}
7332  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '}'}
   {7332}
7333  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': ';'}
   {7333}
7334  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'while'}
   {7334}
7335  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '|='}
   {7335}
7336  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '<'}
   {7336}
7337  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'int'}
   {7337}
7338  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '/'}
   {7338}
7339  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'continue'}
   {7339}
7340  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '^'}
   {7340}
7341  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'else'}
   {7341}
7342  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'void'}
   {7342}
7343  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '+'}
   {7343}
7344  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '%'}
   {7344}
7345  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '/='}
   {7345}
7346  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '-'}
   {7346}
7347  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '('}
   {7347}
7348  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '>'}
   {7348}
7349  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '+='}
   {7349}
7350  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'return'}
   {7350}
7351  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '%='}
   {7351}
7352  {'left': 'statement', 'right': ['declaration'], 'point': 1, 'origin': 72, 'isTer': True, 'accept': '<='}
   {7352}
7353  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {7353, 3850, 3835, 4237, 4366}
7354  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {7354, 3850, 3835, 4237, 4366}
7355  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {3850, 7355, 4237, 4366, 3835}
7356  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '{'}
   {3850, 3835, 7356, 4237, 4366}
7357  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*'}
   {4237, 3850, 3835, 7357, 4366}
7358  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {3850, 3835, 4237, 7358, 4366}
7359  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {3850, 3835, 4237, 4366, 7359}
7360  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '#'}
   {7360, 3850, 3835, 4237, 4366}
7361  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ','}
   {7361, 3850, 3835, 4237, 4366}
7362  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ')'}
   {7362, 3850, 3835, 4237, 4366}
7363  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-='}
   {7363, 3850, 3835, 4237, 4366}
7364  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {7364, 3850, 3835, 4237, 4366}
7365  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>='}
   {7365, 3850, 3835, 4237, 4366}
7366  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {7366, 3850, 3835, 4237, 4366}
7367  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '^='}
   {7367, 3850, 3835, 4237, 4366}
7368  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '='}
   {7368, 3850, 3835, 4237, 4366}
7369  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {7369, 3850, 3835, 4237, 4366}
7370  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '&='}
   {7370, 3850, 4237, 4366, 3835}
7371  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '!='}
   {3850, 7371, 4237, 4366, 3835}
7372  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*='}
   {3850, 3835, 7372, 4237, 4366}
7373  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '=='}
   {4237, 3850, 3835, 7373, 4366}
7374  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '&'}
   {3850, 3835, 4237, 7374, 4366}
7375  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '}'}
   {3850, 3835, 4237, 4366, 7375}
7376  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': ';'}
   {7376, 3850, 3835, 4237, 4366}
7377  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {7377, 3850, 3835, 4237, 4366}
7378  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '|='}
   {7378, 3850, 3835, 4237, 4366}
7379  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<'}
   {7379, 3850, 3835, 4237, 4366}
7380  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {7380, 3850, 3835, 4237, 4366}
7381  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/'}
   {7381, 3850, 3835, 4237, 4366}
7382  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {7382, 3850, 3835, 4237, 4366}
7383  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '^'}
   {7383, 3850, 3835, 4237, 4366}
7384  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {7384, 3850, 3835, 4237, 4366}
7385  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {7385, 3850, 3835, 4237, 4366}
7386  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+'}
   {7386, 3850, 4237, 4366, 3835}
7387  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '%'}
   {3850, 7387, 4237, 4366, 3835}
7388  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/='}
   {3850, 3835, 7388, 4237, 4366}
7389  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-'}
   {4237, 3850, 3835, 7389, 4366}
7390  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '('}
   {3850, 3835, 4237, 7390, 4366}
7391  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>'}
   {3850, 3835, 4237, 4366, 7391}
7392  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+='}
   {7392, 3850, 3835, 4237, 4366}
7393  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {7393, 3850, 3835, 4237, 4366}
7394  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '%='}
   {7394, 3850, 3835, 4237, 4366}
7395  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<='}
   {7395, 3850, 3835, 4237, 4366}
7396  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'number'}
   {7396}
7397  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'if'}
   {7397}
7398  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'float'}
   {7398}
7399  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '{'}
   {7399}
7400  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '*'}
   {7400}
7401  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'double'}
   {7401}
7402  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'identifier'}
   {7402}
7403  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '#'}
   {7403}
7404  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ','}
   {7404}
7405  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ')'}
   {7405}
7406  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '-='}
   {7406}
7407  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'for'}
   {7407}
7408  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '>='}
   {7408}
7409  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'break'}
   {7409}
7410  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '^='}
   {7410}
7411  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '='}
   {7411}
7412  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'char'}
   {7412}
7413  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '&='}
   {7413}
7414  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '!='}
   {7414}
7415  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '*='}
   {7415}
7416  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '=='}
   {7416}
7417  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '&'}
   {7417}
7418  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '}'}
   {7418}
7419  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': ';'}
   {7419}
7420  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'while'}
   {7420}
7421  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '|='}
   {7421}
7422  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '<'}
   {7422}
7423  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'int'}
   {7423}
7424  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '/'}
   {7424}
7425  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'continue'}
   {7425}
7426  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '^'}
   {7426}
7427  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'else'}
   {7427}
7428  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'void'}
   {7428}
7429  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '+'}
   {7429}
7430  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '%'}
   {7430}
7431  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '/='}
   {7431}
7432  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '-'}
   {7432}
7433  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '('}
   {7433}
7434  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '>'}
   {7434}
7435  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '+='}
   {7435}
7436  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': 'return'}
   {7436}
7437  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '%='}
   {7437}
7438  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 1, 'origin': 73, 'isTer': False, 'accept': '<='}
   {7438}
7439  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'number'}
   {7439}
7440  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'if'}
   {7440}
7441  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'float'}
   {7441}
7442  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '{'}
   {7442}
7443  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '*'}
   {7443}
7444  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'double'}
   {7444}
7445  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'identifier'}
   {7445}
7446  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '#'}
   {7446}
7447  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': ','}
   {7447}
7448  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': ')'}
   {7448}
7449  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '-='}
   {7449}
7450  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'for'}
   {7450}
7451  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '>='}
   {7451}
7452  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'break'}
   {7452}
7453  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '^='}
   {7453}
7454  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '='}
   {7454}
7455  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'char'}
   {7455}
7456  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '&='}
   {7456}
7457  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '!='}
   {7457}
7458  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '*='}
   {7458}
7459  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '=='}
   {7459}
7460  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '&'}
   {7460}
7461  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '}'}
   {7461}
7462  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': ';'}
   {7462}
7463  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'while'}
   {7463}
7464  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '|='}
   {7464}
7465  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '<'}
   {7465}
7466  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'int'}
   {7466}
7467  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '/'}
   {7467}
7468  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'continue'}
   {7468}
7469  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '^'}
   {7469}
7470  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'else'}
   {7470}
7471  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'void'}
   {7471}
7472  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '+'}
   {7472}
7473  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '%'}
   {7473}
7474  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '/='}
   {7474}
7475  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '-'}
   {7475}
7476  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '('}
   {7476}
7477  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '>'}
   {7477}
7478  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '+='}
   {7478}
7479  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': 'return'}
   {7479}
7480  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '%='}
   {7480}
7481  {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'point': 2, 'origin': 73, 'isTer': True, 'accept': '<='}
   {7481}
7482  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {7482}
7483  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {7483}
7484  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {7484}
7485  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '{'}
   {7485}
7486  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*'}
   {7486}
7487  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {7487}
7488  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {7488}
7489  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '#'}
   {7489}
7490  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ','}
   {7490}
7491  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ')'}
   {7491}
7492  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-='}
   {7492}
7493  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {7493}
7494  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>='}
   {7494}
7495  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {7495}
7496  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '^='}
   {7496}
7497  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '='}
   {7497}
7498  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {7498}
7499  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '&='}
   {7499}
7500  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '!='}
   {7500}
7501  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*='}
   {7501}
7502  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '=='}
   {7502}
7503  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '&'}
   {7503}
7504  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '}'}
   {7504}
7505  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': ';'}
   {7505}
7506  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {7506}
7507  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '|='}
   {7507}
7508  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<'}
   {7508}
7509  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {7509}
7510  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/'}
   {7510}
7511  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {7511}
7512  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '^'}
   {7512}
7513  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {7513}
7514  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {7514}
7515  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+'}
   {7515}
7516  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '%'}
   {7516}
7517  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/='}
   {7517}
7518  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-'}
   {7518}
7519  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '('}
   {7519}
7520  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>'}
   {7520}
7521  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+='}
   {7521}
7522  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {7522}
7523  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '%='}
   {7523}
7524  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<='}
   {7524}
7525  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'number'}
   {7525}
7526  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'if'}
   {7526}
7527  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'float'}
   {7527}
7528  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '{'}
   {7528}
7529  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '*'}
   {7529}
7530  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'double'}
   {7530}
7531  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'identifier'}
   {7531}
7532  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '#'}
   {7532}
7533  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ','}
   {7533}
7534  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ')'}
   {7534}
7535  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '-='}
   {7535}
7536  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'for'}
   {7536}
7537  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '>='}
   {7537}
7538  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'break'}
   {7538}
7539  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '^='}
   {7539}
7540  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '='}
   {7540}
7541  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'char'}
   {7541}
7542  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '&='}
   {7542}
7543  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '!='}
   {7543}
7544  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '*='}
   {7544}
7545  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '=='}
   {7545}
7546  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '&'}
   {7546}
7547  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '}'}
   {7547}
7548  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': ';'}
   {7548}
7549  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'while'}
   {7549}
7550  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '|='}
   {7550}
7551  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '<'}
   {7551}
7552  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'int'}
   {7552}
7553  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '/'}
   {7553}
7554  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'continue'}
   {7554}
7555  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '^'}
   {7555}
7556  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'else'}
   {7556}
7557  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'void'}
   {7557}
7558  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '+'}
   {7558}
7559  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '%'}
   {7559}
7560  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '/='}
   {7560}
7561  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '-'}
   {7561}
7562  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '('}
   {7562}
7563  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '>'}
   {7563}
7564  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '+='}
   {7564}
7565  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': 'return'}
   {7565}
7566  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '%='}
   {7566}
7567  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 1, 'origin': 74, 'isTer': False, 'accept': '<='}
   {7567}
7568  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'number'}
   {7568}
7569  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'if'}
   {7569}
7570  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'float'}
   {7570}
7571  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '{'}
   {7571}
7572  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '*'}
   {7572}
7573  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'double'}
   {7573}
7574  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'identifier'}
   {7574}
7575  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '#'}
   {7575}
7576  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': ','}
   {7576}
7577  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': ')'}
   {7577}
7578  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '-='}
   {7578}
7579  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'for'}
   {7579}
7580  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '>='}
   {7580}
7581  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'break'}
   {7581}
7582  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '^='}
   {7582}
7583  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '='}
   {7583}
7584  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'char'}
   {7584}
7585  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '&='}
   {7585}
7586  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '!='}
   {7586}
7587  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '*='}
   {7587}
7588  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '=='}
   {7588}
7589  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '&'}
   {7589}
7590  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '}'}
   {7590}
7591  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': ';'}
   {7591}
7592  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'while'}
   {7592}
7593  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '|='}
   {7593}
7594  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '<'}
   {7594}
7595  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'int'}
   {7595}
7596  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '/'}
   {7596}
7597  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'continue'}
   {7597}
7598  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '^'}
   {7598}
7599  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'else'}
   {7599}
7600  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'void'}
   {7600}
7601  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '+'}
   {7601}
7602  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '%'}
   {7602}
7603  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '/='}
   {7603}
7604  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '-'}
   {7604}
7605  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '('}
   {7605}
7606  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '>'}
   {7606}
7607  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '+='}
   {7607}
7608  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': 'return'}
   {7608}
7609  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '%='}
   {7609}
7610  {'left': 'jump_statement', 'right': ['continue', ';'], 'point': 2, 'origin': 74, 'isTer': True, 'accept': '<='}
   {7610}
7611  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'number'}
   {7611}
7612  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'if'}
   {7612}
7613  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'float'}
   {7613}
7614  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '{'}
   {7614}
7615  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '*'}
   {7615}
7616  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'double'}
   {7616}
7617  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'identifier'}
   {7617}
7618  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '#'}
   {7618}
7619  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': ','}
   {7619}
7620  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': ')'}
   {7620}
7621  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '-='}
   {7621}
7622  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'for'}
   {7622}
7623  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '>='}
   {7623}
7624  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'break'}
   {7624}
7625  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '^='}
   {7625}
7626  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '='}
   {7626}
7627  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'char'}
   {7627}
7628  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '&='}
   {7628}
7629  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '!='}
   {7629}
7630  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '*='}
   {7630}
7631  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '=='}
   {7631}
7632  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '&'}
   {7632}
7633  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '}'}
   {7633}
7634  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': ';'}
   {7634}
7635  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'while'}
   {7635}
7636  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '|='}
   {7636}
7637  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '<'}
   {7637}
7638  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'int'}
   {7638}
7639  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '/'}
   {7639}
7640  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'continue'}
   {7640}
7641  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '^'}
   {7641}
7642  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'else'}
   {7642}
7643  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'void'}
   {7643}
7644  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '+'}
   {7644}
7645  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '%'}
   {7645}
7646  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '/='}
   {7646}
7647  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '-'}
   {7647}
7648  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '('}
   {7648}
7649  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '>'}
   {7649}
7650  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '+='}
   {7650}
7651  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'return'}
   {7651}
7652  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '%='}
   {7652}
7653  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 0, 'origin': 75, 'isTer': False, 'accept': '<='}
   {7653}
7654  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'number'}
   {7654}
7655  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'if'}
   {7655}
7656  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'float'}
   {7656}
7657  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '{'}
   {7657}
7658  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '*'}
   {7658}
7659  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'double'}
   {7659}
7660  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'identifier'}
   {7660}
7661  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '#'}
   {7661}
7662  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': ','}
   {7662}
7663  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': ')'}
   {7663}
7664  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '-='}
   {7664}
7665  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'for'}
   {7665}
7666  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '>='}
   {7666}
7667  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'break'}
   {7667}
7668  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '^='}
   {7668}
7669  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '='}
   {7669}
7670  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'char'}
   {7670}
7671  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '&='}
   {7671}
7672  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '!='}
   {7672}
7673  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '*='}
   {7673}
7674  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '=='}
   {7674}
7675  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '&'}
   {7675}
7676  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '}'}
   {7676}
7677  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': ';'}
   {7677}
7678  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'while'}
   {7678}
7679  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '|='}
   {7679}
7680  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '<'}
   {7680}
7681  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'int'}
   {7681}
7682  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '/'}
   {7682}
7683  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'continue'}
   {7683}
7684  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '^'}
   {7684}
7685  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'else'}
   {7685}
7686  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'void'}
   {7686}
7687  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '+'}
   {7687}
7688  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '%'}
   {7688}
7689  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '/='}
   {7689}
7690  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '-'}
   {7690}
7691  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '('}
   {7691}
7692  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '>'}
   {7692}
7693  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '+='}
   {7693}
7694  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': 'return'}
   {7694}
7695  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '%='}
   {7695}
7696  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 1, 'origin': 75, 'isTer': False, 'accept': '<='}
   {7696}
7697  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'number'}
   {7697}
7698  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'if'}
   {7698}
7699  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'float'}
   {7699}
7700  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '{'}
   {7700}
7701  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '*'}
   {7701}
7702  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'double'}
   {7702}
7703  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'identifier'}
   {7703}
7704  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '#'}
   {7704}
7705  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': ','}
   {7705}
7706  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': ')'}
   {7706}
7707  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '-='}
   {7707}
7708  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'for'}
   {7708}
7709  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '>='}
   {7709}
7710  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'break'}
   {7710}
7711  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '^='}
   {7711}
7712  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '='}
   {7712}
7713  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'char'}
   {7713}
7714  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '&='}
   {7714}
7715  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '!='}
   {7715}
7716  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '*='}
   {7716}
7717  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '=='}
   {7717}
7718  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '&'}
   {7718}
7719  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '}'}
   {7719}
7720  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': ';'}
   {7720}
7721  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'while'}
   {7721}
7722  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '|='}
   {7722}
7723  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '<'}
   {7723}
7724  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'int'}
   {7724}
7725  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '/'}
   {7725}
7726  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'continue'}
   {7726}
7727  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '^'}
   {7727}
7728  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'else'}
   {7728}
7729  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'void'}
   {7729}
7730  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '+'}
   {7730}
7731  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '%'}
   {7731}
7732  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '/='}
   {7732}
7733  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '-'}
   {7733}
7734  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '('}
   {7734}
7735  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '>'}
   {7735}
7736  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '+='}
   {7736}
7737  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': 'return'}
   {7737}
7738  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '%='}
   {7738}
7739  {'left': 'jump_statement', 'right': ['break', ';'], 'point': 2, 'origin': 75, 'isTer': True, 'accept': '<='}
   {7739}
7740  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'number'}
   {7740}
7741  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'if'}
   {7741}
7742  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'float'}
   {7742}
7743  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '{'}
   {7743}
7744  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '*'}
   {7744}
7745  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'double'}
   {7745}
7746  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'identifier'}
   {7746}
7747  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '#'}
   {7747}
7748  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': ','}
   {7748}
7749  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': ')'}
   {7749}
7750  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '-='}
   {7750}
7751  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'for'}
   {7751}
7752  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '>='}
   {7752}
7753  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'break'}
   {7753}
7754  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '^='}
   {7754}
7755  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '='}
   {7755}
7756  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'char'}
   {7756}
7757  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '&='}
   {7757}
7758  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '!='}
   {7758}
7759  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '*='}
   {7759}
7760  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '=='}
   {7760}
7761  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '&'}
   {7761}
7762  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '}'}
   {7762}
7763  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': ';'}
   {7763}
7764  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'while'}
   {7764}
7765  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '|='}
   {7765}
7766  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '<'}
   {7766}
7767  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'int'}
   {7767}
7768  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '/'}
   {7768}
7769  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'continue'}
   {7769}
7770  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '^'}
   {7770}
7771  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'else'}
   {7771}
7772  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'void'}
   {7772}
7773  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '+'}
   {7773}
7774  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '%'}
   {7774}
7775  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '/='}
   {7775}
7776  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '-'}
   {7776}
7777  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '('}
   {7777}
7778  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '>'}
   {7778}
7779  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '+='}
   {7779}
7780  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'return'}
   {7780}
7781  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '%='}
   {7781}
7782  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 0, 'origin': 76, 'isTer': False, 'accept': '<='}
   {7782}
7783  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7783, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7784  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7784, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7785  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7785, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7786  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7786, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7787  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7787, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7788  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7788, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7789  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7789, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7790  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7790, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7791  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7791, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7792  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7792, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7793  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7793, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7794  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7794, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7795  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7795, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7796  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7796, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7797  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7797, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7798  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7798, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7799  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7799, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7800  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7800, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7801  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7801, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7802  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7802, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7803  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7803, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7804  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7804, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7805  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7805, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7806  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7806, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7807  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7807, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7808  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7808, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7809  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7809, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7810  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7810, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7811  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7811, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7812  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7812, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7813  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7813, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7814  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7814, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7815  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7815, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7816  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7816, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7817  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7817, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7818  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7818, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7819  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7819, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7820  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7820, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7821  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7821, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7822  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7822, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7823  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 7823, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7824  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 7824, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7825  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 1, 'origin': 76, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 7825, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
7826  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'number'}
   {7826}
7827  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'if'}
   {7827}
7828  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'float'}
   {7828}
7829  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '{'}
   {7829}
7830  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '*'}
   {7830}
7831  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'double'}
   {7831}
7832  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'identifier'}
   {7832}
7833  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '#'}
   {7833}
7834  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': ','}
   {7834}
7835  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': ')'}
   {7835}
7836  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '-='}
   {7836}
7837  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'for'}
   {7837}
7838  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '>='}
   {7838}
7839  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'break'}
   {7839}
7840  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '^='}
   {7840}
7841  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '='}
   {7841}
7842  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'char'}
   {7842}
7843  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '&='}
   {7843}
7844  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '!='}
   {7844}
7845  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '*='}
   {7845}
7846  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '=='}
   {7846}
7847  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '&'}
   {7847}
7848  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '}'}
   {7848}
7849  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': ';'}
   {7849}
7850  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'while'}
   {7850}
7851  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '|='}
   {7851}
7852  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '<'}
   {7852}
7853  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'int'}
   {7853}
7854  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '/'}
   {7854}
7855  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'continue'}
   {7855}
7856  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '^'}
   {7856}
7857  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'else'}
   {7857}
7858  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'void'}
   {7858}
7859  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '+'}
   {7859}
7860  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '%'}
   {7860}
7861  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '/='}
   {7861}
7862  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '-'}
   {7862}
7863  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '('}
   {7863}
7864  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '>'}
   {7864}
7865  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '+='}
   {7865}
7866  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': 'return'}
   {7866}
7867  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '%='}
   {7867}
7868  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 2, 'origin': 76, 'isTer': False, 'accept': '<='}
   {7868}
7869  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'number'}
   {7869}
7870  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'if'}
   {7870}
7871  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'float'}
   {7871}
7872  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '{'}
   {7872}
7873  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '*'}
   {7873}
7874  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'double'}
   {7874}
7875  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'identifier'}
   {7875}
7876  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '#'}
   {7876}
7877  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': ','}
   {7877}
7878  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': ')'}
   {7878}
7879  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '-='}
   {7879}
7880  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'for'}
   {7880}
7881  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '>='}
   {7881}
7882  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'break'}
   {7882}
7883  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '^='}
   {7883}
7884  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '='}
   {7884}
7885  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'char'}
   {7885}
7886  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '&='}
   {7886}
7887  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '!='}
   {7887}
7888  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '*='}
   {7888}
7889  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '=='}
   {7889}
7890  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '&'}
   {7890}
7891  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '}'}
   {7891}
7892  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': ';'}
   {7892}
7893  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'while'}
   {7893}
7894  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '|='}
   {7894}
7895  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '<'}
   {7895}
7896  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'int'}
   {7896}
7897  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '/'}
   {7897}
7898  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'continue'}
   {7898}
7899  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '^'}
   {7899}
7900  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'else'}
   {7900}
7901  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'void'}
   {7901}
7902  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '+'}
   {7902}
7903  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '%'}
   {7903}
7904  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '/='}
   {7904}
7905  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '-'}
   {7905}
7906  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '('}
   {7906}
7907  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '>'}
   {7907}
7908  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '+='}
   {7908}
7909  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': 'return'}
   {7909}
7910  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '%='}
   {7910}
7911  {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'point': 3, 'origin': 76, 'isTer': True, 'accept': '<='}
   {7911}
7912  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'number'}
   {7912}
7913  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'if'}
   {7913}
7914  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'float'}
   {7914}
7915  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '{'}
   {7915}
7916  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '*'}
   {7916}
7917  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'double'}
   {7917}
7918  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'identifier'}
   {7918}
7919  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '#'}
   {7919}
7920  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': ','}
   {7920}
7921  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': ')'}
   {7921}
7922  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '-='}
   {7922}
7923  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'for'}
   {7923}
7924  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '>='}
   {7924}
7925  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'break'}
   {7925}
7926  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '^='}
   {7926}
7927  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '='}
   {7927}
7928  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'char'}
   {7928}
7929  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '&='}
   {7929}
7930  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '!='}
   {7930}
7931  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '*='}
   {7931}
7932  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '=='}
   {7932}
7933  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '&'}
   {7933}
7934  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '}'}
   {7934}
7935  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': ';'}
   {7935}
7936  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'while'}
   {7936}
7937  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '|='}
   {7937}
7938  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '<'}
   {7938}
7939  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'int'}
   {7939}
7940  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '/'}
   {7940}
7941  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'continue'}
   {7941}
7942  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '^'}
   {7942}
7943  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'else'}
   {7943}
7944  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'void'}
   {7944}
7945  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '+'}
   {7945}
7946  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '%'}
   {7946}
7947  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '/='}
   {7947}
7948  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '-'}
   {7948}
7949  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '('}
   {7949}
7950  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '>'}
   {7950}
7951  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '+='}
   {7951}
7952  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'return'}
   {7952}
7953  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '%='}
   {7953}
7954  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 0, 'origin': 77, 'isTer': False, 'accept': '<='}
   {7954}
7955  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'number'}
   {7955}
7956  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'if'}
   {7956}
7957  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'float'}
   {7957}
7958  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '{'}
   {7958}
7959  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '*'}
   {7959}
7960  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'double'}
   {7960}
7961  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'identifier'}
   {7961}
7962  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '#'}
   {7962}
7963  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': ','}
   {7963}
7964  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': ')'}
   {7964}
7965  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '-='}
   {7965}
7966  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'for'}
   {7966}
7967  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '>='}
   {7967}
7968  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'break'}
   {7968}
7969  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '^='}
   {7969}
7970  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '='}
   {7970}
7971  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'char'}
   {7971}
7972  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '&='}
   {7972}
7973  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '!='}
   {7973}
7974  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '*='}
   {7974}
7975  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '=='}
   {7975}
7976  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '&'}
   {7976}
7977  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '}'}
   {7977}
7978  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': ';'}
   {7978}
7979  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'while'}
   {7979}
7980  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '|='}
   {7980}
7981  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '<'}
   {7981}
7982  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'int'}
   {7982}
7983  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '/'}
   {7983}
7984  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'continue'}
   {7984}
7985  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '^'}
   {7985}
7986  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'else'}
   {7986}
7987  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'void'}
   {7987}
7988  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '+'}
   {7988}
7989  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '%'}
   {7989}
7990  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '/='}
   {7990}
7991  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '-'}
   {7991}
7992  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '('}
   {7992}
7993  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '>'}
   {7993}
7994  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '+='}
   {7994}
7995  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': 'return'}
   {7995}
7996  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '%='}
   {7996}
7997  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 1, 'origin': 77, 'isTer': False, 'accept': '<='}
   {7997}
7998  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'number'}
   {7998}
7999  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'if'}
   {7999}
8000  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'float'}
   {8000}
8001  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '{'}
   {8001}
8002  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '*'}
   {8002}
8003  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'double'}
   {8003}
8004  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'identifier'}
   {8004}
8005  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '#'}
   {8005}
8006  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': ','}
   {8006}
8007  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': ')'}
   {8007}
8008  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '-='}
   {8008}
8009  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'for'}
   {8009}
8010  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '>='}
   {8010}
8011  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'break'}
   {8011}
8012  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '^='}
   {8012}
8013  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '='}
   {8013}
8014  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'char'}
   {8014}
8015  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '&='}
   {8015}
8016  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '!='}
   {8016}
8017  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '*='}
   {8017}
8018  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '=='}
   {8018}
8019  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '&'}
   {8019}
8020  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '}'}
   {8020}
8021  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': ';'}
   {8021}
8022  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'while'}
   {8022}
8023  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '|='}
   {8023}
8024  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '<'}
   {8024}
8025  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'int'}
   {8025}
8026  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '/'}
   {8026}
8027  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'continue'}
   {8027}
8028  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '^'}
   {8028}
8029  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'else'}
   {8029}
8030  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'void'}
   {8030}
8031  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '+'}
   {8031}
8032  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '%'}
   {8032}
8033  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '/='}
   {8033}
8034  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '-'}
   {8034}
8035  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '('}
   {8035}
8036  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '>'}
   {8036}
8037  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '+='}
   {8037}
8038  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': 'return'}
   {8038}
8039  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '%='}
   {8039}
8040  {'left': 'jump_statement', 'right': ['return', ';'], 'point': 2, 'origin': 77, 'isTer': True, 'accept': '<='}
   {8040}
8041  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {8041}
8042  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {8042}
8043  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {8043}
8044  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '{'}
   {8044}
8045  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '*'}
   {8045}
8046  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {8046}
8047  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {8047}
8048  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '#'}
   {8048}
8049  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': ','}
   {8049}
8050  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': ')'}
   {8050}
8051  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '-='}
   {8051}
8052  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {8052}
8053  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '>='}
   {8053}
8054  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {8054}
8055  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '^='}
   {8055}
8056  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '='}
   {8056}
8057  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {8057}
8058  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '&='}
   {8058}
8059  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '!='}
   {8059}
8060  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '*='}
   {8060}
8061  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '=='}
   {8061}
8062  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '&'}
   {8062}
8063  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '}'}
   {8063}
8064  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': ';'}
   {8064}
8065  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {8065}
8066  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '|='}
   {8066}
8067  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '<'}
   {8067}
8068  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {8068}
8069  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '/'}
   {8069}
8070  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {8070}
8071  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '^'}
   {8071}
8072  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {8072}
8073  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {8073}
8074  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '+'}
   {8074}
8075  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '%'}
   {8075}
8076  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '/='}
   {8076}
8077  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '-'}
   {8077}
8078  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '('}
   {8078}
8079  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '>'}
   {8079}
8080  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '+='}
   {8080}
8081  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {8081}
8082  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '%='}
   {8082}
8083  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 0, 'origin': 78, 'isTer': False, 'accept': '<='}
   {8083}
8084  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {8084}
8085  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {8085}
8086  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {8086}
8087  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '{'}
   {8087}
8088  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '*'}
   {8088}
8089  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {8089}
8090  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {8090}
8091  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '#'}
   {8091}
8092  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': ','}
   {8092}
8093  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': ')'}
   {8093}
8094  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '-='}
   {8094}
8095  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {8095}
8096  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '>='}
   {8096}
8097  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {8097}
8098  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '^='}
   {8098}
8099  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '='}
   {8099}
8100  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {8100}
8101  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '&='}
   {8101}
8102  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '!='}
   {8102}
8103  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '*='}
   {8103}
8104  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '=='}
   {8104}
8105  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '&'}
   {8105}
8106  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '}'}
   {8106}
8107  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': ';'}
   {8107}
8108  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {8108}
8109  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '|='}
   {8109}
8110  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '<'}
   {8110}
8111  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {8111}
8112  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '/'}
   {8112}
8113  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {8113}
8114  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '^'}
   {8114}
8115  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {8115}
8116  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {8116}
8117  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '+'}
   {8117}
8118  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '%'}
   {8118}
8119  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '/='}
   {8119}
8120  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '-'}
   {8120}
8121  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '('}
   {8121}
8122  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '>'}
   {8122}
8123  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '+='}
   {8123}
8124  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {8124}
8125  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '%='}
   {8125}
8126  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 1, 'origin': 78, 'isTer': False, 'accept': '<='}
   {8126}
8127  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8127, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8128  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8128, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8129  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8129, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8130  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8130, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8131  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8131, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8132  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8132, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8133  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8133, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8134  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8134, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8135  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8135, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8136  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8136, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8137  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8137, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8138  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8138, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8139  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8139, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8140  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8140, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8141  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8141, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8142  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8142, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8143  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8143, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8144  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8144, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8145  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8145, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8146  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8146, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8147  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8147, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8148  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8148, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8149  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8149, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8150  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8150, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8151  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 8151, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8152  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8152, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8153  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8153, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8154  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8154, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8155  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8155, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8156  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8156, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8157  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8157, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8158  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8158, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8159  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8159, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8160  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8160, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8161  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8161, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8162  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8162, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8163  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8163, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8164  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8164, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8165  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8165, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8166  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8166, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8167  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 8167, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8168  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 8168, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8169  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 2, 'origin': 78, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 8169, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8170  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {8170}
8171  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {8171}
8172  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {8172}
8173  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '{'}
   {8173}
8174  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '*'}
   {8174}
8175  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {8175}
8176  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {8176}
8177  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '#'}
   {8177}
8178  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': ','}
   {8178}
8179  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': ')'}
   {8179}
8180  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '-='}
   {8180}
8181  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {8181}
8182  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '>='}
   {8182}
8183  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {8183}
8184  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '^='}
   {8184}
8185  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '='}
   {8185}
8186  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {8186}
8187  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '&='}
   {8187}
8188  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '!='}
   {8188}
8189  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '*='}
   {8189}
8190  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '=='}
   {8190}
8191  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '&'}
   {8191}
8192  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '}'}
   {8192}
8193  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': ';'}
   {8193}
8194  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {8194}
8195  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '|='}
   {8195}
8196  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '<'}
   {8196}
8197  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {8197}
8198  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '/'}
   {8198}
8199  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {8199}
8200  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '^'}
   {8200}
8201  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {8201}
8202  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {8202}
8203  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '+'}
   {8203}
8204  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '%'}
   {8204}
8205  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '/='}
   {8205}
8206  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '-'}
   {8206}
8207  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '('}
   {8207}
8208  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '>'}
   {8208}
8209  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '+='}
   {8209}
8210  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {8210}
8211  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '%='}
   {8211}
8212  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 3, 'origin': 78, 'isTer': False, 'accept': '<='}
   {8212}
8213  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 8213, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8214  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 8214, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8215  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 8215, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8216  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '{'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 8216, 7384, 7513, 7771, 7642, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8217  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '*'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 8217, 7513, 7771, 7642, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8218  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 8218, 7771, 7642, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8219  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 8219, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8220  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '#'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 8220, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8221  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': ','}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 8221, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8222  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': ')'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 8222, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8223  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '-='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 8223, 608, 3835, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8224  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 8224, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8225  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '>='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8225, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8226  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8226, 8674, 6954, 7212, 436, 694, 891, 6524}
8227  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '^='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8227, 6954, 7212, 436, 694, 891, 6524}
8228  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8228, 6954, 7212, 436, 694, 891, 6524}
8229  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8229, 6954, 7212, 436, 694, 891, 6524}
8230  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '&='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8230, 6954, 7212, 436, 694, 891, 6524}
8231  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '!='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8231, 6954, 7212, 436, 694, 891, 6524}
8232  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '*='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8232, 6954, 7212, 436, 694, 891, 6524}
8233  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '=='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8233, 6954, 7212, 436, 694, 891, 6524}
8234  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '&'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8234, 6954, 7212, 436, 694, 891, 6524}
8235  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '}'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 8235, 7212, 436, 694, 891, 6524}
8236  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': ';'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8236, 436, 694, 891, 6524}
8237  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8237, 436, 694, 891, 6524}
8238  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '|='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8238, 436, 694, 891, 6524}
8239  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '<'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8239, 436, 694, 891, 6524}
8240  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8240, 436, 694, 891, 6524}
8241  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '/'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8241, 436, 694, 891, 6524}
8242  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8242, 436, 694, 891, 6524}
8243  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '^'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8243, 436, 694, 891, 6524}
8244  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8244, 436, 694, 891, 6524}
8245  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 8245, 694, 891, 6524}
8246  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '+'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 8246, 694, 891, 6524}
8247  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '%'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 8247, 891, 6524}
8248  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '/='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 8248, 891, 6524}
8249  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '-'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 8249, 891, 6524}
8250  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '('}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 8250, 891, 6524}
8251  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '>'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 8251, 6954, 7212, 436, 694, 891, 6524}
8252  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '+='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 8252, 436, 694, 891, 6524}
8253  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524, 8253}
8254  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '%='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524, 8254}
8255  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 4, 'origin': 78, 'isTer': False, 'accept': '<='}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524, 8255}
8256  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {8256}
8257  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {8257}
8258  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {8258}
8259  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '{'}
   {8259}
8260  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '*'}
   {8260}
8261  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {8261}
8262  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {8262}
8263  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '#'}
   {8263}
8264  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': ','}
   {8264}
8265  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': ')'}
   {8265}
8266  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '-='}
   {8266}
8267  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {8267}
8268  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '>='}
   {8268}
8269  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {8269}
8270  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '^='}
   {8270}
8271  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '='}
   {8271}
8272  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {8272}
8273  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '&='}
   {8273}
8274  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '!='}
   {8274}
8275  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '*='}
   {8275}
8276  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '=='}
   {8276}
8277  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '&'}
   {8277}
8278  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '}'}
   {8278}
8279  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': ';'}
   {8279}
8280  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {8280}
8281  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '|='}
   {8281}
8282  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '<'}
   {8282}
8283  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {8283}
8284  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '/'}
   {8284}
8285  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {8285}
8286  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '^'}
   {8286}
8287  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {8287}
8288  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {8288}
8289  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '+'}
   {8289}
8290  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '%'}
   {8290}
8291  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '/='}
   {8291}
8292  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '-'}
   {8292}
8293  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '('}
   {8293}
8294  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '>'}
   {8294}
8295  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '+='}
   {8295}
8296  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {8296}
8297  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '%='}
   {8297}
8298  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 5, 'origin': 78, 'isTer': False, 'accept': '<='}
   {8298}
8299  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'number'}
   {8385, 8643, 522, 3850, 780, 7181, 4237, 4366, 6923, 7611, 860, 6493, 608, 7009, 7267, 7912, 8041, 8299, 436, 6837, 694, 7095, 7353, 7482, 3835, 7740}
8300  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'if'}
   {8386, 8644, 522, 3850, 780, 4237, 7182, 4366, 6924, 7483, 861, 6494, 608, 7010, 7268, 7913, 8042, 8300, 436, 694, 6838, 7096, 7354, 3835, 7612, 7741}
8301  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'float'}
   {8387, 8645, 522, 3850, 780, 4237, 4366, 7183, 6925, 862, 6495, 608, 3835, 7011, 7269, 7914, 8043, 8301, 436, 694, 6839, 7097, 7355, 7484, 7613, 7742}
8302  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '{'}
   {8388, 8646, 522, 3850, 780, 4237, 4366, 6926, 7184, 863, 6496, 608, 7012, 7270, 7915, 8044, 8302, 436, 694, 6840, 7098, 3835, 7356, 7485, 7614, 7743}
8303  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '*'}
   {7744, 7099, 8389, 8647, 522, 3850, 780, 4237, 4366, 6927, 7185, 864, 6497, 608, 7013, 7271, 7916, 8045, 8303, 436, 694, 6841, 3835, 7357, 7486, 7615}
8304  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'double'}
   {7616, 7745, 8390, 8648, 522, 3850, 780, 4237, 4366, 6928, 7186, 608, 865, 6498, 7014, 7272, 7917, 8046, 8304, 436, 694, 6842, 3835, 7100, 7358, 7487}
8305  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'identifier'}
   {7488, 7617, 7746, 8391, 8649, 522, 3850, 780, 4237, 4366, 6929, 7187, 3835, 608, 866, 6499, 7015, 7273, 7918, 8047, 8305, 436, 694, 6843, 7101, 7359}
8306  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '#'}
   {7360, 7489, 7618, 7747, 8392, 522, 3850, 780, 4237, 4366, 8650, 6930, 7188, 608, 867, 6500, 7016, 7274, 7919, 8048, 8306, 436, 694, 3835, 6844, 7102}
8307  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': ','}
   {7361, 7490, 7619, 7748, 8393, 522, 3850, 780, 4237, 4366, 8651, 6931, 7189, 608, 868, 6501, 7017, 7275, 7920, 8049, 8307, 436, 694, 3835, 6845, 7103}
8308  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': ')'}
   {7104, 7362, 7491, 7620, 7749, 522, 3850, 780, 4237, 4366, 8394, 8652, 6932, 7190, 608, 869, 6502, 7018, 7276, 7921, 8050, 8308, 436, 694, 3835, 6846}
8309  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '-='}
   {7105, 7363, 7492, 7621, 7750, 522, 3850, 780, 4237, 4366, 8395, 8653, 6933, 7191, 608, 870, 6503, 7019, 7277, 7922, 8051, 436, 8309, 694, 3835, 6847}
8310  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'for'}
   {6848, 7106, 7364, 7493, 7622, 7751, 522, 3850, 780, 4237, 4366, 8396, 8654, 6934, 7192, 608, 871, 6504, 7020, 7278, 7923, 436, 8052, 8310, 694, 3835}
8311  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '>='}
   {6849, 7107, 7365, 7494, 7623, 7752, 522, 3850, 780, 4237, 4366, 8397, 8655, 6935, 7193, 608, 872, 6505, 7021, 7279, 436, 7924, 694, 8311, 8053, 3835}
8312  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'break'}
   {6850, 7108, 7366, 7495, 7624, 7753, 522, 3850, 780, 4237, 4366, 8398, 8656, 6936, 7194, 608, 873, 6506, 7022, 7280, 436, 7925, 694, 8054, 8312, 3835}
8313  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '^='}
   {6851, 7109, 7367, 7496, 7625, 522, 3850, 780, 4237, 4366, 7754, 8055, 8399, 8657, 6937, 7195, 608, 874, 6507, 7023, 7281, 436, 694, 7926, 8313, 3835}
8314  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '='}
   {6852, 7110, 7368, 7497, 522, 3850, 780, 4237, 4366, 7755, 7626, 8400, 8658, 6938, 7196, 608, 875, 6508, 7024, 7282, 436, 694, 7927, 8056, 8314, 3835}
8315  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'char'}
   {6853, 7111, 7369, 522, 3850, 780, 4237, 4366, 7756, 7498, 7627, 8401, 8659, 6939, 7197, 3835, 608, 876, 6509, 7025, 7283, 436, 694, 7928, 8057, 8315}
8316  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '&='}
   {6854, 7112, 522, 7370, 780, 4237, 3850, 4366, 7757, 7499, 7628, 8402, 8660, 6940, 7198, 608, 877, 6510, 7026, 7284, 436, 694, 7929, 8058, 3835, 8316}
8317  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '!='}
   {6855, 7113, 522, 7371, 780, 4237, 3850, 4366, 7758, 7500, 7629, 8403, 8661, 6941, 7199, 608, 8059, 878, 6511, 7027, 436, 7285, 694, 7930, 3835, 8317}
8318  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '*='}
   {6856, 522, 3850, 780, 7372, 4237, 4366, 7759, 7501, 7630, 7114, 8404, 8662, 6942, 7931, 7200, 608, 879, 6512, 436, 7028, 7286, 694, 3835, 8060, 8318}
8319  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '=='}
   {6857, 522, 3850, 780, 7373, 4237, 4366, 7760, 7502, 7631, 7115, 8405, 8663, 6943, 608, 7201, 880, 6513, 436, 7029, 694, 7287, 3835, 7932, 8061, 8319}
8320  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '&'}
   {8320, 522, 6858, 780, 4237, 7374, 3850, 4366, 7761, 7503, 7632, 7116, 8406, 8664, 608, 6944, 7202, 881, 6514, 436, 694, 7030, 7288, 3835, 7933, 8062}
8321  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '}'}
   {8321, 522, 6859, 780, 4237, 3850, 7375, 4366, 7504, 7762, 7633, 7117, 8407, 8665, 608, 6945, 7203, 882, 6515, 436, 694, 7031, 7289, 3835, 7934, 8063}
8322  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': ';'}
   {8064, 8322, 522, 3850, 780, 6860, 4237, 4366, 7376, 7505, 7634, 7763, 7118, 8408, 8666, 608, 6946, 7204, 883, 6516, 436, 694, 7032, 7290, 3835, 7935}
8323  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'while'}
   {7936, 8065, 8323, 522, 3850, 780, 6861, 4237, 4366, 7119, 7377, 7506, 7635, 7764, 8409, 8667, 3835, 608, 6947, 7205, 884, 6517, 694, 436, 7033, 7291}
8324  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '|='}
   {7937, 8066, 8324, 522, 3850, 780, 4237, 6862, 4366, 7120, 7378, 7507, 7636, 7765, 8410, 8668, 608, 6948, 7206, 436, 885, 6518, 694, 7034, 3835, 7292}
8325  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '<'}
   {7938, 7035, 8067, 8325, 522, 3850, 780, 4237, 4366, 6863, 7121, 7379, 7508, 7637, 7766, 8411, 8669, 608, 6949, 7207, 436, 886, 6519, 694, 3835, 7293}
8326  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'int'}
   {7939, 8068, 8326, 522, 3850, 780, 4237, 4366, 6864, 7122, 7380, 7509, 7638, 7767, 8412, 8670, 608, 6950, 7208, 436, 694, 887, 6520, 3835, 7036, 7294}
8327  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '/'}
   {7940, 8069, 8327, 522, 3850, 780, 4237, 4366, 6865, 7123, 7381, 7510, 7639, 7768, 8413, 8671, 608, 6951, 7209, 436, 694, 888, 6521, 3835, 7037, 7295}
8328  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'continue'}
   {7296, 7941, 8070, 8328, 522, 3850, 780, 4237, 4366, 6866, 7124, 7382, 7511, 7640, 7769, 8414, 608, 8672, 6952, 7210, 436, 694, 889, 6522, 3835, 7038}
8329  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '^'}
   {7297, 7942, 8071, 8329, 522, 3850, 780, 4237, 4366, 6867, 7125, 7383, 7512, 7641, 7770, 3835, 608, 8415, 8673, 6953, 7211, 436, 694, 890, 6523, 7039}
8330  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'else'}
   {7040, 7298, 7943, 8072, 522, 8330, 780, 4237, 3850, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8331  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'void'}
   {7041, 7299, 7944, 8073, 522, 8331, 780, 4237, 3850, 4366, 6869, 7127, 7385, 7514, 7643, 7772, 608, 8417, 8675, 6955, 7213, 436, 694, 3835, 892, 6525}
8332  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '+'}
   {7042, 7300, 7945, 522, 3850, 780, 8332, 4237, 4366, 8074, 6870, 7128, 7386, 7515, 7644, 7773, 608, 8418, 8676, 6956, 7214, 436, 694, 3835, 893, 6526}
8333  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '%'}
   {7043, 7301, 522, 3850, 780, 8333, 4237, 4366, 7946, 8075, 6871, 7129, 7387, 7516, 7645, 7774, 608, 8419, 8677, 6957, 7215, 436, 694, 3835, 894, 6527}
8334  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '/='}
   {6528, 7044, 7302, 522, 3850, 780, 4237, 8334, 4366, 7947, 8076, 6872, 7130, 7388, 7517, 7646, 7775, 608, 8420, 8678, 6958, 7216, 436, 694, 3835, 895}
8335  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '-'}
   {896, 6529, 7045, 7303, 522, 3850, 780, 4237, 4366, 8335, 7948, 8077, 6873, 7131, 7389, 7518, 7647, 608, 7776, 8421, 8679, 6959, 7217, 436, 694, 3835}
8336  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '('}
   {897, 6530, 7046, 7304, 522, 3850, 780, 4237, 4366, 7949, 8336, 8078, 6874, 7132, 7390, 7519, 608, 7777, 7648, 8422, 8680, 6960, 7218, 436, 694, 3835}
8337  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '>'}
   {898, 6531, 7047, 7305, 522, 3850, 780, 4237, 4366, 7950, 8079, 8337, 6875, 7133, 7391, 608, 7520, 7778, 7649, 8423, 8681, 6961, 7219, 436, 694, 3835}
8338  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '+='}
   {899, 6532, 7048, 522, 7306, 780, 4237, 3850, 4366, 7951, 8080, 8338, 6876, 7134, 608, 7392, 7521, 7779, 7650, 8424, 8682, 6962, 7220, 436, 694, 3835}
8339  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': 'return'}
   {900, 6533, 7049, 522, 7307, 780, 4237, 3850, 4366, 7952, 8081, 8339, 6877, 7135, 608, 7393, 7522, 7651, 7780, 8425, 8683, 6963, 436, 7221, 694, 3835}
8340  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '%='}
   {901, 6534, 522, 3850, 780, 7308, 4237, 4366, 7050, 7953, 8082, 8340, 6878, 608, 7136, 7394, 7523, 7652, 7781, 8426, 8684, 436, 6964, 7222, 694, 3835}
8341  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 6, 'origin': 78, 'isTer': False, 'accept': '<='}
   {902, 6535, 522, 3850, 780, 7309, 4237, 4366, 7051, 7954, 8083, 8341, 6879, 608, 7137, 7395, 7524, 7653, 7782, 8427, 8685, 436, 6965, 694, 7223, 3835}
8342  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'number'}
   {8342}
8343  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'if'}
   {8343}
8344  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'float'}
   {8344}
8345  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '{'}
   {8345}
8346  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '*'}
   {8346}
8347  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'double'}
   {8347}
8348  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'identifier'}
   {8348}
8349  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '#'}
   {8349}
8350  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': ','}
   {8350}
8351  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': ')'}
   {8351}
8352  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '-='}
   {8352}
8353  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'for'}
   {8353}
8354  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '>='}
   {8354}
8355  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'break'}
   {8355}
8356  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '^='}
   {8356}
8357  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '='}
   {8357}
8358  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'char'}
   {8358}
8359  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '&='}
   {8359}
8360  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '!='}
   {8360}
8361  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '*='}
   {8361}
8362  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '=='}
   {8362}
8363  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '&'}
   {8363}
8364  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '}'}
   {8364}
8365  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': ';'}
   {8365}
8366  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'while'}
   {8366}
8367  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '|='}
   {8367}
8368  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '<'}
   {8368}
8369  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'int'}
   {8369}
8370  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '/'}
   {8370}
8371  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'continue'}
   {8371}
8372  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '^'}
   {8372}
8373  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'else'}
   {8373}
8374  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'void'}
   {8374}
8375  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '+'}
   {8375}
8376  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '%'}
   {8376}
8377  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '/='}
   {8377}
8378  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '-'}
   {8378}
8379  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '('}
   {8379}
8380  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '>'}
   {8380}
8381  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '+='}
   {8381}
8382  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': 'return'}
   {8382}
8383  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '%='}
   {8383}
8384  {'left': 'selection_statement', 'right': ['if', '(', 'expression', ')', 'statement', 'else', 'statement'], 'point': 7, 'origin': 78, 'isTer': True, 'accept': '<='}
   {8384}
8385  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'number'}
   {8385}
8386  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'if'}
   {8386}
8387  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'float'}
   {8387}
8388  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '{'}
   {8388}
8389  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '*'}
   {8389}
8390  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'double'}
   {8390}
8391  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'identifier'}
   {8391}
8392  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '#'}
   {8392}
8393  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': ','}
   {8393}
8394  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': ')'}
   {8394}
8395  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '-='}
   {8395}
8396  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'for'}
   {8396}
8397  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '>='}
   {8397}
8398  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'break'}
   {8398}
8399  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '^='}
   {8399}
8400  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '='}
   {8400}
8401  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'char'}
   {8401}
8402  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '&='}
   {8402}
8403  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '!='}
   {8403}
8404  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '*='}
   {8404}
8405  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '=='}
   {8405}
8406  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '&'}
   {8406}
8407  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '}'}
   {8407}
8408  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': ';'}
   {8408}
8409  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'while'}
   {8409}
8410  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '|='}
   {8410}
8411  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '<'}
   {8411}
8412  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'int'}
   {8412}
8413  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '/'}
   {8413}
8414  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'continue'}
   {8414}
8415  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '^'}
   {8415}
8416  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'else'}
   {8416}
8417  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'void'}
   {8417}
8418  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '+'}
   {8418}
8419  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '%'}
   {8419}
8420  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '/='}
   {8420}
8421  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '-'}
   {8421}
8422  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '('}
   {8422}
8423  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '>'}
   {8423}
8424  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '+='}
   {8424}
8425  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'return'}
   {8425}
8426  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '%='}
   {8426}
8427  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 0, 'origin': 79, 'isTer': False, 'accept': '<='}
   {8427}
8428  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'number'}
   {8428}
8429  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'if'}
   {8429}
8430  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'float'}
   {8430}
8431  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '{'}
   {8431}
8432  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '*'}
   {8432}
8433  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'double'}
   {8433}
8434  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'identifier'}
   {8434}
8435  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '#'}
   {8435}
8436  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': ','}
   {8436}
8437  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': ')'}
   {8437}
8438  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '-='}
   {8438}
8439  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'for'}
   {8439}
8440  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '>='}
   {8440}
8441  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'break'}
   {8441}
8442  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '^='}
   {8442}
8443  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '='}
   {8443}
8444  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'char'}
   {8444}
8445  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '&='}
   {8445}
8446  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '!='}
   {8446}
8447  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '*='}
   {8447}
8448  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '=='}
   {8448}
8449  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '&'}
   {8449}
8450  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '}'}
   {8450}
8451  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': ';'}
   {8451}
8452  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'while'}
   {8452}
8453  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '|='}
   {8453}
8454  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '<'}
   {8454}
8455  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'int'}
   {8455}
8456  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '/'}
   {8456}
8457  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'continue'}
   {8457}
8458  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '^'}
   {8458}
8459  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'else'}
   {8459}
8460  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'void'}
   {8460}
8461  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '+'}
   {8461}
8462  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '%'}
   {8462}
8463  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '/='}
   {8463}
8464  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '-'}
   {8464}
8465  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '('}
   {8465}
8466  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '>'}
   {8466}
8467  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '+='}
   {8467}
8468  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'return'}
   {8468}
8469  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '%='}
   {8469}
8470  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 1, 'origin': 79, 'isTer': False, 'accept': '<='}
   {8470}
8471  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8471, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8472  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8472, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8473  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8473, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8474  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8474, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8475  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8475, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8476  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8476, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8477  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8477, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8478  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8478, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8479  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 8479, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8480  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8480, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8481  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8481, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8482  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8482, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8483  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8483, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8484  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8484, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8485  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8485, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8486  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8486, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8487  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 8487, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8488  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8488, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8489  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8489, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8490  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 8490, 4395, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8491  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 8491, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8492  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 8492, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8493  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 8493, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8494  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 8494, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8495  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 8495, 4911, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8496  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8496, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8497  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8497, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8498  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8498, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8499  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8499, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8500  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8500, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8501  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8501, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8502  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8502, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8503  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8503, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8504  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8504, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8505  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8505, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8506  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 8506, 1595, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8507  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8507, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8508  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8508, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8509  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8509, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8510  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8510, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8511  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8511, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8512  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 8512, 1600, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8513  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 2, 'origin': 79, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4395, 4911, 1595, 1600, 8513, 1603, 1609, 1611, 1612, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4481, 1681, 1686, 1689, 1695, 1697, 1698, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4567, 1767, 1772, 1775, 1781, 1783, 1784, 1789, 1791}
8514  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'number'}
   {8514}
8515  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'if'}
   {8515}
8516  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'float'}
   {8516}
8517  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '{'}
   {8517}
8518  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '*'}
   {8518}
8519  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'double'}
   {8519}
8520  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'identifier'}
   {8520}
8521  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '#'}
   {8521}
8522  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': ','}
   {8522}
8523  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': ')'}
   {8523}
8524  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '-='}
   {8524}
8525  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'for'}
   {8525}
8526  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '>='}
   {8526}
8527  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'break'}
   {8527}
8528  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '^='}
   {8528}
8529  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '='}
   {8529}
8530  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'char'}
   {8530}
8531  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '&='}
   {8531}
8532  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '!='}
   {8532}
8533  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '*='}
   {8533}
8534  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '=='}
   {8534}
8535  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '&'}
   {8535}
8536  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '}'}
   {8536}
8537  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': ';'}
   {8537}
8538  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'while'}
   {8538}
8539  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '|='}
   {8539}
8540  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '<'}
   {8540}
8541  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'int'}
   {8541}
8542  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '/'}
   {8542}
8543  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'continue'}
   {8543}
8544  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '^'}
   {8544}
8545  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'else'}
   {8545}
8546  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'void'}
   {8546}
8547  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '+'}
   {8547}
8548  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '%'}
   {8548}
8549  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '/='}
   {8549}
8550  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '-'}
   {8550}
8551  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '('}
   {8551}
8552  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '>'}
   {8552}
8553  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '+='}
   {8553}
8554  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': 'return'}
   {8554}
8555  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '%='}
   {8555}
8556  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 3, 'origin': 79, 'isTer': False, 'accept': '<='}
   {8556}
8557  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'number'}
   {8385, 8643, 522, 3850, 780, 7181, 4237, 4366, 6923, 7611, 860, 6493, 608, 7009, 7267, 7912, 8041, 8557, 436, 6837, 694, 7095, 7353, 7482, 3835, 7740}
8558  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'if'}
   {8386, 8644, 522, 3850, 780, 4237, 7182, 4366, 6924, 7483, 861, 6494, 608, 7010, 7268, 7913, 8042, 8558, 436, 694, 6838, 7096, 7354, 3835, 7612, 7741}
8559  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'float'}
   {8387, 8645, 522, 3850, 780, 4237, 4366, 7183, 6925, 862, 6495, 608, 3835, 7011, 7269, 7914, 8043, 8559, 436, 694, 6839, 7097, 7355, 7484, 7613, 7742}
8560  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '{'}
   {8388, 8646, 522, 3850, 780, 4237, 4366, 6926, 7184, 863, 6496, 608, 7012, 7270, 7915, 8044, 8560, 436, 694, 6840, 7098, 3835, 7356, 7485, 7614, 7743}
8561  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '*'}
   {7744, 7099, 8389, 8647, 522, 3850, 780, 4237, 4366, 6927, 7185, 864, 6497, 608, 7013, 7271, 7916, 8045, 8561, 436, 694, 6841, 3835, 7357, 7486, 7615}
8562  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'double'}
   {7616, 7745, 8390, 8648, 522, 3850, 780, 4237, 4366, 6928, 7186, 608, 865, 6498, 7014, 7272, 7917, 8046, 8562, 436, 694, 6842, 3835, 7100, 7358, 7487}
8563  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'identifier'}
   {7488, 7617, 7746, 8391, 8649, 522, 3850, 780, 4237, 4366, 6929, 7187, 3835, 608, 866, 6499, 7015, 7273, 7918, 8047, 8563, 436, 694, 6843, 7101, 7359}
8564  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '#'}
   {7360, 7489, 7618, 7747, 8392, 522, 3850, 780, 4237, 4366, 8650, 6930, 7188, 608, 867, 6500, 7016, 7274, 7919, 8048, 8564, 436, 694, 3835, 6844, 7102}
8565  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': ','}
   {7361, 7490, 7619, 7748, 8393, 522, 3850, 780, 4237, 4366, 8651, 6931, 7189, 608, 868, 6501, 7017, 7275, 7920, 8049, 436, 8565, 694, 3835, 6845, 7103}
8566  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': ')'}
   {7104, 7362, 7491, 7620, 7749, 522, 3850, 780, 4237, 4366, 8394, 8652, 6932, 7190, 608, 869, 6502, 7018, 7276, 7921, 8050, 436, 8566, 694, 3835, 6846}
8567  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '-='}
   {7105, 7363, 7492, 7621, 7750, 522, 3850, 780, 4237, 4366, 8395, 8653, 6933, 7191, 608, 870, 6503, 7019, 7277, 7922, 8051, 436, 694, 8567, 3835, 6847}
8568  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'for'}
   {6848, 7106, 7364, 7493, 7622, 7751, 522, 3850, 780, 4237, 4366, 8396, 8654, 6934, 7192, 608, 871, 6504, 7020, 7278, 7923, 436, 8052, 694, 8568, 3835}
8569  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '>='}
   {6849, 7107, 7365, 7494, 7623, 7752, 522, 3850, 780, 4237, 4366, 8397, 8655, 6935, 7193, 608, 872, 6505, 7021, 7279, 436, 7924, 694, 8053, 8569, 3835}
8570  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'break'}
   {6850, 7108, 7366, 7495, 7624, 7753, 522, 3850, 780, 4237, 4366, 8398, 8656, 6936, 7194, 608, 873, 6506, 7022, 7280, 436, 7925, 694, 8054, 8570, 3835}
8571  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '^='}
   {6851, 7109, 7367, 7496, 7625, 522, 3850, 780, 4237, 4366, 7754, 8055, 8399, 8657, 6937, 7195, 3835, 608, 874, 6507, 7023, 7281, 436, 694, 7926, 8571}
8572  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '='}
   {6852, 7110, 7368, 7497, 522, 3850, 780, 4237, 4366, 7755, 7626, 8400, 8658, 6938, 7196, 608, 875, 6508, 7024, 7282, 436, 694, 7927, 8056, 3835, 8572}
8573  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'char'}
   {6853, 7111, 7369, 522, 3850, 780, 4237, 4366, 7756, 7498, 7627, 8401, 8659, 6939, 7197, 608, 876, 6509, 7025, 7283, 436, 694, 7928, 8057, 3835, 8573}
8574  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '&='}
   {6854, 7112, 522, 7370, 780, 4237, 3850, 4366, 7757, 7499, 7628, 8402, 8660, 6940, 7198, 608, 877, 6510, 7026, 7284, 436, 694, 7929, 8058, 3835, 8574}
8575  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '!='}
   {6855, 7113, 522, 7371, 780, 4237, 3850, 4366, 7758, 7500, 7629, 8403, 8661, 6941, 7199, 608, 8059, 878, 6511, 7027, 436, 7285, 694, 7930, 3835, 8575}
8576  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '*='}
   {8576, 6856, 522, 3850, 780, 7372, 4237, 4366, 7759, 7501, 7630, 7114, 8404, 8662, 6942, 7931, 7200, 608, 879, 6512, 436, 7028, 7286, 694, 3835, 8060}
8577  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '=='}
   {8577, 6857, 522, 3850, 780, 7373, 4237, 4366, 7760, 7502, 7631, 7115, 8405, 8663, 6943, 608, 7201, 880, 6513, 436, 7029, 694, 7287, 3835, 7932, 8061}
8578  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '&'}
   {8578, 522, 6858, 780, 4237, 7374, 3850, 4366, 7761, 7503, 7632, 7116, 8406, 8664, 608, 6944, 7202, 881, 6514, 436, 694, 7030, 7288, 3835, 7933, 8062}
8579  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '}'}
   {8579, 522, 6859, 780, 4237, 3850, 7375, 4366, 7504, 7762, 7633, 7117, 8407, 8665, 608, 6945, 7203, 882, 6515, 436, 694, 7031, 7289, 3835, 7934, 8063}
8580  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': ';'}
   {8064, 8580, 522, 3850, 780, 6860, 4237, 4366, 7376, 7505, 7634, 7763, 7118, 8408, 8666, 608, 6946, 7204, 883, 6516, 436, 694, 7032, 7290, 3835, 7935}
8581  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'while'}
   {7936, 8065, 8581, 522, 3850, 780, 6861, 4237, 4366, 7119, 7377, 7506, 7635, 7764, 8409, 8667, 3835, 608, 6947, 7205, 884, 6517, 694, 436, 7033, 7291}
8582  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '|='}
   {7937, 8066, 8582, 522, 3850, 780, 4237, 6862, 4366, 7120, 7378, 7507, 7636, 7765, 8410, 8668, 608, 6948, 7206, 436, 885, 6518, 694, 7034, 3835, 7292}
8583  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '<'}
   {7938, 7035, 8067, 8583, 522, 3850, 780, 4237, 4366, 6863, 7121, 7379, 7508, 7637, 7766, 8411, 8669, 608, 6949, 7207, 436, 886, 6519, 694, 3835, 7293}
8584  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'int'}
   {7939, 8068, 8584, 522, 3850, 780, 4237, 4366, 6864, 7122, 7380, 7509, 7638, 7767, 8412, 8670, 608, 6950, 7208, 436, 694, 887, 6520, 3835, 7036, 7294}
8585  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '/'}
   {7940, 8069, 8585, 522, 3850, 780, 4237, 4366, 6865, 7123, 7381, 7510, 7639, 7768, 8413, 8671, 608, 6951, 7209, 436, 694, 888, 6521, 3835, 7037, 7295}
8586  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'continue'}
   {7296, 7941, 8070, 522, 8586, 780, 4237, 3850, 4366, 6866, 7124, 7382, 7511, 7640, 7769, 8414, 608, 8672, 6952, 7210, 436, 694, 889, 6522, 3835, 7038}
8587  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '^'}
   {7297, 7942, 8071, 522, 8587, 780, 4237, 3850, 4366, 6867, 7125, 7383, 7512, 7641, 7770, 3835, 608, 8415, 8673, 6953, 7211, 436, 694, 890, 6523, 7039}
8588  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'else'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 8588, 4237, 4366, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8589  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'void'}
   {7041, 7299, 7944, 8073, 522, 3850, 780, 8589, 4237, 4366, 6869, 7127, 7385, 7514, 7643, 7772, 608, 8417, 8675, 6955, 7213, 436, 694, 3835, 892, 6525}
8590  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '+'}
   {7042, 7300, 7945, 522, 3850, 780, 4237, 8590, 4366, 8074, 6870, 7128, 7386, 7515, 7644, 7773, 608, 8418, 8676, 6956, 7214, 436, 694, 3835, 893, 6526}
8591  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '%'}
   {7043, 7301, 522, 3850, 780, 4237, 4366, 8591, 7946, 8075, 6871, 7129, 7387, 7516, 7645, 7774, 608, 8419, 8677, 6957, 7215, 436, 694, 3835, 894, 6527}
8592  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '/='}
   {6528, 7044, 7302, 522, 3850, 780, 4237, 4366, 7947, 8592, 8076, 6872, 7130, 7388, 7517, 7646, 7775, 608, 8420, 8678, 6958, 7216, 436, 694, 3835, 895}
8593  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '-'}
   {896, 6529, 7045, 7303, 522, 3850, 780, 4237, 4366, 7948, 8077, 8593, 6873, 7131, 7389, 7518, 7647, 608, 7776, 8421, 8679, 6959, 7217, 436, 694, 3835}
8594  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '('}
   {897, 6530, 7046, 7304, 522, 3850, 780, 4237, 4366, 7949, 8078, 8594, 6874, 7132, 7390, 7519, 608, 7777, 7648, 8422, 8680, 6960, 7218, 436, 694, 3835}
8595  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '>'}
   {898, 6531, 7047, 7305, 522, 3850, 780, 4237, 4366, 7950, 8079, 8595, 6875, 7133, 7391, 608, 7520, 7778, 7649, 8423, 8681, 6961, 7219, 436, 694, 3835}
8596  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '+='}
   {899, 6532, 7048, 522, 7306, 780, 4237, 3850, 4366, 7951, 8080, 8596, 6876, 7134, 608, 7392, 7521, 7779, 7650, 8424, 8682, 6962, 7220, 436, 694, 3835}
8597  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': 'return'}
   {900, 6533, 7049, 522, 7307, 780, 4237, 3850, 4366, 7952, 8081, 8597, 6877, 7135, 608, 7393, 7522, 7651, 7780, 8425, 8683, 6963, 436, 7221, 694, 3835}
8598  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '%='}
   {901, 6534, 522, 3850, 780, 7308, 4237, 4366, 7050, 7953, 8082, 8598, 6878, 608, 7136, 7394, 7523, 7652, 7781, 8426, 8684, 436, 6964, 7222, 694, 3835}
8599  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 4, 'origin': 79, 'isTer': False, 'accept': '<='}
   {902, 6535, 522, 3850, 780, 7309, 4237, 4366, 7051, 7954, 8083, 8599, 6879, 608, 7137, 7395, 7524, 7653, 7782, 8427, 8685, 436, 6965, 694, 7223, 3835}
8600  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'number'}
   {8600}
8601  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'if'}
   {8601}
8602  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'float'}
   {8602}
8603  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '{'}
   {8603}
8604  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '*'}
   {8604}
8605  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'double'}
   {8605}
8606  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'identifier'}
   {8606}
8607  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '#'}
   {8607}
8608  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': ','}
   {8608}
8609  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': ')'}
   {8609}
8610  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '-='}
   {8610}
8611  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'for'}
   {8611}
8612  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '>='}
   {8612}
8613  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'break'}
   {8613}
8614  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '^='}
   {8614}
8615  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '='}
   {8615}
8616  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'char'}
   {8616}
8617  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '&='}
   {8617}
8618  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '!='}
   {8618}
8619  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '*='}
   {8619}
8620  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '=='}
   {8620}
8621  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '&'}
   {8621}
8622  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '}'}
   {8622}
8623  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': ';'}
   {8623}
8624  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'while'}
   {8624}
8625  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '|='}
   {8625}
8626  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '<'}
   {8626}
8627  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'int'}
   {8627}
8628  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '/'}
   {8628}
8629  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'continue'}
   {8629}
8630  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '^'}
   {8630}
8631  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'else'}
   {8631}
8632  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'void'}
   {8632}
8633  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '+'}
   {8633}
8634  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '%'}
   {8634}
8635  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '/='}
   {8635}
8636  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '-'}
   {8636}
8637  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '('}
   {8637}
8638  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '>'}
   {8638}
8639  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '+='}
   {8639}
8640  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': 'return'}
   {8640}
8641  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '%='}
   {8641}
8642  {'left': 'iteration_statement', 'right': ['while', '(', 'expression', ')', 'statement'], 'point': 5, 'origin': 79, 'isTer': True, 'accept': '<='}
   {8642}
8643  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8643}
8644  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8644}
8645  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {8645}
8646  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '{'}
   {8646}
8647  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '*'}
   {8647}
8648  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {8648}
8649  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {8649}
8650  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8650}
8651  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': ','}
   {8651}
8652  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': ')'}
   {8652}
8653  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '-='}
   {8653}
8654  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {8654}
8655  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '>='}
   {8655}
8656  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {8656}
8657  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '^='}
   {8657}
8658  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '='}
   {8658}
8659  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8659}
8660  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8660}
8661  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '!='}
   {8661}
8662  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '*='}
   {8662}
8663  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '=='}
   {8663}
8664  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '&'}
   {8664}
8665  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8665}
8666  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8666}
8667  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {8667}
8668  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '|='}
   {8668}
8669  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '<'}
   {8669}
8670  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {8670}
8671  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '/'}
   {8671}
8672  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {8672}
8673  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '^'}
   {8673}
8674  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {8674}
8675  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {8675}
8676  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '+'}
   {8676}
8677  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '%'}
   {8677}
8678  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '/='}
   {8678}
8679  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '-'}
   {8679}
8680  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '('}
   {8680}
8681  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '>'}
   {8681}
8682  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8682}
8683  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {8683}
8684  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '%='}
   {8684}
8685  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 0, 'origin': 80, 'isTer': False, 'accept': '<='}
   {8685}
8686  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8686}
8687  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8687}
8688  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {8688}
8689  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '{'}
   {8689}
8690  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '*'}
   {8690}
8691  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {8691}
8692  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {8692}
8693  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8693}
8694  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': ','}
   {8694}
8695  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': ')'}
   {8695}
8696  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '-='}
   {8696}
8697  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {8697}
8698  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '>='}
   {8698}
8699  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {8699}
8700  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '^='}
   {8700}
8701  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '='}
   {8701}
8702  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8702}
8703  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8703}
8704  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '!='}
   {8704}
8705  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '*='}
   {8705}
8706  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '=='}
   {8706}
8707  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '&'}
   {8707}
8708  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8708}
8709  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8709}
8710  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {8710}
8711  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '|='}
   {8711}
8712  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '<'}
   {8712}
8713  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {8713}
8714  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '/'}
   {8714}
8715  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {8715}
8716  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '^'}
   {8716}
8717  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {8717}
8718  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {8718}
8719  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '+'}
   {8719}
8720  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '%'}
   {8720}
8721  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '/='}
   {8721}
8722  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '-'}
   {8722}
8723  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '('}
   {8723}
8724  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '>'}
   {8724}
8725  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8725}
8726  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {8726}
8727  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '%='}
   {8727}
8728  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 1, 'origin': 80, 'isTer': False, 'accept': '<='}
   {8728}
8729  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {608, 897, 866, 522, 780, 436, 694, 8729, 860}
8730  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {608, 897, 866, 522, 780, 436, 694, 8730, 860}
8731  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {608, 897, 866, 522, 780, 436, 694, 8731, 860}
8732  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '{'}
   {608, 897, 866, 860, 522, 780, 436, 694, 8732}
8733  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '*'}
   {608, 897, 866, 522, 780, 436, 694, 860, 8733}
8734  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {608, 897, 866, 522, 780, 436, 694, 860, 8734}
8735  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {608, 897, 866, 522, 780, 436, 694, 860, 8735}
8736  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8736, 897, 608, 866, 522, 780, 436, 694, 860}
8737  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': ','}
   {608, 8737, 897, 866, 522, 780, 436, 694, 860}
8738  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': ')'}
   {608, 897, 8738, 866, 522, 780, 436, 694, 860}
8739  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '-='}
   {608, 897, 866, 8739, 522, 780, 436, 694, 860}
8740  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {608, 897, 866, 8740, 522, 780, 436, 694, 860}
8741  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '>='}
   {608, 897, 866, 8741, 522, 780, 436, 694, 860}
8742  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {608, 897, 866, 8742, 522, 780, 436, 694, 860}
8743  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '^='}
   {608, 897, 866, 8743, 522, 780, 436, 694, 860}
8744  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '='}
   {608, 897, 866, 8744, 522, 780, 436, 694, 860}
8745  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {608, 897, 866, 8745, 522, 780, 436, 694, 860}
8746  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '&='}
   {608, 897, 866, 8746, 522, 780, 436, 694, 860}
8747  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '!='}
   {608, 897, 866, 522, 8747, 780, 436, 694, 860}
8748  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '*='}
   {608, 897, 866, 522, 8748, 780, 436, 694, 860}
8749  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '=='}
   {608, 897, 866, 522, 780, 8749, 436, 694, 860}
8750  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '&'}
   {608, 897, 866, 522, 780, 8750, 436, 694, 860}
8751  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '}'}
   {608, 897, 866, 522, 780, 8751, 436, 694, 860}
8752  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': ';'}
   {608, 897, 866, 522, 780, 8752, 436, 694, 860}
8753  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {608, 897, 866, 522, 780, 8753, 436, 694, 860}
8754  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '|='}
   {608, 897, 866, 522, 780, 8754, 436, 694, 860}
8755  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '<'}
   {608, 897, 866, 522, 780, 8755, 436, 694, 860}
8756  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {608, 897, 866, 522, 780, 8756, 436, 694, 860}
8757  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '/'}
   {608, 897, 866, 522, 780, 436, 8757, 694, 860}
8758  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {608, 897, 866, 522, 780, 436, 694, 8758, 860}
8759  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '^'}
   {608, 897, 866, 522, 780, 436, 694, 8759, 860}
8760  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {608, 897, 866, 522, 780, 436, 694, 8760, 860}
8761  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {608, 897, 866, 522, 780, 436, 694, 8761, 860}
8762  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '+'}
   {608, 897, 866, 522, 780, 436, 694, 8762, 860}
8763  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '%'}
   {608, 897, 866, 522, 780, 436, 694, 8763, 860}
8764  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '/='}
   {608, 897, 866, 860, 522, 780, 436, 694, 8764}
8765  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '-'}
   {608, 897, 866, 522, 780, 436, 694, 860, 8765}
8766  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '('}
   {608, 897, 866, 522, 780, 436, 694, 860, 8766}
8767  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '>'}
   {608, 897, 866, 522, 780, 436, 694, 860, 8767}
8768  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8768, 897, 608, 866, 522, 780, 436, 694, 860}
8769  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {608, 8769, 897, 866, 522, 780, 436, 694, 860}
8770  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '%='}
   {608, 897, 8770, 866, 522, 780, 436, 694, 860}
8771  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 2, 'origin': 80, 'isTer': False, 'accept': '<='}
   {608, 897, 866, 8771, 522, 780, 436, 694, 860}
8772  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8772, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8773  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8773, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8774  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8774, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8775  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '{'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8775, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8776  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '*'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8776, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8777  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 8777, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8778  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 8778, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8779  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '#'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 8779, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8780  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': ','}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 8780, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8781  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': ')'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 8781, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8782  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '-='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 8782, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8783  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 8783, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8784  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '>='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 8784, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8785  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 8785, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8786  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '^='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 8786, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8787  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 8787, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8788  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 8788, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8789  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '&='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 8789, 1621, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8790  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '!='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 8790, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8791  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '*='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 8791, 1624, 1625, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8792  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '=='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 8792, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8793  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '&'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 8793, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8794  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '}'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 8794, 1627, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8795  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': ';'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 8795, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8796  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 8796, 1629, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8797  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '|='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 8797, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8798  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '<'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 8798, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8799  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 8799, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8800  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '/'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 8800, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8801  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 8801, 1633, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8802  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '^'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8802, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8803  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8803, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8804  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8804, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8805  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '+'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8805, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8806  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '%'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8806, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8807  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '/='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8807, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8808  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '-'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8808, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8809  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '('}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8809, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8810  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '>'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8810, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8811  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '+='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8811, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8812  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8812, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8813  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '%='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8813, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8814  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 3, 'origin': 80, 'isTer': False, 'accept': '<='}
   {1793, 1796, 1797, 1799, 1801, 1805, 4409, 1595, 4925, 1603, 1609, 1611, 1612, 1614, 1617, 1619, 1621, 1624, 1625, 1627, 1629, 1633, 8814, 4495, 1681, 1689, 1695, 1697, 1698, 1700, 1703, 1705, 1707, 1710, 1711, 1713, 1715, 1719, 4581, 1767, 1775, 1781, 1783, 1784, 1786, 1789, 1791}
8815  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8815}
8816  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8816}
8817  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {8817}
8818  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '{'}
   {8818}
8819  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '*'}
   {8819}
8820  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {8820}
8821  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {8821}
8822  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8822}
8823  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': ','}
   {8823}
8824  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': ')'}
   {8824}
8825  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '-='}
   {8825}
8826  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {8826}
8827  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '>='}
   {8827}
8828  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {8828}
8829  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '^='}
   {8829}
8830  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '='}
   {8830}
8831  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8831}
8832  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8832}
8833  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '!='}
   {8833}
8834  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '*='}
   {8834}
8835  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '=='}
   {8835}
8836  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '&'}
   {8836}
8837  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8837}
8838  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8838}
8839  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {8839}
8840  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '|='}
   {8840}
8841  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '<'}
   {8841}
8842  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {8842}
8843  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '/'}
   {8843}
8844  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {8844}
8845  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '^'}
   {8845}
8846  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {8846}
8847  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {8847}
8848  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '+'}
   {8848}
8849  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '%'}
   {8849}
8850  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '/='}
   {8850}
8851  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '-'}
   {8851}
8852  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '('}
   {8852}
8853  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '>'}
   {8853}
8854  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8854}
8855  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {8855}
8856  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '%='}
   {8856}
8857  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 4, 'origin': 80, 'isTer': False, 'accept': '<='}
   {8857}
8858  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8858, 3836}
8859  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8859, 3836}
8860  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {3836, 8860}
8861  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '{'}
   {3836, 8861}
8862  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '*'}
   {3836, 8862}
8863  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {3836, 8863}
8864  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {8864, 3836}
8865  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8865, 3836}
8866  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': ','}
   {8866, 3836}
8867  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': ')'}
   {8867, 3836}
8868  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '-='}
   {3836, 8868}
8869  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {3836, 8869}
8870  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '>='}
   {3836, 8870}
8871  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {3836, 8871}
8872  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '^='}
   {8872, 3836}
8873  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '='}
   {8873, 3836}
8874  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8874, 3836}
8875  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8875, 3836}
8876  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '!='}
   {3836, 8876}
8877  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '*='}
   {3836, 8877}
8878  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '=='}
   {3836, 8878}
8879  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '&'}
   {3836, 8879}
8880  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8880, 3836}
8881  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8881, 3836}
8882  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {8882, 3836}
8883  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '|='}
   {8883, 3836}
8884  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '<'}
   {3836, 8884}
8885  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {3836, 8885}
8886  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '/'}
   {3836, 8886}
8887  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {3836, 8887}
8888  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '^'}
   {8888, 3836}
8889  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {8889, 3836}
8890  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {8890, 3836}
8891  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '+'}
   {8891, 3836}
8892  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '%'}
   {3836, 8892}
8893  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '/='}
   {3836, 8893}
8894  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '-'}
   {3836, 8894}
8895  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '('}
   {3836, 8895}
8896  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '>'}
   {8896, 3836}
8897  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8897, 3836}
8898  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {8898, 3836}
8899  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '%='}
   {8899, 3836}
8900  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 5, 'origin': 80, 'isTer': False, 'accept': '<='}
   {3836, 8900}
8901  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8901}
8902  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8902}
8903  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {8903}
8904  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '{'}
   {8904}
8905  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '*'}
   {8905}
8906  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {8906}
8907  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {8907}
8908  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '#'}
   {8908}
8909  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': ','}
   {8909}
8910  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': ')'}
   {8910}
8911  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '-='}
   {8911}
8912  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {8912}
8913  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '>='}
   {8913}
8914  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {8914}
8915  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '^='}
   {8915}
8916  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '='}
   {8916}
8917  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8917}
8918  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8918}
8919  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '!='}
   {8919}
8920  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '*='}
   {8920}
8921  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '=='}
   {8921}
8922  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '&'}
   {8922}
8923  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8923}
8924  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8924}
8925  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {8925}
8926  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '|='}
   {8926}
8927  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '<'}
   {8927}
8928  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {8928}
8929  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '/'}
   {8929}
8930  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {8930}
8931  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '^'}
   {8931}
8932  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {8932}
8933  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {8933}
8934  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '+'}
   {8934}
8935  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '%'}
   {8935}
8936  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '/='}
   {8936}
8937  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '-'}
   {8937}
8938  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '('}
   {8938}
8939  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '>'}
   {8939}
8940  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '+='}
   {8940}
8941  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {8941}
8942  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '%='}
   {8942}
8943  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 6, 'origin': 80, 'isTer': False, 'accept': '<='}
   {8943}
8944  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'number'}
   {8385, 8643, 522, 3850, 780, 7181, 4237, 4366, 6923, 7611, 860, 6493, 608, 7009, 7267, 7912, 8041, 8944, 436, 6837, 694, 7095, 7353, 7482, 3835, 7740}
8945  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'if'}
   {8386, 8644, 522, 3850, 780, 4237, 7182, 4366, 6924, 7483, 861, 6494, 608, 7010, 7268, 7913, 8042, 8945, 436, 694, 6838, 7096, 7354, 3835, 7612, 7741}
8946  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'float'}
   {8387, 8645, 522, 3850, 780, 4237, 4366, 7183, 6925, 862, 6495, 608, 3835, 7011, 7269, 7914, 8043, 8946, 436, 694, 6839, 7097, 7355, 7484, 7613, 7742}
8947  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '{'}
   {8388, 8646, 522, 3850, 780, 4237, 4366, 6926, 7184, 863, 6496, 608, 7012, 7270, 7915, 8044, 8947, 436, 694, 6840, 7098, 3835, 7356, 7485, 7614, 7743}
8948  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '*'}
   {7744, 7099, 8389, 8647, 522, 3850, 780, 4237, 4366, 6927, 7185, 864, 6497, 608, 7013, 7271, 7916, 8045, 8948, 436, 694, 6841, 3835, 7357, 7486, 7615}
8949  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'double'}
   {7616, 7745, 8390, 8648, 522, 3850, 780, 4237, 4366, 6928, 7186, 608, 865, 6498, 7014, 7272, 7917, 8046, 436, 8949, 694, 6842, 3835, 7100, 7358, 7487}
8950  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'identifier'}
   {7488, 7617, 7746, 8391, 8649, 522, 3850, 780, 4237, 4366, 6929, 7187, 3835, 608, 866, 6499, 7015, 7273, 7918, 8047, 436, 8950, 694, 6843, 7101, 7359}
8951  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '#'}
   {7360, 7489, 7618, 7747, 8392, 522, 3850, 780, 4237, 4366, 8650, 6930, 7188, 608, 867, 6500, 7016, 7274, 7919, 8048, 436, 694, 8951, 3835, 6844, 7102}
8952  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': ','}
   {7361, 7490, 7619, 7748, 8393, 522, 3850, 780, 4237, 4366, 8651, 6931, 7189, 608, 868, 6501, 7017, 7275, 7920, 8049, 436, 694, 8952, 3835, 6845, 7103}
8953  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': ')'}
   {7104, 7362, 7491, 7620, 7749, 522, 3850, 780, 4237, 4366, 8394, 8652, 6932, 7190, 608, 869, 6502, 7018, 7276, 7921, 8050, 436, 694, 8953, 3835, 6846}
8954  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '-='}
   {7105, 7363, 7492, 7621, 7750, 522, 3850, 780, 4237, 4366, 8395, 8653, 6933, 7191, 608, 870, 6503, 7019, 7277, 7922, 8051, 436, 694, 8954, 3835, 6847}
8955  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'for'}
   {6848, 7106, 7364, 7493, 7622, 7751, 522, 3850, 780, 4237, 4366, 8396, 8654, 6934, 7192, 3835, 608, 871, 6504, 7020, 7278, 7923, 436, 8052, 694, 8955}
8956  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '>='}
   {6849, 7107, 7365, 7494, 7623, 7752, 522, 3850, 780, 4237, 4366, 8397, 8655, 6935, 7193, 608, 872, 6505, 7021, 7279, 436, 7924, 694, 8053, 3835, 8956}
8957  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'break'}
   {6850, 7108, 7366, 7495, 7624, 7753, 522, 3850, 780, 4237, 4366, 8398, 8656, 6936, 7194, 608, 873, 6506, 7022, 7280, 436, 7925, 694, 8054, 3835, 8957}
8958  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '^='}
   {6851, 7109, 7367, 7496, 7625, 522, 3850, 780, 4237, 4366, 7754, 8055, 8399, 8657, 6937, 7195, 608, 874, 6507, 7023, 7281, 436, 694, 7926, 3835, 8958}
8959  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '='}
   {6852, 7110, 7368, 7497, 522, 3850, 780, 4237, 4366, 7755, 7626, 8400, 8658, 6938, 7196, 608, 875, 6508, 7024, 7282, 436, 694, 7927, 8056, 3835, 8959}
8960  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'char'}
   {8960, 6853, 7111, 7369, 522, 3850, 780, 4237, 4366, 7756, 7498, 7627, 8401, 8659, 6939, 7197, 608, 876, 6509, 7025, 7283, 436, 694, 7928, 8057, 3835}
8961  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '&='}
   {8961, 6854, 7112, 522, 7370, 780, 4237, 3850, 4366, 7757, 7499, 7628, 8402, 8660, 6940, 7198, 608, 877, 6510, 7026, 7284, 436, 694, 7929, 8058, 3835}
8962  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '!='}
   {8962, 6855, 7113, 522, 7371, 780, 4237, 3850, 4366, 7758, 7500, 7629, 8403, 8661, 6941, 7199, 608, 8059, 878, 6511, 7027, 436, 7285, 694, 7930, 3835}
8963  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '*='}
   {8963, 6856, 522, 3850, 780, 7372, 4237, 4366, 7759, 7501, 7630, 7114, 8404, 8662, 6942, 7931, 7200, 608, 879, 6512, 436, 7028, 7286, 694, 3835, 8060}
8964  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '=='}
   {8964, 6857, 522, 3850, 780, 7373, 4237, 4366, 7760, 7502, 7631, 7115, 8405, 8663, 6943, 608, 7201, 880, 6513, 436, 7029, 694, 7287, 3835, 7932, 8061}
8965  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '&'}
   {8965, 522, 6858, 780, 4237, 7374, 3850, 4366, 7761, 7503, 7632, 7116, 8406, 8664, 608, 6944, 7202, 881, 6514, 436, 694, 7030, 7288, 3835, 7933, 8062}
8966  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '}'}
   {8966, 522, 6859, 780, 4237, 3850, 7375, 4366, 7504, 7762, 7633, 7117, 8407, 8665, 608, 6945, 7203, 882, 6515, 436, 694, 7031, 7289, 3835, 7934, 8063}
8967  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': ';'}
   {8064, 8967, 522, 3850, 780, 6860, 4237, 4366, 7376, 7505, 7634, 7763, 7118, 8408, 8666, 608, 6946, 7204, 883, 6516, 436, 694, 7032, 7290, 3835, 7935}
8968  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'while'}
   {7936, 8065, 8968, 522, 3850, 780, 6861, 4237, 4366, 7119, 7377, 7506, 7635, 7764, 8409, 8667, 3835, 608, 6947, 7205, 884, 6517, 694, 436, 7033, 7291}
8969  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '|='}
   {7937, 8066, 8969, 522, 3850, 780, 4237, 6862, 4366, 7120, 7378, 7507, 7636, 7765, 8410, 8668, 608, 6948, 7206, 436, 885, 6518, 694, 7034, 3835, 7292}
8970  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '<'}
   {7938, 7035, 8067, 522, 8970, 780, 4237, 3850, 6863, 4366, 7121, 7379, 7508, 7637, 7766, 8411, 8669, 608, 6949, 7207, 436, 886, 6519, 694, 3835, 7293}
8971  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'int'}
   {7939, 8068, 522, 8971, 780, 4237, 3850, 4366, 6864, 7122, 7380, 7509, 7638, 7767, 8412, 8670, 608, 6950, 7208, 436, 694, 887, 6520, 3835, 7036, 7294}
8972  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '/'}
   {7940, 8069, 522, 3850, 780, 8972, 4237, 4366, 6865, 7123, 7381, 7510, 7639, 7768, 8413, 8671, 608, 6951, 7209, 436, 694, 888, 6521, 3835, 7037, 7295}
8973  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'continue'}
   {7296, 7941, 8070, 522, 3850, 780, 8973, 4237, 4366, 6866, 7124, 7382, 7511, 7640, 7769, 8414, 608, 8672, 6952, 7210, 436, 694, 889, 6522, 3835, 7038}
8974  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '^'}
   {7297, 7942, 8071, 522, 3850, 780, 4237, 8974, 4366, 6867, 7125, 7383, 7512, 7641, 7770, 3835, 608, 8415, 8673, 6953, 7211, 436, 694, 890, 6523, 7039}
8975  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'else'}
   {7040, 7298, 7943, 8072, 522, 3850, 780, 4237, 4366, 8975, 6868, 7126, 7384, 7513, 7642, 7771, 3835, 608, 8416, 8674, 6954, 7212, 436, 694, 891, 6524}
8976  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'void'}
   {7041, 7299, 7944, 8073, 522, 3850, 780, 4237, 4366, 8976, 6869, 7127, 7385, 7514, 7643, 7772, 608, 8417, 8675, 6955, 7213, 436, 694, 3835, 892, 6525}
8977  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '+'}
   {7042, 7300, 7945, 522, 3850, 780, 4237, 4366, 8074, 8977, 6870, 7128, 7386, 7515, 7644, 7773, 608, 8418, 8676, 6956, 7214, 436, 694, 3835, 893, 6526}
8978  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '%'}
   {7043, 7301, 522, 3850, 780, 4237, 4366, 7946, 8075, 8978, 6871, 7129, 7387, 7516, 7645, 7774, 608, 8419, 8677, 6957, 7215, 436, 694, 3835, 894, 6527}
8979  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '/='}
   {6528, 7044, 7302, 522, 3850, 780, 4237, 4366, 7947, 8076, 8979, 6872, 7130, 7388, 7517, 7646, 7775, 608, 8420, 8678, 6958, 7216, 436, 694, 3835, 895}
8980  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '-'}
   {896, 6529, 7045, 7303, 522, 3850, 780, 4237, 4366, 7948, 8077, 8980, 6873, 7131, 7389, 7518, 7647, 608, 7776, 8421, 8679, 6959, 7217, 436, 694, 3835}
8981  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '('}
   {897, 6530, 7046, 7304, 522, 3850, 780, 4237, 4366, 7949, 8078, 8981, 6874, 7132, 7390, 7519, 608, 7777, 7648, 8422, 8680, 6960, 7218, 436, 694, 3835}
8982  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '>'}
   {898, 6531, 7047, 7305, 522, 3850, 780, 4237, 4366, 7950, 8079, 8982, 6875, 7133, 7391, 608, 7520, 7778, 7649, 8423, 8681, 6961, 7219, 436, 694, 3835}
8983  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '+='}
   {899, 6532, 7048, 522, 7306, 780, 4237, 3850, 4366, 7951, 8080, 8983, 6876, 7134, 608, 7392, 7521, 7779, 7650, 8424, 8682, 6962, 7220, 436, 694, 3835}
8984  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': 'return'}
   {900, 6533, 7049, 522, 7307, 780, 4237, 3850, 4366, 7952, 8081, 8984, 6877, 7135, 608, 7393, 7522, 7651, 7780, 8425, 8683, 6963, 436, 7221, 694, 3835}
8985  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '%='}
   {901, 6534, 522, 3850, 780, 7308, 4237, 4366, 7050, 7953, 8082, 8985, 6878, 608, 7136, 7394, 7523, 7652, 7781, 8426, 8684, 436, 6964, 7222, 694, 3835}
8986  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 7, 'origin': 80, 'isTer': False, 'accept': '<='}
   {902, 6535, 522, 3850, 780, 7309, 4237, 4366, 7051, 7954, 8083, 8986, 6879, 608, 7137, 7395, 7524, 7653, 7782, 8427, 8685, 436, 6965, 694, 7223, 3835}
8987  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'number'}
   {8987}
8988  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'if'}
   {8988}
8989  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'float'}
   {8989}
8990  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '{'}
   {8990}
8991  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '*'}
   {8991}
8992  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'double'}
   {8992}
8993  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'identifier'}
   {8993}
8994  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '#'}
   {8994}
8995  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': ','}
   {8995}
8996  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': ')'}
   {8996}
8997  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '-='}
   {8997}
8998  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'for'}
   {8998}
8999  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '>='}
   {8999}
9000  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'break'}
   {9000}
9001  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '^='}
   {9001}
9002  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '='}
   {9002}
9003  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'char'}
   {9003}
9004  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '&='}
   {9004}
9005  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '!='}
   {9005}
9006  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '*='}
   {9006}
9007  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '=='}
   {9007}
9008  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '&'}
   {9008}
9009  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '}'}
   {9009}
9010  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': ';'}
   {9010}
9011  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'while'}
   {9011}
9012  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '|='}
   {9012}
9013  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '<'}
   {9013}
9014  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'int'}
   {9014}
9015  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '/'}
   {9015}
9016  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'continue'}
   {9016}
9017  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '^'}
   {9017}
9018  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'else'}
   {9018}
9019  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'void'}
   {9019}
9020  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '+'}
   {9020}
9021  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '%'}
   {9021}
9022  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '/='}
   {9022}
9023  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '-'}
   {9023}
9024  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '('}
   {9024}
9025  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '>'}
   {9025}
9026  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '+='}
   {9026}
9027  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': 'return'}
   {9027}
9028  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '%='}
   {9028}
9029  {'left': 'iteration_statement', 'right': ['for', '(', 'declaration', 'expression', ';', 'assignment_expression', ')', 'statement'], 'point': 8, 'origin': 80, 'isTer': True, 'accept': '<='}
   {9029}
